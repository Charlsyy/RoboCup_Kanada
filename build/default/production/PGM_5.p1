Version 3.2 HI-TECH Software Intermediate Code
"427 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f1519.h
[v _PORTA `Vuc ~T0 @X0 0 e@12 ]
"489
[v _PORTB `Vuc ~T0 @X0 0 e@13 ]
"551
[v _PORTC `Vuc ~T0 @X0 0 e@14 ]
"613
[v _PORTD `Vuc ~T0 @X0 0 e@15 ]
"675
[v _PORTE `Vuc ~T0 @X0 0 e@16 ]
"2018
[v _LATA `Vuc ~T0 @X0 0 e@268 ]
"2080
[v _LATB `Vuc ~T0 @X0 0 e@269 ]
"2142
[v _LATC `Vuc ~T0 @X0 0 e@270 ]
"2204
[v _LATD `Vuc ~T0 @X0 0 e@271 ]
"2274
[v _LATE `Vuc ~T0 @X0 0 e@272 ]
"1129
[v _TRISA `Vuc ~T0 @X0 0 e@140 ]
"2424
[v _ANSELA `Vuc ~T0 @X0 0 e@396 ]
"1191
[v _TRISB `Vuc ~T0 @X0 0 e@141 ]
"2477
[v _ANSELB `Vuc ~T0 @X0 0 e@397 ]
"3213
[v _WPUB `Vuc ~T0 @X0 0 e@525 ]
"4210
[v _IOCBP `Vuc ~T0 @X0 0 e@916 ]
"4280
[v _IOCBN `Vuc ~T0 @X0 0 e@917 ]
"4350
[v _IOCBF `Vuc ~T0 @X0 0 e@918 ]
"1253
[v _TRISC `Vuc ~T0 @X0 0 e@142 ]
"2535
[v _ANSELC `Vuc ~T0 @X0 0 e@398 ]
"1315
[v _TRISD `Vuc ~T0 @X0 0 e@143 ]
"2597
[v _ANSELD `Vuc ~T0 @X0 0 e@399 ]
"1377
[v _TRISE `Vuc ~T0 @X0 0 e@144 ]
"2667
[v _ANSELE `Vuc ~T0 @X0 0 e@400 ]
"1872
[v _ADCON0 `Vuc ~T0 @X0 0 e@157 ]
"1952
[v _ADCON1 `Vuc ~T0 @X0 0 e@158 ]
"1505
[v _OPTION_REG `Vuc ~T0 @X0 0 e@149 ]
"349
[v _INTCON `Vuc ~T0 @X0 0 e@11 ]
"1409
[v _PIE1 `Vuc ~T0 @X0 0 e@145 ]
"713
[v _PIR1 `Vuc ~T0 @X0 0 e@17 ]
"1471
[v _PIE2 `Vuc ~T0 @X0 0 e@146 ]
"775
[v _PIR2 `Vuc ~T0 @X0 0 e@18 ]
"948
[v _T1GCON `Vuc ~T0 @X0 0 e@25 ]
"876
[v _T1CON `Vuc ~T0 @X0 0 e@24 ]
"809
[v _TMR0 `Vuc ~T0 @X0 0 e@21 ]
"3418
[v _SSPSTAT `Vuc ~T0 @X0 0 e@532 ]
"3342
[v _SSPADD `Vuc ~T0 @X0 0 e@530 ]
"3540
[v _SSPCON1 `Vuc ~T0 @X0 0 e@533 ]
"5151
[v _SSPIF `Vb ~T0 @X0 0 e@139 ]
"4759
[v _BCLIF `Vb ~T0 @X0 0 e@147 ]
"1038
[v _PR2 `Vuc ~T0 @X0 0 e@27 ]
"3995
[v _CCPR1L `Vuc ~T0 @X0 0 e@657 ]
"4035
[v _CCP1CON `Vuc ~T0 @X0 0 e@659 ]
"4106
[v _CCPR2L `Vuc ~T0 @X0 0 e@664 ]
"4146
[v _CCP2CON `Vuc ~T0 @X0 0 e@666 ]
"1058
[v _T2CON `Vuc ~T0 @X0 0 e@28 ]
"9 MLX_read.h
[v _I2C_Add `uc ~T0 @X0 0 e ]
"10
[v _MLX_Slave `Cuc ~T0 @X0 0 e ]
"5135 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f1519.h
[v _SEN `Vb ~T0 @X0 0 e@4272 ]
"3304
[v _SSPBUF `Vuc ~T0 @X0 0 e@529 ]
"11 MLX_read.h
[v _Register_R_MLX `uc ~T0 @X0 0 e ]
"5113 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f1519.h
[v _RSEN `Vb ~T0 @X0 0 e@4273 ]
"5079
[v _RCEN `Vb ~T0 @X0 0 e@4275 ]
"12 MLX_read.h
[v _Temperatur_LO_rechts `uc ~T0 @X0 0 e ]
"13
[v _Temperatur_LO_links `uc ~T0 @X0 0 e ]
"4663 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f1519.h
[v _ACKEN `Vb ~T0 @X0 0 e@4276 ]
"14 MLX_read.h
[v _Temperatur_HI_rechts `uc ~T0 @X0 0 e ]
"15
[v _Temperatur_HI_links `uc ~T0 @X0 0 e ]
"5021 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f1519.h
[v _PEN `Vb ~T0 @X0 0 e@4274 ]
[p mainexit ]
"5049
[v _RB1 `Vb ~T0 @X0 0 e@105 ]
"5233
[v _TMR1IE `Vb ~T0 @X0 0 e@1160 ]
"4923
[v _IOCIE `Vb ~T0 @X0 0 e@91 ]
"5217
[v _TMR0IE `Vb ~T0 @X0 0 e@93 ]
"5149
[v _SSPIE `Vb ~T0 @X0 0 e@1163 ]
"4869
[v _INTE `Vb ~T0 @X0 0 e@92 ]
"4685
[v _ADIE `Vb ~T0 @X0 0 e@1166 ]
[v F2176 `(v ~T0 @X0 1 tf1`ul ]
"153 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic.h
[v __delay `JF2176 ~T0 @X0 0 e ]
[p i __delay ]
"4859 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f1519.h
[v _GIE `Vb ~T0 @X0 0 e@95 ]
"4943
[v _LATA4 `Vb ~T0 @X0 0 e@2148 ]
"5097
[v _RD4 `Vb ~T0 @X0 0 e@124 ]
"174 PGM_5.c
[v _Werte_auf_LCD_anzeigen `(v ~T0 @X0 0 ef ]
"193
[v _kit_abwerfen `(v ~T0 @X0 0 ef ]
"189
[v _schwarzeplatte `(v ~T0 @X0 0 ef ]
"178
[v _anderwandlang `(v ~T0 @X0 0 ef ]
"191
[v _opfer `(v ~T0 @X0 0 ef ]
"192
[v _hindernis `(v ~T0 @X0 0 ef ]
"172
[v _Strecke_fahren `(v ~T0 @X0 0 ef2`uc`uc ]
"186
[v _von_sensor_VR_bis_mitte `(v ~T0 @X0 0 ef ]
"181
[v _ausrichten `(v ~T0 @X0 0 ef ]
"179
[v _rechts90grad `(v ~T0 @X0 0 ef ]
"195
[v _im_Kreis_faren `(v ~T0 @X0 0 ef ]
"187
[v _von_mitte_bis_wieder_wand `(v ~T0 @X0 0 ef ]
"180
[v _links90grad `(v ~T0 @X0 0 ef ]
"184
[v _links_ausrichten `(v ~T0 @X0 0 ef ]
"185
[v _rechts_ausrichten `(v ~T0 @X0 0 ef ]
"182
[v _vorne_ausrichten `(v ~T0 @X0 0 ef ]
"183
[v _hinten_ausrichten `(v ~T0 @X0 0 ef ]
"5219 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f1519.h
[v _TMR0IF `Vb ~T0 @X0 0 e@90 ]
"1852
[v _ADRESH `Vuc ~T0 @X0 0 e@156 ]
"4993
[v _LATD5 `Vb ~T0 @X0 0 e@2173 ]
"829
[v _TMR1 `Vus ~T0 @X0 0 e@22 ]
"5235
[v _TMR1IF `Vb ~T0 @X0 0 e@136 ]
"4863
[v _GO_nDONE `Vb ~T0 @X0 0 e@1257 ]
"4661
[v _ACKDT `Vb ~T0 @X0 0 e@4277 ]
"4925
[v _IOCIF `Vb ~T0 @X0 0 e@88 ]
"4875
[v _IOCBF0 `Vb ~T0 @X0 0 e@7344 ]
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 53: extern double atof(const char *);
[; ;stdlib.h: 54: extern double strtod(const char *, const char **);
[; ;stdlib.h: 55: extern int atoi(const char *);
[; ;stdlib.h: 56: extern unsigned xtoi(const char *);
[; ;stdlib.h: 57: extern long atol(const char *);
[; ;stdlib.h: 58: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 60: extern int rand(void);
[; ;stdlib.h: 61: extern void srand(unsigned int);
[; ;stdlib.h: 62: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 63: extern div_t div(int numer, int denom);
[; ;stdlib.h: 64: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 65: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 66: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 67: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 68: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 69: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 70: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 75: extern void * malloc(size_t);
[; ;stdlib.h: 76: extern void free(void *);
[; ;stdlib.h: 77: extern void * realloc(void *, size_t);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;stdlib.h: 86: extern int atexit(void (*)(void));
[; ;stdlib.h: 87: extern char * getenv(const char *);
[; ;stdlib.h: 88: extern char ** environ;
[; ;stdlib.h: 89: extern int system(char *);
[; ;stdlib.h: 90: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 91: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 92: extern int abs(int);
[; ;stdlib.h: 93: extern long labs(long);
[; ;stdlib.h: 95: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 96: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 101: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 102: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 104: extern char * ftoa(float f, int * status);
[; ;htc.h: 26: extern const char __xc8_OPTIM_SPEED;
[; ;htc.h: 28: extern double __fpnormalize(double);
[; ;pic16f1519.h: 50: extern volatile unsigned char INDF0 @ 0x000;
"52 C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic16f1519.h
[; ;pic16f1519.h: 52: asm("INDF0 equ 00h");
[; <" INDF0 equ 00h ;# ">
[; ;pic16f1519.h: 55: typedef union {
[; ;pic16f1519.h: 56: struct {
[; ;pic16f1519.h: 57: unsigned INDF0 :8;
[; ;pic16f1519.h: 58: };
[; ;pic16f1519.h: 59: } INDF0bits_t;
[; ;pic16f1519.h: 60: extern volatile INDF0bits_t INDF0bits @ 0x000;
[; ;pic16f1519.h: 70: extern volatile unsigned char INDF1 @ 0x001;
"72
[; ;pic16f1519.h: 72: asm("INDF1 equ 01h");
[; <" INDF1 equ 01h ;# ">
[; ;pic16f1519.h: 75: typedef union {
[; ;pic16f1519.h: 76: struct {
[; ;pic16f1519.h: 77: unsigned INDF1 :8;
[; ;pic16f1519.h: 78: };
[; ;pic16f1519.h: 79: } INDF1bits_t;
[; ;pic16f1519.h: 80: extern volatile INDF1bits_t INDF1bits @ 0x001;
[; ;pic16f1519.h: 90: extern volatile unsigned char PCL @ 0x002;
"92
[; ;pic16f1519.h: 92: asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
[; ;pic16f1519.h: 95: typedef union {
[; ;pic16f1519.h: 96: struct {
[; ;pic16f1519.h: 97: unsigned PCL :8;
[; ;pic16f1519.h: 98: };
[; ;pic16f1519.h: 99: } PCLbits_t;
[; ;pic16f1519.h: 100: extern volatile PCLbits_t PCLbits @ 0x002;
[; ;pic16f1519.h: 110: extern volatile unsigned char STATUS @ 0x003;
"112
[; ;pic16f1519.h: 112: asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
[; ;pic16f1519.h: 115: typedef union {
[; ;pic16f1519.h: 116: struct {
[; ;pic16f1519.h: 117: unsigned C :1;
[; ;pic16f1519.h: 118: unsigned DC :1;
[; ;pic16f1519.h: 119: unsigned Z :1;
[; ;pic16f1519.h: 120: unsigned nPD :1;
[; ;pic16f1519.h: 121: unsigned nTO :1;
[; ;pic16f1519.h: 122: };
[; ;pic16f1519.h: 123: struct {
[; ;pic16f1519.h: 124: unsigned CARRY :1;
[; ;pic16f1519.h: 125: unsigned :1;
[; ;pic16f1519.h: 126: unsigned ZERO :1;
[; ;pic16f1519.h: 127: };
[; ;pic16f1519.h: 128: } STATUSbits_t;
[; ;pic16f1519.h: 129: extern volatile STATUSbits_t STATUSbits @ 0x003;
[; ;pic16f1519.h: 169: extern volatile unsigned short FSR0 @ 0x004;
[; ;pic16f1519.h: 173: extern volatile unsigned char FSR0L @ 0x004;
"175
[; ;pic16f1519.h: 175: asm("FSR0L equ 04h");
[; <" FSR0L equ 04h ;# ">
[; ;pic16f1519.h: 178: typedef union {
[; ;pic16f1519.h: 179: struct {
[; ;pic16f1519.h: 180: unsigned FSR0L :8;
[; ;pic16f1519.h: 181: };
[; ;pic16f1519.h: 182: } FSR0Lbits_t;
[; ;pic16f1519.h: 183: extern volatile FSR0Lbits_t FSR0Lbits @ 0x004;
[; ;pic16f1519.h: 193: extern volatile unsigned char FSR0H @ 0x005;
"195
[; ;pic16f1519.h: 195: asm("FSR0H equ 05h");
[; <" FSR0H equ 05h ;# ">
[; ;pic16f1519.h: 198: typedef union {
[; ;pic16f1519.h: 199: struct {
[; ;pic16f1519.h: 200: unsigned FSR0H :8;
[; ;pic16f1519.h: 201: };
[; ;pic16f1519.h: 202: } FSR0Hbits_t;
[; ;pic16f1519.h: 203: extern volatile FSR0Hbits_t FSR0Hbits @ 0x005;
[; ;pic16f1519.h: 213: extern volatile unsigned short FSR1 @ 0x006;
[; ;pic16f1519.h: 217: extern volatile unsigned char FSR1L @ 0x006;
"219
[; ;pic16f1519.h: 219: asm("FSR1L equ 06h");
[; <" FSR1L equ 06h ;# ">
[; ;pic16f1519.h: 222: typedef union {
[; ;pic16f1519.h: 223: struct {
[; ;pic16f1519.h: 224: unsigned FSR1L :8;
[; ;pic16f1519.h: 225: };
[; ;pic16f1519.h: 226: } FSR1Lbits_t;
[; ;pic16f1519.h: 227: extern volatile FSR1Lbits_t FSR1Lbits @ 0x006;
[; ;pic16f1519.h: 237: extern volatile unsigned char FSR1H @ 0x007;
"239
[; ;pic16f1519.h: 239: asm("FSR1H equ 07h");
[; <" FSR1H equ 07h ;# ">
[; ;pic16f1519.h: 242: typedef union {
[; ;pic16f1519.h: 243: struct {
[; ;pic16f1519.h: 244: unsigned FSR1H :8;
[; ;pic16f1519.h: 245: };
[; ;pic16f1519.h: 246: } FSR1Hbits_t;
[; ;pic16f1519.h: 247: extern volatile FSR1Hbits_t FSR1Hbits @ 0x007;
[; ;pic16f1519.h: 257: extern volatile unsigned char BSR @ 0x008;
"259
[; ;pic16f1519.h: 259: asm("BSR equ 08h");
[; <" BSR equ 08h ;# ">
[; ;pic16f1519.h: 262: typedef union {
[; ;pic16f1519.h: 263: struct {
[; ;pic16f1519.h: 264: unsigned BSR :5;
[; ;pic16f1519.h: 265: };
[; ;pic16f1519.h: 266: struct {
[; ;pic16f1519.h: 267: unsigned BSR0 :1;
[; ;pic16f1519.h: 268: unsigned BSR1 :1;
[; ;pic16f1519.h: 269: unsigned BSR2 :1;
[; ;pic16f1519.h: 270: unsigned BSR3 :1;
[; ;pic16f1519.h: 271: unsigned BSR4 :1;
[; ;pic16f1519.h: 272: };
[; ;pic16f1519.h: 273: } BSRbits_t;
[; ;pic16f1519.h: 274: extern volatile BSRbits_t BSRbits @ 0x008;
[; ;pic16f1519.h: 309: extern volatile unsigned char WREG @ 0x009;
"311
[; ;pic16f1519.h: 311: asm("WREG equ 09h");
[; <" WREG equ 09h ;# ">
[; ;pic16f1519.h: 314: typedef union {
[; ;pic16f1519.h: 315: struct {
[; ;pic16f1519.h: 316: unsigned WREG0 :8;
[; ;pic16f1519.h: 317: };
[; ;pic16f1519.h: 318: } WREGbits_t;
[; ;pic16f1519.h: 319: extern volatile WREGbits_t WREGbits @ 0x009;
[; ;pic16f1519.h: 329: extern volatile unsigned char PCLATH @ 0x00A;
"331
[; ;pic16f1519.h: 331: asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
[; ;pic16f1519.h: 334: typedef union {
[; ;pic16f1519.h: 335: struct {
[; ;pic16f1519.h: 336: unsigned PCLATH :7;
[; ;pic16f1519.h: 337: };
[; ;pic16f1519.h: 338: } PCLATHbits_t;
[; ;pic16f1519.h: 339: extern volatile PCLATHbits_t PCLATHbits @ 0x00A;
[; ;pic16f1519.h: 349: extern volatile unsigned char INTCON @ 0x00B;
"351
[; ;pic16f1519.h: 351: asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
[; ;pic16f1519.h: 354: typedef union {
[; ;pic16f1519.h: 355: struct {
[; ;pic16f1519.h: 356: unsigned IOCIF :1;
[; ;pic16f1519.h: 357: unsigned INTF :1;
[; ;pic16f1519.h: 358: unsigned TMR0IF :1;
[; ;pic16f1519.h: 359: unsigned IOCIE :1;
[; ;pic16f1519.h: 360: unsigned INTE :1;
[; ;pic16f1519.h: 361: unsigned TMR0IE :1;
[; ;pic16f1519.h: 362: unsigned PEIE :1;
[; ;pic16f1519.h: 363: unsigned GIE :1;
[; ;pic16f1519.h: 364: };
[; ;pic16f1519.h: 365: struct {
[; ;pic16f1519.h: 366: unsigned :2;
[; ;pic16f1519.h: 367: unsigned T0IF :1;
[; ;pic16f1519.h: 368: unsigned :2;
[; ;pic16f1519.h: 369: unsigned T0IE :1;
[; ;pic16f1519.h: 370: };
[; ;pic16f1519.h: 371: } INTCONbits_t;
[; ;pic16f1519.h: 372: extern volatile INTCONbits_t INTCONbits @ 0x00B;
[; ;pic16f1519.h: 427: extern volatile unsigned char PORTA @ 0x00C;
"429
[; ;pic16f1519.h: 429: asm("PORTA equ 0Ch");
[; <" PORTA equ 0Ch ;# ">
[; ;pic16f1519.h: 432: typedef union {
[; ;pic16f1519.h: 433: struct {
[; ;pic16f1519.h: 434: unsigned RA0 :1;
[; ;pic16f1519.h: 435: unsigned RA1 :1;
[; ;pic16f1519.h: 436: unsigned RA2 :1;
[; ;pic16f1519.h: 437: unsigned RA3 :1;
[; ;pic16f1519.h: 438: unsigned RA4 :1;
[; ;pic16f1519.h: 439: unsigned RA5 :1;
[; ;pic16f1519.h: 440: unsigned RA6 :1;
[; ;pic16f1519.h: 441: unsigned RA7 :1;
[; ;pic16f1519.h: 442: };
[; ;pic16f1519.h: 443: } PORTAbits_t;
[; ;pic16f1519.h: 444: extern volatile PORTAbits_t PORTAbits @ 0x00C;
[; ;pic16f1519.h: 489: extern volatile unsigned char PORTB @ 0x00D;
"491
[; ;pic16f1519.h: 491: asm("PORTB equ 0Dh");
[; <" PORTB equ 0Dh ;# ">
[; ;pic16f1519.h: 494: typedef union {
[; ;pic16f1519.h: 495: struct {
[; ;pic16f1519.h: 496: unsigned RB0 :1;
[; ;pic16f1519.h: 497: unsigned RB1 :1;
[; ;pic16f1519.h: 498: unsigned RB2 :1;
[; ;pic16f1519.h: 499: unsigned RB3 :1;
[; ;pic16f1519.h: 500: unsigned RB4 :1;
[; ;pic16f1519.h: 501: unsigned RB5 :1;
[; ;pic16f1519.h: 502: unsigned RB6 :1;
[; ;pic16f1519.h: 503: unsigned RB7 :1;
[; ;pic16f1519.h: 504: };
[; ;pic16f1519.h: 505: } PORTBbits_t;
[; ;pic16f1519.h: 506: extern volatile PORTBbits_t PORTBbits @ 0x00D;
[; ;pic16f1519.h: 551: extern volatile unsigned char PORTC @ 0x00E;
"553
[; ;pic16f1519.h: 553: asm("PORTC equ 0Eh");
[; <" PORTC equ 0Eh ;# ">
[; ;pic16f1519.h: 556: typedef union {
[; ;pic16f1519.h: 557: struct {
[; ;pic16f1519.h: 558: unsigned RC0 :1;
[; ;pic16f1519.h: 559: unsigned RC1 :1;
[; ;pic16f1519.h: 560: unsigned RC2 :1;
[; ;pic16f1519.h: 561: unsigned RC3 :1;
[; ;pic16f1519.h: 562: unsigned RC4 :1;
[; ;pic16f1519.h: 563: unsigned RC5 :1;
[; ;pic16f1519.h: 564: unsigned RC6 :1;
[; ;pic16f1519.h: 565: unsigned RC7 :1;
[; ;pic16f1519.h: 566: };
[; ;pic16f1519.h: 567: } PORTCbits_t;
[; ;pic16f1519.h: 568: extern volatile PORTCbits_t PORTCbits @ 0x00E;
[; ;pic16f1519.h: 613: extern volatile unsigned char PORTD @ 0x00F;
"615
[; ;pic16f1519.h: 615: asm("PORTD equ 0Fh");
[; <" PORTD equ 0Fh ;# ">
[; ;pic16f1519.h: 618: typedef union {
[; ;pic16f1519.h: 619: struct {
[; ;pic16f1519.h: 620: unsigned RD0 :1;
[; ;pic16f1519.h: 621: unsigned RD1 :1;
[; ;pic16f1519.h: 622: unsigned RD2 :1;
[; ;pic16f1519.h: 623: unsigned RD3 :1;
[; ;pic16f1519.h: 624: unsigned RD4 :1;
[; ;pic16f1519.h: 625: unsigned RD5 :1;
[; ;pic16f1519.h: 626: unsigned RD6 :1;
[; ;pic16f1519.h: 627: unsigned RD7 :1;
[; ;pic16f1519.h: 628: };
[; ;pic16f1519.h: 629: } PORTDbits_t;
[; ;pic16f1519.h: 630: extern volatile PORTDbits_t PORTDbits @ 0x00F;
[; ;pic16f1519.h: 675: extern volatile unsigned char PORTE @ 0x010;
"677
[; ;pic16f1519.h: 677: asm("PORTE equ 010h");
[; <" PORTE equ 010h ;# ">
[; ;pic16f1519.h: 680: typedef union {
[; ;pic16f1519.h: 681: struct {
[; ;pic16f1519.h: 682: unsigned RE0 :1;
[; ;pic16f1519.h: 683: unsigned RE1 :1;
[; ;pic16f1519.h: 684: unsigned RE2 :1;
[; ;pic16f1519.h: 685: unsigned RE3 :1;
[; ;pic16f1519.h: 686: };
[; ;pic16f1519.h: 687: } PORTEbits_t;
[; ;pic16f1519.h: 688: extern volatile PORTEbits_t PORTEbits @ 0x010;
[; ;pic16f1519.h: 713: extern volatile unsigned char PIR1 @ 0x011;
"715
[; ;pic16f1519.h: 715: asm("PIR1 equ 011h");
[; <" PIR1 equ 011h ;# ">
[; ;pic16f1519.h: 718: typedef union {
[; ;pic16f1519.h: 719: struct {
[; ;pic16f1519.h: 720: unsigned TMR1IF :1;
[; ;pic16f1519.h: 721: unsigned TMR2IF :1;
[; ;pic16f1519.h: 722: unsigned CCP1IF :1;
[; ;pic16f1519.h: 723: unsigned SSPIF :1;
[; ;pic16f1519.h: 724: unsigned TXIF :1;
[; ;pic16f1519.h: 725: unsigned RCIF :1;
[; ;pic16f1519.h: 726: unsigned ADIF :1;
[; ;pic16f1519.h: 727: unsigned TMR1GIF :1;
[; ;pic16f1519.h: 728: };
[; ;pic16f1519.h: 729: } PIR1bits_t;
[; ;pic16f1519.h: 730: extern volatile PIR1bits_t PIR1bits @ 0x011;
[; ;pic16f1519.h: 775: extern volatile unsigned char PIR2 @ 0x012;
"777
[; ;pic16f1519.h: 777: asm("PIR2 equ 012h");
[; <" PIR2 equ 012h ;# ">
[; ;pic16f1519.h: 780: typedef union {
[; ;pic16f1519.h: 781: struct {
[; ;pic16f1519.h: 782: unsigned CCP2IF :1;
[; ;pic16f1519.h: 783: unsigned :2;
[; ;pic16f1519.h: 784: unsigned BCLIF :1;
[; ;pic16f1519.h: 785: unsigned :3;
[; ;pic16f1519.h: 786: unsigned OSFIF :1;
[; ;pic16f1519.h: 787: };
[; ;pic16f1519.h: 788: } PIR2bits_t;
[; ;pic16f1519.h: 789: extern volatile PIR2bits_t PIR2bits @ 0x012;
[; ;pic16f1519.h: 809: extern volatile unsigned char TMR0 @ 0x015;
"811
[; ;pic16f1519.h: 811: asm("TMR0 equ 015h");
[; <" TMR0 equ 015h ;# ">
[; ;pic16f1519.h: 814: typedef union {
[; ;pic16f1519.h: 815: struct {
[; ;pic16f1519.h: 816: unsigned TMR0 :8;
[; ;pic16f1519.h: 817: };
[; ;pic16f1519.h: 818: } TMR0bits_t;
[; ;pic16f1519.h: 819: extern volatile TMR0bits_t TMR0bits @ 0x015;
[; ;pic16f1519.h: 829: extern volatile unsigned short TMR1 @ 0x016;
"831
[; ;pic16f1519.h: 831: asm("TMR1 equ 016h");
[; <" TMR1 equ 016h ;# ">
[; ;pic16f1519.h: 836: extern volatile unsigned char TMR1L @ 0x016;
"838
[; ;pic16f1519.h: 838: asm("TMR1L equ 016h");
[; <" TMR1L equ 016h ;# ">
[; ;pic16f1519.h: 841: typedef union {
[; ;pic16f1519.h: 842: struct {
[; ;pic16f1519.h: 843: unsigned TMR1L :8;
[; ;pic16f1519.h: 844: };
[; ;pic16f1519.h: 845: } TMR1Lbits_t;
[; ;pic16f1519.h: 846: extern volatile TMR1Lbits_t TMR1Lbits @ 0x016;
[; ;pic16f1519.h: 856: extern volatile unsigned char TMR1H @ 0x017;
"858
[; ;pic16f1519.h: 858: asm("TMR1H equ 017h");
[; <" TMR1H equ 017h ;# ">
[; ;pic16f1519.h: 861: typedef union {
[; ;pic16f1519.h: 862: struct {
[; ;pic16f1519.h: 863: unsigned TMR1H :8;
[; ;pic16f1519.h: 864: };
[; ;pic16f1519.h: 865: } TMR1Hbits_t;
[; ;pic16f1519.h: 866: extern volatile TMR1Hbits_t TMR1Hbits @ 0x017;
[; ;pic16f1519.h: 876: extern volatile unsigned char T1CON @ 0x018;
"878
[; ;pic16f1519.h: 878: asm("T1CON equ 018h");
[; <" T1CON equ 018h ;# ">
[; ;pic16f1519.h: 881: typedef union {
[; ;pic16f1519.h: 882: struct {
[; ;pic16f1519.h: 883: unsigned TMR1ON :1;
[; ;pic16f1519.h: 884: unsigned :1;
[; ;pic16f1519.h: 885: unsigned nT1SYNC :1;
[; ;pic16f1519.h: 886: unsigned T1OSCEN :1;
[; ;pic16f1519.h: 887: unsigned T1CKPS :2;
[; ;pic16f1519.h: 888: unsigned TMR1CS :2;
[; ;pic16f1519.h: 889: };
[; ;pic16f1519.h: 890: struct {
[; ;pic16f1519.h: 891: unsigned :4;
[; ;pic16f1519.h: 892: unsigned T1CKPS0 :1;
[; ;pic16f1519.h: 893: unsigned T1CKPS1 :1;
[; ;pic16f1519.h: 894: unsigned TMR1CS0 :1;
[; ;pic16f1519.h: 895: unsigned TMR1CS1 :1;
[; ;pic16f1519.h: 896: };
[; ;pic16f1519.h: 897: } T1CONbits_t;
[; ;pic16f1519.h: 898: extern volatile T1CONbits_t T1CONbits @ 0x018;
[; ;pic16f1519.h: 948: extern volatile unsigned char T1GCON @ 0x019;
"950
[; ;pic16f1519.h: 950: asm("T1GCON equ 019h");
[; <" T1GCON equ 019h ;# ">
[; ;pic16f1519.h: 953: typedef union {
[; ;pic16f1519.h: 954: struct {
[; ;pic16f1519.h: 955: unsigned T1GSS :2;
[; ;pic16f1519.h: 956: unsigned T1GVAL :1;
[; ;pic16f1519.h: 957: unsigned T1GGO_nDONE :1;
[; ;pic16f1519.h: 958: unsigned T1GSPM :1;
[; ;pic16f1519.h: 959: unsigned T1GTM :1;
[; ;pic16f1519.h: 960: unsigned T1GPOL :1;
[; ;pic16f1519.h: 961: unsigned TMR1GE :1;
[; ;pic16f1519.h: 962: };
[; ;pic16f1519.h: 963: struct {
[; ;pic16f1519.h: 964: unsigned T1GSS0 :1;
[; ;pic16f1519.h: 965: unsigned T1GSS1 :1;
[; ;pic16f1519.h: 966: };
[; ;pic16f1519.h: 967: } T1GCONbits_t;
[; ;pic16f1519.h: 968: extern volatile T1GCONbits_t T1GCONbits @ 0x019;
[; ;pic16f1519.h: 1018: extern volatile unsigned char TMR2 @ 0x01A;
"1020
[; ;pic16f1519.h: 1020: asm("TMR2 equ 01Ah");
[; <" TMR2 equ 01Ah ;# ">
[; ;pic16f1519.h: 1023: typedef union {
[; ;pic16f1519.h: 1024: struct {
[; ;pic16f1519.h: 1025: unsigned TMR2 :8;
[; ;pic16f1519.h: 1026: };
[; ;pic16f1519.h: 1027: } TMR2bits_t;
[; ;pic16f1519.h: 1028: extern volatile TMR2bits_t TMR2bits @ 0x01A;
[; ;pic16f1519.h: 1038: extern volatile unsigned char PR2 @ 0x01B;
"1040
[; ;pic16f1519.h: 1040: asm("PR2 equ 01Bh");
[; <" PR2 equ 01Bh ;# ">
[; ;pic16f1519.h: 1043: typedef union {
[; ;pic16f1519.h: 1044: struct {
[; ;pic16f1519.h: 1045: unsigned PR2 :8;
[; ;pic16f1519.h: 1046: };
[; ;pic16f1519.h: 1047: } PR2bits_t;
[; ;pic16f1519.h: 1048: extern volatile PR2bits_t PR2bits @ 0x01B;
[; ;pic16f1519.h: 1058: extern volatile unsigned char T2CON @ 0x01C;
"1060
[; ;pic16f1519.h: 1060: asm("T2CON equ 01Ch");
[; <" T2CON equ 01Ch ;# ">
[; ;pic16f1519.h: 1063: typedef union {
[; ;pic16f1519.h: 1064: struct {
[; ;pic16f1519.h: 1065: unsigned T2CKPS :2;
[; ;pic16f1519.h: 1066: unsigned TMR2ON :1;
[; ;pic16f1519.h: 1067: unsigned T2OUTPS :4;
[; ;pic16f1519.h: 1068: };
[; ;pic16f1519.h: 1069: struct {
[; ;pic16f1519.h: 1070: unsigned T2CKPS0 :1;
[; ;pic16f1519.h: 1071: unsigned T2CKPS1 :1;
[; ;pic16f1519.h: 1072: unsigned :1;
[; ;pic16f1519.h: 1073: unsigned T2OUTPS0 :1;
[; ;pic16f1519.h: 1074: unsigned T2OUTPS1 :1;
[; ;pic16f1519.h: 1075: unsigned T2OUTPS2 :1;
[; ;pic16f1519.h: 1076: unsigned T2OUTPS3 :1;
[; ;pic16f1519.h: 1077: };
[; ;pic16f1519.h: 1078: } T2CONbits_t;
[; ;pic16f1519.h: 1079: extern volatile T2CONbits_t T2CONbits @ 0x01C;
[; ;pic16f1519.h: 1129: extern volatile unsigned char TRISA @ 0x08C;
"1131
[; ;pic16f1519.h: 1131: asm("TRISA equ 08Ch");
[; <" TRISA equ 08Ch ;# ">
[; ;pic16f1519.h: 1134: typedef union {
[; ;pic16f1519.h: 1135: struct {
[; ;pic16f1519.h: 1136: unsigned TRISA0 :1;
[; ;pic16f1519.h: 1137: unsigned TRISA1 :1;
[; ;pic16f1519.h: 1138: unsigned TRISA2 :1;
[; ;pic16f1519.h: 1139: unsigned TRISA3 :1;
[; ;pic16f1519.h: 1140: unsigned TRISA4 :1;
[; ;pic16f1519.h: 1141: unsigned TRISA5 :1;
[; ;pic16f1519.h: 1142: unsigned TRISA6 :1;
[; ;pic16f1519.h: 1143: unsigned TRISA7 :1;
[; ;pic16f1519.h: 1144: };
[; ;pic16f1519.h: 1145: } TRISAbits_t;
[; ;pic16f1519.h: 1146: extern volatile TRISAbits_t TRISAbits @ 0x08C;
[; ;pic16f1519.h: 1191: extern volatile unsigned char TRISB @ 0x08D;
"1193
[; ;pic16f1519.h: 1193: asm("TRISB equ 08Dh");
[; <" TRISB equ 08Dh ;# ">
[; ;pic16f1519.h: 1196: typedef union {
[; ;pic16f1519.h: 1197: struct {
[; ;pic16f1519.h: 1198: unsigned TRISB0 :1;
[; ;pic16f1519.h: 1199: unsigned TRISB1 :1;
[; ;pic16f1519.h: 1200: unsigned TRISB2 :1;
[; ;pic16f1519.h: 1201: unsigned TRISB3 :1;
[; ;pic16f1519.h: 1202: unsigned TRISB4 :1;
[; ;pic16f1519.h: 1203: unsigned TRISB5 :1;
[; ;pic16f1519.h: 1204: unsigned TRISB6 :1;
[; ;pic16f1519.h: 1205: unsigned TRISB7 :1;
[; ;pic16f1519.h: 1206: };
[; ;pic16f1519.h: 1207: } TRISBbits_t;
[; ;pic16f1519.h: 1208: extern volatile TRISBbits_t TRISBbits @ 0x08D;
[; ;pic16f1519.h: 1253: extern volatile unsigned char TRISC @ 0x08E;
"1255
[; ;pic16f1519.h: 1255: asm("TRISC equ 08Eh");
[; <" TRISC equ 08Eh ;# ">
[; ;pic16f1519.h: 1258: typedef union {
[; ;pic16f1519.h: 1259: struct {
[; ;pic16f1519.h: 1260: unsigned TRISC0 :1;
[; ;pic16f1519.h: 1261: unsigned TRISC1 :1;
[; ;pic16f1519.h: 1262: unsigned TRISC2 :1;
[; ;pic16f1519.h: 1263: unsigned TRISC3 :1;
[; ;pic16f1519.h: 1264: unsigned TRISC4 :1;
[; ;pic16f1519.h: 1265: unsigned TRISC5 :1;
[; ;pic16f1519.h: 1266: unsigned TRISC6 :1;
[; ;pic16f1519.h: 1267: unsigned TRISC7 :1;
[; ;pic16f1519.h: 1268: };
[; ;pic16f1519.h: 1269: } TRISCbits_t;
[; ;pic16f1519.h: 1270: extern volatile TRISCbits_t TRISCbits @ 0x08E;
[; ;pic16f1519.h: 1315: extern volatile unsigned char TRISD @ 0x08F;
"1317
[; ;pic16f1519.h: 1317: asm("TRISD equ 08Fh");
[; <" TRISD equ 08Fh ;# ">
[; ;pic16f1519.h: 1320: typedef union {
[; ;pic16f1519.h: 1321: struct {
[; ;pic16f1519.h: 1322: unsigned TRISD0 :1;
[; ;pic16f1519.h: 1323: unsigned TRISD1 :1;
[; ;pic16f1519.h: 1324: unsigned TRISD2 :1;
[; ;pic16f1519.h: 1325: unsigned TRISD3 :1;
[; ;pic16f1519.h: 1326: unsigned TRISD4 :1;
[; ;pic16f1519.h: 1327: unsigned TRISD5 :1;
[; ;pic16f1519.h: 1328: unsigned TRISD6 :1;
[; ;pic16f1519.h: 1329: unsigned TRISD7 :1;
[; ;pic16f1519.h: 1330: };
[; ;pic16f1519.h: 1331: } TRISDbits_t;
[; ;pic16f1519.h: 1332: extern volatile TRISDbits_t TRISDbits @ 0x08F;
[; ;pic16f1519.h: 1377: extern volatile unsigned char TRISE @ 0x090;
"1379
[; ;pic16f1519.h: 1379: asm("TRISE equ 090h");
[; <" TRISE equ 090h ;# ">
[; ;pic16f1519.h: 1382: typedef union {
[; ;pic16f1519.h: 1383: struct {
[; ;pic16f1519.h: 1384: unsigned TRISE0 :1;
[; ;pic16f1519.h: 1385: unsigned TRISE1 :1;
[; ;pic16f1519.h: 1386: unsigned TRISE2 :1;
[; ;pic16f1519.h: 1387: };
[; ;pic16f1519.h: 1388: } TRISEbits_t;
[; ;pic16f1519.h: 1389: extern volatile TRISEbits_t TRISEbits @ 0x090;
[; ;pic16f1519.h: 1409: extern volatile unsigned char PIE1 @ 0x091;
"1411
[; ;pic16f1519.h: 1411: asm("PIE1 equ 091h");
[; <" PIE1 equ 091h ;# ">
[; ;pic16f1519.h: 1414: typedef union {
[; ;pic16f1519.h: 1415: struct {
[; ;pic16f1519.h: 1416: unsigned TMR1IE :1;
[; ;pic16f1519.h: 1417: unsigned TMR2IE :1;
[; ;pic16f1519.h: 1418: unsigned CCP1IE :1;
[; ;pic16f1519.h: 1419: unsigned SSPIE :1;
[; ;pic16f1519.h: 1420: unsigned TXIE :1;
[; ;pic16f1519.h: 1421: unsigned RCIE :1;
[; ;pic16f1519.h: 1422: unsigned ADIE :1;
[; ;pic16f1519.h: 1423: unsigned TMR1GIE :1;
[; ;pic16f1519.h: 1424: };
[; ;pic16f1519.h: 1425: } PIE1bits_t;
[; ;pic16f1519.h: 1426: extern volatile PIE1bits_t PIE1bits @ 0x091;
[; ;pic16f1519.h: 1471: extern volatile unsigned char PIE2 @ 0x092;
"1473
[; ;pic16f1519.h: 1473: asm("PIE2 equ 092h");
[; <" PIE2 equ 092h ;# ">
[; ;pic16f1519.h: 1476: typedef union {
[; ;pic16f1519.h: 1477: struct {
[; ;pic16f1519.h: 1478: unsigned CCP2IE :1;
[; ;pic16f1519.h: 1479: unsigned :2;
[; ;pic16f1519.h: 1480: unsigned BCLIE :1;
[; ;pic16f1519.h: 1481: unsigned :3;
[; ;pic16f1519.h: 1482: unsigned OSFIE :1;
[; ;pic16f1519.h: 1483: };
[; ;pic16f1519.h: 1484: } PIE2bits_t;
[; ;pic16f1519.h: 1485: extern volatile PIE2bits_t PIE2bits @ 0x092;
[; ;pic16f1519.h: 1505: extern volatile unsigned char OPTION_REG @ 0x095;
"1507
[; ;pic16f1519.h: 1507: asm("OPTION_REG equ 095h");
[; <" OPTION_REG equ 095h ;# ">
[; ;pic16f1519.h: 1510: typedef union {
[; ;pic16f1519.h: 1511: struct {
[; ;pic16f1519.h: 1512: unsigned PS :3;
[; ;pic16f1519.h: 1513: unsigned PSA :1;
[; ;pic16f1519.h: 1514: unsigned TMR0SE :1;
[; ;pic16f1519.h: 1515: unsigned TMR0CS :1;
[; ;pic16f1519.h: 1516: unsigned INTEDG :1;
[; ;pic16f1519.h: 1517: unsigned nWPUEN :1;
[; ;pic16f1519.h: 1518: };
[; ;pic16f1519.h: 1519: struct {
[; ;pic16f1519.h: 1520: unsigned PS0 :1;
[; ;pic16f1519.h: 1521: unsigned PS1 :1;
[; ;pic16f1519.h: 1522: unsigned PS2 :1;
[; ;pic16f1519.h: 1523: unsigned :1;
[; ;pic16f1519.h: 1524: unsigned T0SE :1;
[; ;pic16f1519.h: 1525: unsigned T0CS :1;
[; ;pic16f1519.h: 1526: };
[; ;pic16f1519.h: 1527: } OPTION_REGbits_t;
[; ;pic16f1519.h: 1528: extern volatile OPTION_REGbits_t OPTION_REGbits @ 0x095;
[; ;pic16f1519.h: 1588: extern volatile unsigned char PCON @ 0x096;
"1590
[; ;pic16f1519.h: 1590: asm("PCON equ 096h");
[; <" PCON equ 096h ;# ">
[; ;pic16f1519.h: 1593: typedef union {
[; ;pic16f1519.h: 1594: struct {
[; ;pic16f1519.h: 1595: unsigned nBOR :1;
[; ;pic16f1519.h: 1596: unsigned nPOR :1;
[; ;pic16f1519.h: 1597: unsigned nRI :1;
[; ;pic16f1519.h: 1598: unsigned nRMCLR :1;
[; ;pic16f1519.h: 1599: unsigned nRWDT :1;
[; ;pic16f1519.h: 1600: unsigned :1;
[; ;pic16f1519.h: 1601: unsigned STKUNF :1;
[; ;pic16f1519.h: 1602: unsigned STKOVF :1;
[; ;pic16f1519.h: 1603: };
[; ;pic16f1519.h: 1604: } PCONbits_t;
[; ;pic16f1519.h: 1605: extern volatile PCONbits_t PCONbits @ 0x096;
[; ;pic16f1519.h: 1645: extern volatile unsigned char WDTCON @ 0x097;
"1647
[; ;pic16f1519.h: 1647: asm("WDTCON equ 097h");
[; <" WDTCON equ 097h ;# ">
[; ;pic16f1519.h: 1650: typedef union {
[; ;pic16f1519.h: 1651: struct {
[; ;pic16f1519.h: 1652: unsigned SWDTEN :1;
[; ;pic16f1519.h: 1653: unsigned WDTPS :5;
[; ;pic16f1519.h: 1654: };
[; ;pic16f1519.h: 1655: struct {
[; ;pic16f1519.h: 1656: unsigned :1;
[; ;pic16f1519.h: 1657: unsigned WDTPS0 :1;
[; ;pic16f1519.h: 1658: unsigned WDTPS1 :1;
[; ;pic16f1519.h: 1659: unsigned WDTPS2 :1;
[; ;pic16f1519.h: 1660: unsigned WDTPS3 :1;
[; ;pic16f1519.h: 1661: unsigned WDTPS4 :1;
[; ;pic16f1519.h: 1662: };
[; ;pic16f1519.h: 1663: } WDTCONbits_t;
[; ;pic16f1519.h: 1664: extern volatile WDTCONbits_t WDTCONbits @ 0x097;
[; ;pic16f1519.h: 1704: extern volatile unsigned char OSCCON @ 0x099;
"1706
[; ;pic16f1519.h: 1706: asm("OSCCON equ 099h");
[; <" OSCCON equ 099h ;# ">
[; ;pic16f1519.h: 1709: typedef union {
[; ;pic16f1519.h: 1710: struct {
[; ;pic16f1519.h: 1711: unsigned SCS :2;
[; ;pic16f1519.h: 1712: unsigned :1;
[; ;pic16f1519.h: 1713: unsigned IRCF :4;
[; ;pic16f1519.h: 1714: };
[; ;pic16f1519.h: 1715: struct {
[; ;pic16f1519.h: 1716: unsigned SCS0 :1;
[; ;pic16f1519.h: 1717: unsigned SCS1 :1;
[; ;pic16f1519.h: 1718: unsigned :1;
[; ;pic16f1519.h: 1719: unsigned IRCF0 :1;
[; ;pic16f1519.h: 1720: unsigned IRCF1 :1;
[; ;pic16f1519.h: 1721: unsigned IRCF2 :1;
[; ;pic16f1519.h: 1722: unsigned IRCF3 :1;
[; ;pic16f1519.h: 1723: };
[; ;pic16f1519.h: 1724: } OSCCONbits_t;
[; ;pic16f1519.h: 1725: extern volatile OSCCONbits_t OSCCONbits @ 0x099;
[; ;pic16f1519.h: 1770: extern volatile unsigned char OSCSTAT @ 0x09A;
"1772
[; ;pic16f1519.h: 1772: asm("OSCSTAT equ 09Ah");
[; <" OSCSTAT equ 09Ah ;# ">
[; ;pic16f1519.h: 1775: typedef union {
[; ;pic16f1519.h: 1776: struct {
[; ;pic16f1519.h: 1777: unsigned HFIOFS :1;
[; ;pic16f1519.h: 1778: unsigned LFIOFR :1;
[; ;pic16f1519.h: 1779: unsigned :2;
[; ;pic16f1519.h: 1780: unsigned HFIOFR :1;
[; ;pic16f1519.h: 1781: unsigned OSTS :1;
[; ;pic16f1519.h: 1782: unsigned :1;
[; ;pic16f1519.h: 1783: unsigned SOSCR :1;
[; ;pic16f1519.h: 1784: };
[; ;pic16f1519.h: 1785: struct {
[; ;pic16f1519.h: 1786: unsigned :7;
[; ;pic16f1519.h: 1787: unsigned T1OSCR :1;
[; ;pic16f1519.h: 1788: };
[; ;pic16f1519.h: 1789: } OSCSTATbits_t;
[; ;pic16f1519.h: 1790: extern volatile OSCSTATbits_t OSCSTATbits @ 0x09A;
[; ;pic16f1519.h: 1825: extern volatile unsigned short ADRES @ 0x09B;
"1827
[; ;pic16f1519.h: 1827: asm("ADRES equ 09Bh");
[; <" ADRES equ 09Bh ;# ">
[; ;pic16f1519.h: 1832: extern volatile unsigned char ADRESL @ 0x09B;
"1834
[; ;pic16f1519.h: 1834: asm("ADRESL equ 09Bh");
[; <" ADRESL equ 09Bh ;# ">
[; ;pic16f1519.h: 1837: typedef union {
[; ;pic16f1519.h: 1838: struct {
[; ;pic16f1519.h: 1839: unsigned ADRESL :8;
[; ;pic16f1519.h: 1840: };
[; ;pic16f1519.h: 1841: } ADRESLbits_t;
[; ;pic16f1519.h: 1842: extern volatile ADRESLbits_t ADRESLbits @ 0x09B;
[; ;pic16f1519.h: 1852: extern volatile unsigned char ADRESH @ 0x09C;
"1854
[; ;pic16f1519.h: 1854: asm("ADRESH equ 09Ch");
[; <" ADRESH equ 09Ch ;# ">
[; ;pic16f1519.h: 1857: typedef union {
[; ;pic16f1519.h: 1858: struct {
[; ;pic16f1519.h: 1859: unsigned ADRESH :8;
[; ;pic16f1519.h: 1860: };
[; ;pic16f1519.h: 1861: } ADRESHbits_t;
[; ;pic16f1519.h: 1862: extern volatile ADRESHbits_t ADRESHbits @ 0x09C;
[; ;pic16f1519.h: 1872: extern volatile unsigned char ADCON0 @ 0x09D;
"1874
[; ;pic16f1519.h: 1874: asm("ADCON0 equ 09Dh");
[; <" ADCON0 equ 09Dh ;# ">
[; ;pic16f1519.h: 1877: typedef union {
[; ;pic16f1519.h: 1878: struct {
[; ;pic16f1519.h: 1879: unsigned ADON :1;
[; ;pic16f1519.h: 1880: unsigned GO_nDONE :1;
[; ;pic16f1519.h: 1881: unsigned CHS :5;
[; ;pic16f1519.h: 1882: };
[; ;pic16f1519.h: 1883: struct {
[; ;pic16f1519.h: 1884: unsigned :1;
[; ;pic16f1519.h: 1885: unsigned ADGO :1;
[; ;pic16f1519.h: 1886: unsigned CHS0 :1;
[; ;pic16f1519.h: 1887: unsigned CHS1 :1;
[; ;pic16f1519.h: 1888: unsigned CHS2 :1;
[; ;pic16f1519.h: 1889: unsigned CHS3 :1;
[; ;pic16f1519.h: 1890: unsigned CHS4 :1;
[; ;pic16f1519.h: 1891: };
[; ;pic16f1519.h: 1892: struct {
[; ;pic16f1519.h: 1893: unsigned :1;
[; ;pic16f1519.h: 1894: unsigned GO :1;
[; ;pic16f1519.h: 1895: };
[; ;pic16f1519.h: 1896: } ADCON0bits_t;
[; ;pic16f1519.h: 1897: extern volatile ADCON0bits_t ADCON0bits @ 0x09D;
[; ;pic16f1519.h: 1952: extern volatile unsigned char ADCON1 @ 0x09E;
"1954
[; ;pic16f1519.h: 1954: asm("ADCON1 equ 09Eh");
[; <" ADCON1 equ 09Eh ;# ">
[; ;pic16f1519.h: 1957: typedef union {
[; ;pic16f1519.h: 1958: struct {
[; ;pic16f1519.h: 1959: unsigned ADPREF :2;
[; ;pic16f1519.h: 1960: unsigned :2;
[; ;pic16f1519.h: 1961: unsigned ADCS :3;
[; ;pic16f1519.h: 1962: unsigned ADFM :1;
[; ;pic16f1519.h: 1963: };
[; ;pic16f1519.h: 1964: struct {
[; ;pic16f1519.h: 1965: unsigned ADPREF0 :1;
[; ;pic16f1519.h: 1966: unsigned ADPREF1 :1;
[; ;pic16f1519.h: 1967: unsigned :2;
[; ;pic16f1519.h: 1968: unsigned ADCS0 :1;
[; ;pic16f1519.h: 1969: unsigned ADCS1 :1;
[; ;pic16f1519.h: 1970: unsigned ADCS2 :1;
[; ;pic16f1519.h: 1971: };
[; ;pic16f1519.h: 1972: } ADCON1bits_t;
[; ;pic16f1519.h: 1973: extern volatile ADCON1bits_t ADCON1bits @ 0x09E;
[; ;pic16f1519.h: 2018: extern volatile unsigned char LATA @ 0x10C;
"2020
[; ;pic16f1519.h: 2020: asm("LATA equ 010Ch");
[; <" LATA equ 010Ch ;# ">
[; ;pic16f1519.h: 2023: typedef union {
[; ;pic16f1519.h: 2024: struct {
[; ;pic16f1519.h: 2025: unsigned LATA0 :1;
[; ;pic16f1519.h: 2026: unsigned LATA1 :1;
[; ;pic16f1519.h: 2027: unsigned LATA2 :1;
[; ;pic16f1519.h: 2028: unsigned LATA3 :1;
[; ;pic16f1519.h: 2029: unsigned LATA4 :1;
[; ;pic16f1519.h: 2030: unsigned LATA5 :1;
[; ;pic16f1519.h: 2031: unsigned LATA6 :1;
[; ;pic16f1519.h: 2032: unsigned LATA7 :1;
[; ;pic16f1519.h: 2033: };
[; ;pic16f1519.h: 2034: } LATAbits_t;
[; ;pic16f1519.h: 2035: extern volatile LATAbits_t LATAbits @ 0x10C;
[; ;pic16f1519.h: 2080: extern volatile unsigned char LATB @ 0x10D;
"2082
[; ;pic16f1519.h: 2082: asm("LATB equ 010Dh");
[; <" LATB equ 010Dh ;# ">
[; ;pic16f1519.h: 2085: typedef union {
[; ;pic16f1519.h: 2086: struct {
[; ;pic16f1519.h: 2087: unsigned LATB0 :1;
[; ;pic16f1519.h: 2088: unsigned LATB1 :1;
[; ;pic16f1519.h: 2089: unsigned LATB2 :1;
[; ;pic16f1519.h: 2090: unsigned LATB3 :1;
[; ;pic16f1519.h: 2091: unsigned LATB4 :1;
[; ;pic16f1519.h: 2092: unsigned LATB5 :1;
[; ;pic16f1519.h: 2093: unsigned LATB6 :1;
[; ;pic16f1519.h: 2094: unsigned LATB7 :1;
[; ;pic16f1519.h: 2095: };
[; ;pic16f1519.h: 2096: } LATBbits_t;
[; ;pic16f1519.h: 2097: extern volatile LATBbits_t LATBbits @ 0x10D;
[; ;pic16f1519.h: 2142: extern volatile unsigned char LATC @ 0x10E;
"2144
[; ;pic16f1519.h: 2144: asm("LATC equ 010Eh");
[; <" LATC equ 010Eh ;# ">
[; ;pic16f1519.h: 2147: typedef union {
[; ;pic16f1519.h: 2148: struct {
[; ;pic16f1519.h: 2149: unsigned LATC0 :1;
[; ;pic16f1519.h: 2150: unsigned LATC1 :1;
[; ;pic16f1519.h: 2151: unsigned LATC2 :1;
[; ;pic16f1519.h: 2152: unsigned LATC3 :1;
[; ;pic16f1519.h: 2153: unsigned LATC4 :1;
[; ;pic16f1519.h: 2154: unsigned LATC5 :1;
[; ;pic16f1519.h: 2155: unsigned LATC6 :1;
[; ;pic16f1519.h: 2156: unsigned LATC7 :1;
[; ;pic16f1519.h: 2157: };
[; ;pic16f1519.h: 2158: } LATCbits_t;
[; ;pic16f1519.h: 2159: extern volatile LATCbits_t LATCbits @ 0x10E;
[; ;pic16f1519.h: 2204: extern volatile unsigned char LATD @ 0x10F;
"2206
[; ;pic16f1519.h: 2206: asm("LATD equ 010Fh");
[; <" LATD equ 010Fh ;# ">
[; ;pic16f1519.h: 2209: typedef union {
[; ;pic16f1519.h: 2210: struct {
[; ;pic16f1519.h: 2211: unsigned LATD0 :1;
[; ;pic16f1519.h: 2212: unsigned LATD1 :1;
[; ;pic16f1519.h: 2213: unsigned LATD2 :1;
[; ;pic16f1519.h: 2214: unsigned LATD3 :1;
[; ;pic16f1519.h: 2215: unsigned LATD4 :1;
[; ;pic16f1519.h: 2216: unsigned LATD5 :1;
[; ;pic16f1519.h: 2217: unsigned LATD6 :1;
[; ;pic16f1519.h: 2218: unsigned LATD7 :1;
[; ;pic16f1519.h: 2219: };
[; ;pic16f1519.h: 2220: struct {
[; ;pic16f1519.h: 2221: unsigned LATD :8;
[; ;pic16f1519.h: 2222: };
[; ;pic16f1519.h: 2223: } LATDbits_t;
[; ;pic16f1519.h: 2224: extern volatile LATDbits_t LATDbits @ 0x10F;
[; ;pic16f1519.h: 2274: extern volatile unsigned char LATE @ 0x110;
"2276
[; ;pic16f1519.h: 2276: asm("LATE equ 0110h");
[; <" LATE equ 0110h ;# ">
[; ;pic16f1519.h: 2279: typedef union {
[; ;pic16f1519.h: 2280: struct {
[; ;pic16f1519.h: 2281: unsigned LATE0 :1;
[; ;pic16f1519.h: 2282: unsigned LATE1 :1;
[; ;pic16f1519.h: 2283: unsigned LATE2 :1;
[; ;pic16f1519.h: 2284: };
[; ;pic16f1519.h: 2285: } LATEbits_t;
[; ;pic16f1519.h: 2286: extern volatile LATEbits_t LATEbits @ 0x110;
[; ;pic16f1519.h: 2306: extern volatile unsigned char BORCON @ 0x116;
"2308
[; ;pic16f1519.h: 2308: asm("BORCON equ 0116h");
[; <" BORCON equ 0116h ;# ">
[; ;pic16f1519.h: 2311: typedef union {
[; ;pic16f1519.h: 2312: struct {
[; ;pic16f1519.h: 2313: unsigned BORRDY :1;
[; ;pic16f1519.h: 2314: unsigned :5;
[; ;pic16f1519.h: 2315: unsigned BORFS :1;
[; ;pic16f1519.h: 2316: unsigned SBOREN :1;
[; ;pic16f1519.h: 2317: };
[; ;pic16f1519.h: 2318: } BORCONbits_t;
[; ;pic16f1519.h: 2319: extern volatile BORCONbits_t BORCONbits @ 0x116;
[; ;pic16f1519.h: 2339: extern volatile unsigned char FVRCON @ 0x117;
"2341
[; ;pic16f1519.h: 2341: asm("FVRCON equ 0117h");
[; <" FVRCON equ 0117h ;# ">
[; ;pic16f1519.h: 2344: typedef union {
[; ;pic16f1519.h: 2345: struct {
[; ;pic16f1519.h: 2346: unsigned ADFVR :2;
[; ;pic16f1519.h: 2347: unsigned :2;
[; ;pic16f1519.h: 2348: unsigned TSRNG :1;
[; ;pic16f1519.h: 2349: unsigned TSEN :1;
[; ;pic16f1519.h: 2350: unsigned FVRRDY :1;
[; ;pic16f1519.h: 2351: unsigned FVREN :1;
[; ;pic16f1519.h: 2352: };
[; ;pic16f1519.h: 2353: struct {
[; ;pic16f1519.h: 2354: unsigned ADFVR0 :1;
[; ;pic16f1519.h: 2355: unsigned ADFVR1 :1;
[; ;pic16f1519.h: 2356: };
[; ;pic16f1519.h: 2357: } FVRCONbits_t;
[; ;pic16f1519.h: 2358: extern volatile FVRCONbits_t FVRCONbits @ 0x117;
[; ;pic16f1519.h: 2398: extern volatile unsigned char APFCON @ 0x11D;
"2400
[; ;pic16f1519.h: 2400: asm("APFCON equ 011Dh");
[; <" APFCON equ 011Dh ;# ">
[; ;pic16f1519.h: 2403: typedef union {
[; ;pic16f1519.h: 2404: struct {
[; ;pic16f1519.h: 2405: unsigned CCP2SEL :1;
[; ;pic16f1519.h: 2406: unsigned SSSEL :1;
[; ;pic16f1519.h: 2407: };
[; ;pic16f1519.h: 2408: } APFCONbits_t;
[; ;pic16f1519.h: 2409: extern volatile APFCONbits_t APFCONbits @ 0x11D;
[; ;pic16f1519.h: 2424: extern volatile unsigned char ANSELA @ 0x18C;
"2426
[; ;pic16f1519.h: 2426: asm("ANSELA equ 018Ch");
[; <" ANSELA equ 018Ch ;# ">
[; ;pic16f1519.h: 2429: typedef union {
[; ;pic16f1519.h: 2430: struct {
[; ;pic16f1519.h: 2431: unsigned ANSA0 :1;
[; ;pic16f1519.h: 2432: unsigned ANSA1 :1;
[; ;pic16f1519.h: 2433: unsigned ANSA2 :1;
[; ;pic16f1519.h: 2434: unsigned ANSA3 :1;
[; ;pic16f1519.h: 2435: unsigned :1;
[; ;pic16f1519.h: 2436: unsigned ANSA5 :1;
[; ;pic16f1519.h: 2437: };
[; ;pic16f1519.h: 2438: struct {
[; ;pic16f1519.h: 2439: unsigned ANSELA :6;
[; ;pic16f1519.h: 2440: };
[; ;pic16f1519.h: 2441: } ANSELAbits_t;
[; ;pic16f1519.h: 2442: extern volatile ANSELAbits_t ANSELAbits @ 0x18C;
[; ;pic16f1519.h: 2477: extern volatile unsigned char ANSELB @ 0x18D;
"2479
[; ;pic16f1519.h: 2479: asm("ANSELB equ 018Dh");
[; <" ANSELB equ 018Dh ;# ">
[; ;pic16f1519.h: 2482: typedef union {
[; ;pic16f1519.h: 2483: struct {
[; ;pic16f1519.h: 2484: unsigned ANSB0 :1;
[; ;pic16f1519.h: 2485: unsigned ANSB1 :1;
[; ;pic16f1519.h: 2486: unsigned ANSB2 :1;
[; ;pic16f1519.h: 2487: unsigned ANSB3 :1;
[; ;pic16f1519.h: 2488: unsigned ANSB4 :1;
[; ;pic16f1519.h: 2489: unsigned ANSB5 :1;
[; ;pic16f1519.h: 2490: };
[; ;pic16f1519.h: 2491: struct {
[; ;pic16f1519.h: 2492: unsigned ANSELB :6;
[; ;pic16f1519.h: 2493: };
[; ;pic16f1519.h: 2494: } ANSELBbits_t;
[; ;pic16f1519.h: 2495: extern volatile ANSELBbits_t ANSELBbits @ 0x18D;
[; ;pic16f1519.h: 2535: extern volatile unsigned char ANSELC @ 0x18E;
"2537
[; ;pic16f1519.h: 2537: asm("ANSELC equ 018Eh");
[; <" ANSELC equ 018Eh ;# ">
[; ;pic16f1519.h: 2540: typedef union {
[; ;pic16f1519.h: 2541: struct {
[; ;pic16f1519.h: 2542: unsigned ANSC0 :1;
[; ;pic16f1519.h: 2543: unsigned ANSC1 :1;
[; ;pic16f1519.h: 2544: unsigned ANSC2 :1;
[; ;pic16f1519.h: 2545: unsigned ANSC3 :1;
[; ;pic16f1519.h: 2546: unsigned ANSC4 :1;
[; ;pic16f1519.h: 2547: unsigned ANSC5 :1;
[; ;pic16f1519.h: 2548: unsigned ANSC6 :1;
[; ;pic16f1519.h: 2549: unsigned ANSC7 :1;
[; ;pic16f1519.h: 2550: };
[; ;pic16f1519.h: 2551: } ANSELCbits_t;
[; ;pic16f1519.h: 2552: extern volatile ANSELCbits_t ANSELCbits @ 0x18E;
[; ;pic16f1519.h: 2597: extern volatile unsigned char ANSELD @ 0x18F;
"2599
[; ;pic16f1519.h: 2599: asm("ANSELD equ 018Fh");
[; <" ANSELD equ 018Fh ;# ">
[; ;pic16f1519.h: 2602: typedef union {
[; ;pic16f1519.h: 2603: struct {
[; ;pic16f1519.h: 2604: unsigned ANSD0 :1;
[; ;pic16f1519.h: 2605: unsigned ANSD1 :1;
[; ;pic16f1519.h: 2606: unsigned ANSD2 :1;
[; ;pic16f1519.h: 2607: unsigned ANSD3 :1;
[; ;pic16f1519.h: 2608: unsigned ANSD4 :1;
[; ;pic16f1519.h: 2609: unsigned ANSD5 :1;
[; ;pic16f1519.h: 2610: unsigned ANSD6 :1;
[; ;pic16f1519.h: 2611: unsigned ANSD7 :1;
[; ;pic16f1519.h: 2612: };
[; ;pic16f1519.h: 2613: struct {
[; ;pic16f1519.h: 2614: unsigned ANSELD :8;
[; ;pic16f1519.h: 2615: };
[; ;pic16f1519.h: 2616: } ANSELDbits_t;
[; ;pic16f1519.h: 2617: extern volatile ANSELDbits_t ANSELDbits @ 0x18F;
[; ;pic16f1519.h: 2667: extern volatile unsigned char ANSELE @ 0x190;
"2669
[; ;pic16f1519.h: 2669: asm("ANSELE equ 0190h");
[; <" ANSELE equ 0190h ;# ">
[; ;pic16f1519.h: 2672: typedef union {
[; ;pic16f1519.h: 2673: struct {
[; ;pic16f1519.h: 2674: unsigned ANSE0 :1;
[; ;pic16f1519.h: 2675: unsigned ANSE1 :1;
[; ;pic16f1519.h: 2676: unsigned ANSE2 :1;
[; ;pic16f1519.h: 2677: };
[; ;pic16f1519.h: 2678: struct {
[; ;pic16f1519.h: 2679: unsigned ANSELE :3;
[; ;pic16f1519.h: 2680: };
[; ;pic16f1519.h: 2681: } ANSELEbits_t;
[; ;pic16f1519.h: 2682: extern volatile ANSELEbits_t ANSELEbits @ 0x190;
[; ;pic16f1519.h: 2707: extern volatile unsigned short PMADR @ 0x191;
"2709
[; ;pic16f1519.h: 2709: asm("PMADR equ 0191h");
[; <" PMADR equ 0191h ;# ">
[; ;pic16f1519.h: 2714: extern volatile unsigned char PMADRL @ 0x191;
"2716
[; ;pic16f1519.h: 2716: asm("PMADRL equ 0191h");
[; <" PMADRL equ 0191h ;# ">
[; ;pic16f1519.h: 2719: typedef union {
[; ;pic16f1519.h: 2720: struct {
[; ;pic16f1519.h: 2721: unsigned PMADRL :8;
[; ;pic16f1519.h: 2722: };
[; ;pic16f1519.h: 2723: } PMADRLbits_t;
[; ;pic16f1519.h: 2724: extern volatile PMADRLbits_t PMADRLbits @ 0x191;
[; ;pic16f1519.h: 2734: extern volatile unsigned char PMADRH @ 0x192;
"2736
[; ;pic16f1519.h: 2736: asm("PMADRH equ 0192h");
[; <" PMADRH equ 0192h ;# ">
[; ;pic16f1519.h: 2739: typedef union {
[; ;pic16f1519.h: 2740: struct {
[; ;pic16f1519.h: 2741: unsigned PMADRH :7;
[; ;pic16f1519.h: 2742: };
[; ;pic16f1519.h: 2743: } PMADRHbits_t;
[; ;pic16f1519.h: 2744: extern volatile PMADRHbits_t PMADRHbits @ 0x192;
[; ;pic16f1519.h: 2754: extern volatile unsigned short PMDAT @ 0x193;
"2756
[; ;pic16f1519.h: 2756: asm("PMDAT equ 0193h");
[; <" PMDAT equ 0193h ;# ">
[; ;pic16f1519.h: 2761: extern volatile unsigned char PMDATL @ 0x193;
"2763
[; ;pic16f1519.h: 2763: asm("PMDATL equ 0193h");
[; <" PMDATL equ 0193h ;# ">
[; ;pic16f1519.h: 2766: typedef union {
[; ;pic16f1519.h: 2767: struct {
[; ;pic16f1519.h: 2768: unsigned PMDATL :8;
[; ;pic16f1519.h: 2769: };
[; ;pic16f1519.h: 2770: } PMDATLbits_t;
[; ;pic16f1519.h: 2771: extern volatile PMDATLbits_t PMDATLbits @ 0x193;
[; ;pic16f1519.h: 2781: extern volatile unsigned char PMDATH @ 0x194;
"2783
[; ;pic16f1519.h: 2783: asm("PMDATH equ 0194h");
[; <" PMDATH equ 0194h ;# ">
[; ;pic16f1519.h: 2786: typedef union {
[; ;pic16f1519.h: 2787: struct {
[; ;pic16f1519.h: 2788: unsigned PMDATH :6;
[; ;pic16f1519.h: 2789: };
[; ;pic16f1519.h: 2790: } PMDATHbits_t;
[; ;pic16f1519.h: 2791: extern volatile PMDATHbits_t PMDATHbits @ 0x194;
[; ;pic16f1519.h: 2801: extern volatile unsigned char PMCON1 @ 0x195;
"2803
[; ;pic16f1519.h: 2803: asm("PMCON1 equ 0195h");
[; <" PMCON1 equ 0195h ;# ">
[; ;pic16f1519.h: 2806: typedef union {
[; ;pic16f1519.h: 2807: struct {
[; ;pic16f1519.h: 2808: unsigned RD :1;
[; ;pic16f1519.h: 2809: unsigned WR :1;
[; ;pic16f1519.h: 2810: unsigned WREN :1;
[; ;pic16f1519.h: 2811: unsigned WRERR :1;
[; ;pic16f1519.h: 2812: unsigned FREE :1;
[; ;pic16f1519.h: 2813: unsigned LWLO :1;
[; ;pic16f1519.h: 2814: unsigned CFGS :1;
[; ;pic16f1519.h: 2815: };
[; ;pic16f1519.h: 2816: } PMCON1bits_t;
[; ;pic16f1519.h: 2817: extern volatile PMCON1bits_t PMCON1bits @ 0x195;
[; ;pic16f1519.h: 2857: extern volatile unsigned char PMCON2 @ 0x196;
"2859
[; ;pic16f1519.h: 2859: asm("PMCON2 equ 0196h");
[; <" PMCON2 equ 0196h ;# ">
[; ;pic16f1519.h: 2862: typedef union {
[; ;pic16f1519.h: 2863: struct {
[; ;pic16f1519.h: 2864: unsigned PMCON2 :8;
[; ;pic16f1519.h: 2865: };
[; ;pic16f1519.h: 2866: } PMCON2bits_t;
[; ;pic16f1519.h: 2867: extern volatile PMCON2bits_t PMCON2bits @ 0x196;
[; ;pic16f1519.h: 2877: extern volatile unsigned char VREGCON @ 0x197;
"2879
[; ;pic16f1519.h: 2879: asm("VREGCON equ 0197h");
[; <" VREGCON equ 0197h ;# ">
[; ;pic16f1519.h: 2882: typedef union {
[; ;pic16f1519.h: 2883: struct {
[; ;pic16f1519.h: 2884: unsigned :1;
[; ;pic16f1519.h: 2885: unsigned VREGPM :1;
[; ;pic16f1519.h: 2886: };
[; ;pic16f1519.h: 2887: } VREGCONbits_t;
[; ;pic16f1519.h: 2888: extern volatile VREGCONbits_t VREGCONbits @ 0x197;
[; ;pic16f1519.h: 2898: extern volatile unsigned char RCREG @ 0x199;
"2900
[; ;pic16f1519.h: 2900: asm("RCREG equ 0199h");
[; <" RCREG equ 0199h ;# ">
[; ;pic16f1519.h: 2903: typedef union {
[; ;pic16f1519.h: 2904: struct {
[; ;pic16f1519.h: 2905: unsigned RCREG :8;
[; ;pic16f1519.h: 2906: };
[; ;pic16f1519.h: 2907: } RCREGbits_t;
[; ;pic16f1519.h: 2908: extern volatile RCREGbits_t RCREGbits @ 0x199;
[; ;pic16f1519.h: 2918: extern volatile unsigned char TXREG @ 0x19A;
"2920
[; ;pic16f1519.h: 2920: asm("TXREG equ 019Ah");
[; <" TXREG equ 019Ah ;# ">
[; ;pic16f1519.h: 2923: typedef union {
[; ;pic16f1519.h: 2924: struct {
[; ;pic16f1519.h: 2925: unsigned TXREG :8;
[; ;pic16f1519.h: 2926: };
[; ;pic16f1519.h: 2927: } TXREGbits_t;
[; ;pic16f1519.h: 2928: extern volatile TXREGbits_t TXREGbits @ 0x19A;
[; ;pic16f1519.h: 2938: extern volatile unsigned short SP1BRG @ 0x19B;
"2940
[; ;pic16f1519.h: 2940: asm("SP1BRG equ 019Bh");
[; <" SP1BRG equ 019Bh ;# ">
[; ;pic16f1519.h: 2945: extern volatile unsigned char SP1BRGL @ 0x19B;
"2947
[; ;pic16f1519.h: 2947: asm("SP1BRGL equ 019Bh");
[; <" SP1BRGL equ 019Bh ;# ">
[; ;pic16f1519.h: 2950: extern volatile unsigned char SPBRG @ 0x19B;
"2952
[; ;pic16f1519.h: 2952: asm("SPBRG equ 019Bh");
[; <" SPBRG equ 019Bh ;# ">
[; ;pic16f1519.h: 2954: extern volatile unsigned char SPBRGL @ 0x19B;
"2956
[; ;pic16f1519.h: 2956: asm("SPBRGL equ 019Bh");
[; <" SPBRGL equ 019Bh ;# ">
[; ;pic16f1519.h: 2959: typedef union {
[; ;pic16f1519.h: 2960: struct {
[; ;pic16f1519.h: 2961: unsigned SPBRGL :8;
[; ;pic16f1519.h: 2962: };
[; ;pic16f1519.h: 2963: } SP1BRGLbits_t;
[; ;pic16f1519.h: 2964: extern volatile SP1BRGLbits_t SP1BRGLbits @ 0x19B;
[; ;pic16f1519.h: 2972: typedef union {
[; ;pic16f1519.h: 2973: struct {
[; ;pic16f1519.h: 2974: unsigned SPBRGL :8;
[; ;pic16f1519.h: 2975: };
[; ;pic16f1519.h: 2976: } SPBRGbits_t;
[; ;pic16f1519.h: 2977: extern volatile SPBRGbits_t SPBRGbits @ 0x19B;
[; ;pic16f1519.h: 2984: typedef union {
[; ;pic16f1519.h: 2985: struct {
[; ;pic16f1519.h: 2986: unsigned SPBRGL :8;
[; ;pic16f1519.h: 2987: };
[; ;pic16f1519.h: 2988: } SPBRGLbits_t;
[; ;pic16f1519.h: 2989: extern volatile SPBRGLbits_t SPBRGLbits @ 0x19B;
[; ;pic16f1519.h: 2999: extern volatile unsigned char SP1BRGH @ 0x19C;
"3001
[; ;pic16f1519.h: 3001: asm("SP1BRGH equ 019Ch");
[; <" SP1BRGH equ 019Ch ;# ">
[; ;pic16f1519.h: 3004: extern volatile unsigned char SPBRGH @ 0x19C;
"3006
[; ;pic16f1519.h: 3006: asm("SPBRGH equ 019Ch");
[; <" SPBRGH equ 019Ch ;# ">
[; ;pic16f1519.h: 3009: typedef union {
[; ;pic16f1519.h: 3010: struct {
[; ;pic16f1519.h: 3011: unsigned SPBRGH :8;
[; ;pic16f1519.h: 3012: };
[; ;pic16f1519.h: 3013: } SP1BRGHbits_t;
[; ;pic16f1519.h: 3014: extern volatile SP1BRGHbits_t SP1BRGHbits @ 0x19C;
[; ;pic16f1519.h: 3022: typedef union {
[; ;pic16f1519.h: 3023: struct {
[; ;pic16f1519.h: 3024: unsigned SPBRGH :8;
[; ;pic16f1519.h: 3025: };
[; ;pic16f1519.h: 3026: } SPBRGHbits_t;
[; ;pic16f1519.h: 3027: extern volatile SPBRGHbits_t SPBRGHbits @ 0x19C;
[; ;pic16f1519.h: 3037: extern volatile unsigned char RCSTA @ 0x19D;
"3039
[; ;pic16f1519.h: 3039: asm("RCSTA equ 019Dh");
[; <" RCSTA equ 019Dh ;# ">
[; ;pic16f1519.h: 3042: typedef union {
[; ;pic16f1519.h: 3043: struct {
[; ;pic16f1519.h: 3044: unsigned RX9D :1;
[; ;pic16f1519.h: 3045: unsigned OERR :1;
[; ;pic16f1519.h: 3046: unsigned FERR :1;
[; ;pic16f1519.h: 3047: unsigned ADDEN :1;
[; ;pic16f1519.h: 3048: unsigned CREN :1;
[; ;pic16f1519.h: 3049: unsigned SREN :1;
[; ;pic16f1519.h: 3050: unsigned RX9 :1;
[; ;pic16f1519.h: 3051: unsigned SPEN :1;
[; ;pic16f1519.h: 3052: };
[; ;pic16f1519.h: 3053: } RCSTAbits_t;
[; ;pic16f1519.h: 3054: extern volatile RCSTAbits_t RCSTAbits @ 0x19D;
[; ;pic16f1519.h: 3099: extern volatile unsigned char TXSTA @ 0x19E;
"3101
[; ;pic16f1519.h: 3101: asm("TXSTA equ 019Eh");
[; <" TXSTA equ 019Eh ;# ">
[; ;pic16f1519.h: 3104: typedef union {
[; ;pic16f1519.h: 3105: struct {
[; ;pic16f1519.h: 3106: unsigned TX9D :1;
[; ;pic16f1519.h: 3107: unsigned TRMT :1;
[; ;pic16f1519.h: 3108: unsigned BRGH :1;
[; ;pic16f1519.h: 3109: unsigned SENDB :1;
[; ;pic16f1519.h: 3110: unsigned SYNC :1;
[; ;pic16f1519.h: 3111: unsigned TXEN :1;
[; ;pic16f1519.h: 3112: unsigned TX9 :1;
[; ;pic16f1519.h: 3113: unsigned CSRC :1;
[; ;pic16f1519.h: 3114: };
[; ;pic16f1519.h: 3115: } TXSTAbits_t;
[; ;pic16f1519.h: 3116: extern volatile TXSTAbits_t TXSTAbits @ 0x19E;
[; ;pic16f1519.h: 3161: extern volatile unsigned char BAUDCON @ 0x19F;
"3163
[; ;pic16f1519.h: 3163: asm("BAUDCON equ 019Fh");
[; <" BAUDCON equ 019Fh ;# ">
[; ;pic16f1519.h: 3166: typedef union {
[; ;pic16f1519.h: 3167: struct {
[; ;pic16f1519.h: 3168: unsigned ABDEN :1;
[; ;pic16f1519.h: 3169: unsigned WUE :1;
[; ;pic16f1519.h: 3170: unsigned :1;
[; ;pic16f1519.h: 3171: unsigned BRG16 :1;
[; ;pic16f1519.h: 3172: unsigned SCKP :1;
[; ;pic16f1519.h: 3173: unsigned :1;
[; ;pic16f1519.h: 3174: unsigned RCIDL :1;
[; ;pic16f1519.h: 3175: unsigned ABDOVF :1;
[; ;pic16f1519.h: 3176: };
[; ;pic16f1519.h: 3177: } BAUDCONbits_t;
[; ;pic16f1519.h: 3178: extern volatile BAUDCONbits_t BAUDCONbits @ 0x19F;
[; ;pic16f1519.h: 3213: extern volatile unsigned char WPUB @ 0x20D;
"3215
[; ;pic16f1519.h: 3215: asm("WPUB equ 020Dh");
[; <" WPUB equ 020Dh ;# ">
[; ;pic16f1519.h: 3218: typedef union {
[; ;pic16f1519.h: 3219: struct {
[; ;pic16f1519.h: 3220: unsigned WPUB0 :1;
[; ;pic16f1519.h: 3221: unsigned WPUB1 :1;
[; ;pic16f1519.h: 3222: unsigned WPUB2 :1;
[; ;pic16f1519.h: 3223: unsigned WPUB3 :1;
[; ;pic16f1519.h: 3224: unsigned WPUB4 :1;
[; ;pic16f1519.h: 3225: unsigned WPUB5 :1;
[; ;pic16f1519.h: 3226: unsigned WPUB6 :1;
[; ;pic16f1519.h: 3227: unsigned WPUB7 :1;
[; ;pic16f1519.h: 3228: };
[; ;pic16f1519.h: 3229: struct {
[; ;pic16f1519.h: 3230: unsigned WPUB :8;
[; ;pic16f1519.h: 3231: };
[; ;pic16f1519.h: 3232: } WPUBbits_t;
[; ;pic16f1519.h: 3233: extern volatile WPUBbits_t WPUBbits @ 0x20D;
[; ;pic16f1519.h: 3283: extern volatile unsigned char WPUE @ 0x210;
"3285
[; ;pic16f1519.h: 3285: asm("WPUE equ 0210h");
[; <" WPUE equ 0210h ;# ">
[; ;pic16f1519.h: 3288: typedef union {
[; ;pic16f1519.h: 3289: struct {
[; ;pic16f1519.h: 3290: unsigned :3;
[; ;pic16f1519.h: 3291: unsigned WPUE3 :1;
[; ;pic16f1519.h: 3292: };
[; ;pic16f1519.h: 3293: } WPUEbits_t;
[; ;pic16f1519.h: 3294: extern volatile WPUEbits_t WPUEbits @ 0x210;
[; ;pic16f1519.h: 3304: extern volatile unsigned char SSPBUF @ 0x211;
"3306
[; ;pic16f1519.h: 3306: asm("SSPBUF equ 0211h");
[; <" SSPBUF equ 0211h ;# ">
[; ;pic16f1519.h: 3309: extern volatile unsigned char SSP1BUF @ 0x211;
"3311
[; ;pic16f1519.h: 3311: asm("SSP1BUF equ 0211h");
[; <" SSP1BUF equ 0211h ;# ">
[; ;pic16f1519.h: 3314: typedef union {
[; ;pic16f1519.h: 3315: struct {
[; ;pic16f1519.h: 3316: unsigned SSPBUF :8;
[; ;pic16f1519.h: 3317: };
[; ;pic16f1519.h: 3318: } SSPBUFbits_t;
[; ;pic16f1519.h: 3319: extern volatile SSPBUFbits_t SSPBUFbits @ 0x211;
[; ;pic16f1519.h: 3327: typedef union {
[; ;pic16f1519.h: 3328: struct {
[; ;pic16f1519.h: 3329: unsigned SSPBUF :8;
[; ;pic16f1519.h: 3330: };
[; ;pic16f1519.h: 3331: } SSP1BUFbits_t;
[; ;pic16f1519.h: 3332: extern volatile SSP1BUFbits_t SSP1BUFbits @ 0x211;
[; ;pic16f1519.h: 3342: extern volatile unsigned char SSPADD @ 0x212;
"3344
[; ;pic16f1519.h: 3344: asm("SSPADD equ 0212h");
[; <" SSPADD equ 0212h ;# ">
[; ;pic16f1519.h: 3347: extern volatile unsigned char SSP1ADD @ 0x212;
"3349
[; ;pic16f1519.h: 3349: asm("SSP1ADD equ 0212h");
[; <" SSP1ADD equ 0212h ;# ">
[; ;pic16f1519.h: 3352: typedef union {
[; ;pic16f1519.h: 3353: struct {
[; ;pic16f1519.h: 3354: unsigned SSPADD :8;
[; ;pic16f1519.h: 3355: };
[; ;pic16f1519.h: 3356: } SSPADDbits_t;
[; ;pic16f1519.h: 3357: extern volatile SSPADDbits_t SSPADDbits @ 0x212;
[; ;pic16f1519.h: 3365: typedef union {
[; ;pic16f1519.h: 3366: struct {
[; ;pic16f1519.h: 3367: unsigned SSPADD :8;
[; ;pic16f1519.h: 3368: };
[; ;pic16f1519.h: 3369: } SSP1ADDbits_t;
[; ;pic16f1519.h: 3370: extern volatile SSP1ADDbits_t SSP1ADDbits @ 0x212;
[; ;pic16f1519.h: 3380: extern volatile unsigned char SSPMSK @ 0x213;
"3382
[; ;pic16f1519.h: 3382: asm("SSPMSK equ 0213h");
[; <" SSPMSK equ 0213h ;# ">
[; ;pic16f1519.h: 3385: extern volatile unsigned char SSP1MSK @ 0x213;
"3387
[; ;pic16f1519.h: 3387: asm("SSP1MSK equ 0213h");
[; <" SSP1MSK equ 0213h ;# ">
[; ;pic16f1519.h: 3390: typedef union {
[; ;pic16f1519.h: 3391: struct {
[; ;pic16f1519.h: 3392: unsigned SSPMSK :8;
[; ;pic16f1519.h: 3393: };
[; ;pic16f1519.h: 3394: } SSPMSKbits_t;
[; ;pic16f1519.h: 3395: extern volatile SSPMSKbits_t SSPMSKbits @ 0x213;
[; ;pic16f1519.h: 3403: typedef union {
[; ;pic16f1519.h: 3404: struct {
[; ;pic16f1519.h: 3405: unsigned SSPMSK :8;
[; ;pic16f1519.h: 3406: };
[; ;pic16f1519.h: 3407: } SSP1MSKbits_t;
[; ;pic16f1519.h: 3408: extern volatile SSP1MSKbits_t SSP1MSKbits @ 0x213;
[; ;pic16f1519.h: 3418: extern volatile unsigned char SSPSTAT @ 0x214;
"3420
[; ;pic16f1519.h: 3420: asm("SSPSTAT equ 0214h");
[; <" SSPSTAT equ 0214h ;# ">
[; ;pic16f1519.h: 3423: extern volatile unsigned char SSP1STAT @ 0x214;
"3425
[; ;pic16f1519.h: 3425: asm("SSP1STAT equ 0214h");
[; <" SSP1STAT equ 0214h ;# ">
[; ;pic16f1519.h: 3428: typedef union {
[; ;pic16f1519.h: 3429: struct {
[; ;pic16f1519.h: 3430: unsigned BF :1;
[; ;pic16f1519.h: 3431: unsigned UA :1;
[; ;pic16f1519.h: 3432: unsigned R_nW :1;
[; ;pic16f1519.h: 3433: unsigned S :1;
[; ;pic16f1519.h: 3434: unsigned P :1;
[; ;pic16f1519.h: 3435: unsigned D_nA :1;
[; ;pic16f1519.h: 3436: unsigned CKE :1;
[; ;pic16f1519.h: 3437: unsigned SMP :1;
[; ;pic16f1519.h: 3438: };
[; ;pic16f1519.h: 3439: } SSPSTATbits_t;
[; ;pic16f1519.h: 3440: extern volatile SSPSTATbits_t SSPSTATbits @ 0x214;
[; ;pic16f1519.h: 3483: typedef union {
[; ;pic16f1519.h: 3484: struct {
[; ;pic16f1519.h: 3485: unsigned BF :1;
[; ;pic16f1519.h: 3486: unsigned UA :1;
[; ;pic16f1519.h: 3487: unsigned R_nW :1;
[; ;pic16f1519.h: 3488: unsigned S :1;
[; ;pic16f1519.h: 3489: unsigned P :1;
[; ;pic16f1519.h: 3490: unsigned D_nA :1;
[; ;pic16f1519.h: 3491: unsigned CKE :1;
[; ;pic16f1519.h: 3492: unsigned SMP :1;
[; ;pic16f1519.h: 3493: };
[; ;pic16f1519.h: 3494: } SSP1STATbits_t;
[; ;pic16f1519.h: 3495: extern volatile SSP1STATbits_t SSP1STATbits @ 0x214;
[; ;pic16f1519.h: 3540: extern volatile unsigned char SSPCON1 @ 0x215;
"3542
[; ;pic16f1519.h: 3542: asm("SSPCON1 equ 0215h");
[; <" SSPCON1 equ 0215h ;# ">
[; ;pic16f1519.h: 3545: extern volatile unsigned char SSPCON @ 0x215;
"3547
[; ;pic16f1519.h: 3547: asm("SSPCON equ 0215h");
[; <" SSPCON equ 0215h ;# ">
[; ;pic16f1519.h: 3549: extern volatile unsigned char SSP1CON1 @ 0x215;
"3551
[; ;pic16f1519.h: 3551: asm("SSP1CON1 equ 0215h");
[; <" SSP1CON1 equ 0215h ;# ">
[; ;pic16f1519.h: 3554: typedef union {
[; ;pic16f1519.h: 3555: struct {
[; ;pic16f1519.h: 3556: unsigned SSPM :4;
[; ;pic16f1519.h: 3557: unsigned CKP :1;
[; ;pic16f1519.h: 3558: unsigned SSPEN :1;
[; ;pic16f1519.h: 3559: unsigned SSPOV :1;
[; ;pic16f1519.h: 3560: unsigned WCOL :1;
[; ;pic16f1519.h: 3561: };
[; ;pic16f1519.h: 3562: struct {
[; ;pic16f1519.h: 3563: unsigned SSPM0 :1;
[; ;pic16f1519.h: 3564: unsigned SSPM1 :1;
[; ;pic16f1519.h: 3565: unsigned SSPM2 :1;
[; ;pic16f1519.h: 3566: unsigned SSPM3 :1;
[; ;pic16f1519.h: 3567: };
[; ;pic16f1519.h: 3568: } SSPCON1bits_t;
[; ;pic16f1519.h: 3569: extern volatile SSPCON1bits_t SSPCON1bits @ 0x215;
[; ;pic16f1519.h: 3617: typedef union {
[; ;pic16f1519.h: 3618: struct {
[; ;pic16f1519.h: 3619: unsigned SSPM :4;
[; ;pic16f1519.h: 3620: unsigned CKP :1;
[; ;pic16f1519.h: 3621: unsigned SSPEN :1;
[; ;pic16f1519.h: 3622: unsigned SSPOV :1;
[; ;pic16f1519.h: 3623: unsigned WCOL :1;
[; ;pic16f1519.h: 3624: };
[; ;pic16f1519.h: 3625: struct {
[; ;pic16f1519.h: 3626: unsigned SSPM0 :1;
[; ;pic16f1519.h: 3627: unsigned SSPM1 :1;
[; ;pic16f1519.h: 3628: unsigned SSPM2 :1;
[; ;pic16f1519.h: 3629: unsigned SSPM3 :1;
[; ;pic16f1519.h: 3630: };
[; ;pic16f1519.h: 3631: } SSPCONbits_t;
[; ;pic16f1519.h: 3632: extern volatile SSPCONbits_t SSPCONbits @ 0x215;
[; ;pic16f1519.h: 3679: typedef union {
[; ;pic16f1519.h: 3680: struct {
[; ;pic16f1519.h: 3681: unsigned SSPM :4;
[; ;pic16f1519.h: 3682: unsigned CKP :1;
[; ;pic16f1519.h: 3683: unsigned SSPEN :1;
[; ;pic16f1519.h: 3684: unsigned SSPOV :1;
[; ;pic16f1519.h: 3685: unsigned WCOL :1;
[; ;pic16f1519.h: 3686: };
[; ;pic16f1519.h: 3687: struct {
[; ;pic16f1519.h: 3688: unsigned SSPM0 :1;
[; ;pic16f1519.h: 3689: unsigned SSPM1 :1;
[; ;pic16f1519.h: 3690: unsigned SSPM2 :1;
[; ;pic16f1519.h: 3691: unsigned SSPM3 :1;
[; ;pic16f1519.h: 3692: };
[; ;pic16f1519.h: 3693: } SSP1CON1bits_t;
[; ;pic16f1519.h: 3694: extern volatile SSP1CON1bits_t SSP1CON1bits @ 0x215;
[; ;pic16f1519.h: 3744: extern volatile unsigned char SSPCON2 @ 0x216;
"3746
[; ;pic16f1519.h: 3746: asm("SSPCON2 equ 0216h");
[; <" SSPCON2 equ 0216h ;# ">
[; ;pic16f1519.h: 3749: extern volatile unsigned char SSP1CON2 @ 0x216;
"3751
[; ;pic16f1519.h: 3751: asm("SSP1CON2 equ 0216h");
[; <" SSP1CON2 equ 0216h ;# ">
[; ;pic16f1519.h: 3754: typedef union {
[; ;pic16f1519.h: 3755: struct {
[; ;pic16f1519.h: 3756: unsigned SEN :1;
[; ;pic16f1519.h: 3757: unsigned RSEN :1;
[; ;pic16f1519.h: 3758: unsigned PEN :1;
[; ;pic16f1519.h: 3759: unsigned RCEN :1;
[; ;pic16f1519.h: 3760: unsigned ACKEN :1;
[; ;pic16f1519.h: 3761: unsigned ACKDT :1;
[; ;pic16f1519.h: 3762: unsigned ACKSTAT :1;
[; ;pic16f1519.h: 3763: unsigned GCEN :1;
[; ;pic16f1519.h: 3764: };
[; ;pic16f1519.h: 3765: } SSPCON2bits_t;
[; ;pic16f1519.h: 3766: extern volatile SSPCON2bits_t SSPCON2bits @ 0x216;
[; ;pic16f1519.h: 3809: typedef union {
[; ;pic16f1519.h: 3810: struct {
[; ;pic16f1519.h: 3811: unsigned SEN :1;
[; ;pic16f1519.h: 3812: unsigned RSEN :1;
[; ;pic16f1519.h: 3813: unsigned PEN :1;
[; ;pic16f1519.h: 3814: unsigned RCEN :1;
[; ;pic16f1519.h: 3815: unsigned ACKEN :1;
[; ;pic16f1519.h: 3816: unsigned ACKDT :1;
[; ;pic16f1519.h: 3817: unsigned ACKSTAT :1;
[; ;pic16f1519.h: 3818: unsigned GCEN :1;
[; ;pic16f1519.h: 3819: };
[; ;pic16f1519.h: 3820: } SSP1CON2bits_t;
[; ;pic16f1519.h: 3821: extern volatile SSP1CON2bits_t SSP1CON2bits @ 0x216;
[; ;pic16f1519.h: 3866: extern volatile unsigned char SSPCON3 @ 0x217;
"3868
[; ;pic16f1519.h: 3868: asm("SSPCON3 equ 0217h");
[; <" SSPCON3 equ 0217h ;# ">
[; ;pic16f1519.h: 3871: extern volatile unsigned char SSP1CON3 @ 0x217;
"3873
[; ;pic16f1519.h: 3873: asm("SSP1CON3 equ 0217h");
[; <" SSP1CON3 equ 0217h ;# ">
[; ;pic16f1519.h: 3876: typedef union {
[; ;pic16f1519.h: 3877: struct {
[; ;pic16f1519.h: 3878: unsigned DHEN :1;
[; ;pic16f1519.h: 3879: unsigned AHEN :1;
[; ;pic16f1519.h: 3880: unsigned SBCDE :1;
[; ;pic16f1519.h: 3881: unsigned SDAHT :1;
[; ;pic16f1519.h: 3882: unsigned BOEN :1;
[; ;pic16f1519.h: 3883: unsigned SCIE :1;
[; ;pic16f1519.h: 3884: unsigned PCIE :1;
[; ;pic16f1519.h: 3885: unsigned ACKTIM :1;
[; ;pic16f1519.h: 3886: };
[; ;pic16f1519.h: 3887: } SSPCON3bits_t;
[; ;pic16f1519.h: 3888: extern volatile SSPCON3bits_t SSPCON3bits @ 0x217;
[; ;pic16f1519.h: 3931: typedef union {
[; ;pic16f1519.h: 3932: struct {
[; ;pic16f1519.h: 3933: unsigned DHEN :1;
[; ;pic16f1519.h: 3934: unsigned AHEN :1;
[; ;pic16f1519.h: 3935: unsigned SBCDE :1;
[; ;pic16f1519.h: 3936: unsigned SDAHT :1;
[; ;pic16f1519.h: 3937: unsigned BOEN :1;
[; ;pic16f1519.h: 3938: unsigned SCIE :1;
[; ;pic16f1519.h: 3939: unsigned PCIE :1;
[; ;pic16f1519.h: 3940: unsigned ACKTIM :1;
[; ;pic16f1519.h: 3941: };
[; ;pic16f1519.h: 3942: } SSP1CON3bits_t;
[; ;pic16f1519.h: 3943: extern volatile SSP1CON3bits_t SSP1CON3bits @ 0x217;
[; ;pic16f1519.h: 3988: extern volatile unsigned short CCPR1 @ 0x291;
"3990
[; ;pic16f1519.h: 3990: asm("CCPR1 equ 0291h");
[; <" CCPR1 equ 0291h ;# ">
[; ;pic16f1519.h: 3995: extern volatile unsigned char CCPR1L @ 0x291;
"3997
[; ;pic16f1519.h: 3997: asm("CCPR1L equ 0291h");
[; <" CCPR1L equ 0291h ;# ">
[; ;pic16f1519.h: 4000: typedef union {
[; ;pic16f1519.h: 4001: struct {
[; ;pic16f1519.h: 4002: unsigned CCPR1L :8;
[; ;pic16f1519.h: 4003: };
[; ;pic16f1519.h: 4004: } CCPR1Lbits_t;
[; ;pic16f1519.h: 4005: extern volatile CCPR1Lbits_t CCPR1Lbits @ 0x291;
[; ;pic16f1519.h: 4015: extern volatile unsigned char CCPR1H @ 0x292;
"4017
[; ;pic16f1519.h: 4017: asm("CCPR1H equ 0292h");
[; <" CCPR1H equ 0292h ;# ">
[; ;pic16f1519.h: 4020: typedef union {
[; ;pic16f1519.h: 4021: struct {
[; ;pic16f1519.h: 4022: unsigned CCPR1H :8;
[; ;pic16f1519.h: 4023: };
[; ;pic16f1519.h: 4024: } CCPR1Hbits_t;
[; ;pic16f1519.h: 4025: extern volatile CCPR1Hbits_t CCPR1Hbits @ 0x292;
[; ;pic16f1519.h: 4035: extern volatile unsigned char CCP1CON @ 0x293;
"4037
[; ;pic16f1519.h: 4037: asm("CCP1CON equ 0293h");
[; <" CCP1CON equ 0293h ;# ">
[; ;pic16f1519.h: 4040: typedef union {
[; ;pic16f1519.h: 4041: struct {
[; ;pic16f1519.h: 4042: unsigned CCP1M :4;
[; ;pic16f1519.h: 4043: unsigned DC1B :2;
[; ;pic16f1519.h: 4044: };
[; ;pic16f1519.h: 4045: struct {
[; ;pic16f1519.h: 4046: unsigned CCP1M0 :1;
[; ;pic16f1519.h: 4047: unsigned CCP1M1 :1;
[; ;pic16f1519.h: 4048: unsigned CCP1M2 :1;
[; ;pic16f1519.h: 4049: unsigned CCP1M3 :1;
[; ;pic16f1519.h: 4050: unsigned DC1B0 :1;
[; ;pic16f1519.h: 4051: unsigned DC1B1 :1;
[; ;pic16f1519.h: 4052: };
[; ;pic16f1519.h: 4053: } CCP1CONbits_t;
[; ;pic16f1519.h: 4054: extern volatile CCP1CONbits_t CCP1CONbits @ 0x293;
[; ;pic16f1519.h: 4099: extern volatile unsigned short CCPR2 @ 0x298;
"4101
[; ;pic16f1519.h: 4101: asm("CCPR2 equ 0298h");
[; <" CCPR2 equ 0298h ;# ">
[; ;pic16f1519.h: 4106: extern volatile unsigned char CCPR2L @ 0x298;
"4108
[; ;pic16f1519.h: 4108: asm("CCPR2L equ 0298h");
[; <" CCPR2L equ 0298h ;# ">
[; ;pic16f1519.h: 4111: typedef union {
[; ;pic16f1519.h: 4112: struct {
[; ;pic16f1519.h: 4113: unsigned CCPR2L :8;
[; ;pic16f1519.h: 4114: };
[; ;pic16f1519.h: 4115: } CCPR2Lbits_t;
[; ;pic16f1519.h: 4116: extern volatile CCPR2Lbits_t CCPR2Lbits @ 0x298;
[; ;pic16f1519.h: 4126: extern volatile unsigned char CCPR2H @ 0x299;
"4128
[; ;pic16f1519.h: 4128: asm("CCPR2H equ 0299h");
[; <" CCPR2H equ 0299h ;# ">
[; ;pic16f1519.h: 4131: typedef union {
[; ;pic16f1519.h: 4132: struct {
[; ;pic16f1519.h: 4133: unsigned CCPR2H :8;
[; ;pic16f1519.h: 4134: };
[; ;pic16f1519.h: 4135: } CCPR2Hbits_t;
[; ;pic16f1519.h: 4136: extern volatile CCPR2Hbits_t CCPR2Hbits @ 0x299;
[; ;pic16f1519.h: 4146: extern volatile unsigned char CCP2CON @ 0x29A;
"4148
[; ;pic16f1519.h: 4148: asm("CCP2CON equ 029Ah");
[; <" CCP2CON equ 029Ah ;# ">
[; ;pic16f1519.h: 4151: typedef union {
[; ;pic16f1519.h: 4152: struct {
[; ;pic16f1519.h: 4153: unsigned CCP2M :4;
[; ;pic16f1519.h: 4154: unsigned DC2B :2;
[; ;pic16f1519.h: 4155: };
[; ;pic16f1519.h: 4156: struct {
[; ;pic16f1519.h: 4157: unsigned CCP2M0 :1;
[; ;pic16f1519.h: 4158: unsigned CCP2M1 :1;
[; ;pic16f1519.h: 4159: unsigned CCP2M2 :1;
[; ;pic16f1519.h: 4160: unsigned CCP2M3 :1;
[; ;pic16f1519.h: 4161: unsigned DC2B0 :1;
[; ;pic16f1519.h: 4162: unsigned DC2B1 :1;
[; ;pic16f1519.h: 4163: };
[; ;pic16f1519.h: 4164: } CCP2CONbits_t;
[; ;pic16f1519.h: 4165: extern volatile CCP2CONbits_t CCP2CONbits @ 0x29A;
[; ;pic16f1519.h: 4210: extern volatile unsigned char IOCBP @ 0x394;
"4212
[; ;pic16f1519.h: 4212: asm("IOCBP equ 0394h");
[; <" IOCBP equ 0394h ;# ">
[; ;pic16f1519.h: 4215: typedef union {
[; ;pic16f1519.h: 4216: struct {
[; ;pic16f1519.h: 4217: unsigned IOCBP0 :1;
[; ;pic16f1519.h: 4218: unsigned IOCBP1 :1;
[; ;pic16f1519.h: 4219: unsigned IOCBP2 :1;
[; ;pic16f1519.h: 4220: unsigned IOCBP3 :1;
[; ;pic16f1519.h: 4221: unsigned IOCBP4 :1;
[; ;pic16f1519.h: 4222: unsigned IOCBP5 :1;
[; ;pic16f1519.h: 4223: unsigned IOCBP6 :1;
[; ;pic16f1519.h: 4224: unsigned IOCBP7 :1;
[; ;pic16f1519.h: 4225: };
[; ;pic16f1519.h: 4226: struct {
[; ;pic16f1519.h: 4227: unsigned IOCBP :8;
[; ;pic16f1519.h: 4228: };
[; ;pic16f1519.h: 4229: } IOCBPbits_t;
[; ;pic16f1519.h: 4230: extern volatile IOCBPbits_t IOCBPbits @ 0x394;
[; ;pic16f1519.h: 4280: extern volatile unsigned char IOCBN @ 0x395;
"4282
[; ;pic16f1519.h: 4282: asm("IOCBN equ 0395h");
[; <" IOCBN equ 0395h ;# ">
[; ;pic16f1519.h: 4285: typedef union {
[; ;pic16f1519.h: 4286: struct {
[; ;pic16f1519.h: 4287: unsigned IOCBN0 :1;
[; ;pic16f1519.h: 4288: unsigned IOCBN1 :1;
[; ;pic16f1519.h: 4289: unsigned IOCBN2 :1;
[; ;pic16f1519.h: 4290: unsigned IOCBN3 :1;
[; ;pic16f1519.h: 4291: unsigned IOCBN4 :1;
[; ;pic16f1519.h: 4292: unsigned IOCBN5 :1;
[; ;pic16f1519.h: 4293: unsigned IOCBN6 :1;
[; ;pic16f1519.h: 4294: unsigned IOCBN7 :1;
[; ;pic16f1519.h: 4295: };
[; ;pic16f1519.h: 4296: struct {
[; ;pic16f1519.h: 4297: unsigned IOCBN :8;
[; ;pic16f1519.h: 4298: };
[; ;pic16f1519.h: 4299: } IOCBNbits_t;
[; ;pic16f1519.h: 4300: extern volatile IOCBNbits_t IOCBNbits @ 0x395;
[; ;pic16f1519.h: 4350: extern volatile unsigned char IOCBF @ 0x396;
"4352
[; ;pic16f1519.h: 4352: asm("IOCBF equ 0396h");
[; <" IOCBF equ 0396h ;# ">
[; ;pic16f1519.h: 4355: typedef union {
[; ;pic16f1519.h: 4356: struct {
[; ;pic16f1519.h: 4357: unsigned IOCBF0 :1;
[; ;pic16f1519.h: 4358: unsigned IOCBF1 :1;
[; ;pic16f1519.h: 4359: unsigned IOCBF2 :1;
[; ;pic16f1519.h: 4360: unsigned IOCBF3 :1;
[; ;pic16f1519.h: 4361: unsigned IOCBF4 :1;
[; ;pic16f1519.h: 4362: unsigned IOCBF5 :1;
[; ;pic16f1519.h: 4363: unsigned IOCBF6 :1;
[; ;pic16f1519.h: 4364: unsigned IOCBF7 :1;
[; ;pic16f1519.h: 4365: };
[; ;pic16f1519.h: 4366: struct {
[; ;pic16f1519.h: 4367: unsigned IOCBF :8;
[; ;pic16f1519.h: 4368: };
[; ;pic16f1519.h: 4369: } IOCBFbits_t;
[; ;pic16f1519.h: 4370: extern volatile IOCBFbits_t IOCBFbits @ 0x396;
[; ;pic16f1519.h: 4420: extern volatile unsigned char STATUS_SHAD @ 0xFE4;
"4422
[; ;pic16f1519.h: 4422: asm("STATUS_SHAD equ 0FE4h");
[; <" STATUS_SHAD equ 0FE4h ;# ">
[; ;pic16f1519.h: 4425: typedef union {
[; ;pic16f1519.h: 4426: struct {
[; ;pic16f1519.h: 4427: unsigned C_SHAD :1;
[; ;pic16f1519.h: 4428: unsigned DC_SHAD :1;
[; ;pic16f1519.h: 4429: unsigned Z_SHAD :1;
[; ;pic16f1519.h: 4430: };
[; ;pic16f1519.h: 4431: } STATUS_SHADbits_t;
[; ;pic16f1519.h: 4432: extern volatile STATUS_SHADbits_t STATUS_SHADbits @ 0xFE4;
[; ;pic16f1519.h: 4452: extern volatile unsigned char WREG_SHAD @ 0xFE5;
"4454
[; ;pic16f1519.h: 4454: asm("WREG_SHAD equ 0FE5h");
[; <" WREG_SHAD equ 0FE5h ;# ">
[; ;pic16f1519.h: 4457: typedef union {
[; ;pic16f1519.h: 4458: struct {
[; ;pic16f1519.h: 4459: unsigned WREG_SHAD :8;
[; ;pic16f1519.h: 4460: };
[; ;pic16f1519.h: 4461: } WREG_SHADbits_t;
[; ;pic16f1519.h: 4462: extern volatile WREG_SHADbits_t WREG_SHADbits @ 0xFE5;
[; ;pic16f1519.h: 4472: extern volatile unsigned char BSR_SHAD @ 0xFE6;
"4474
[; ;pic16f1519.h: 4474: asm("BSR_SHAD equ 0FE6h");
[; <" BSR_SHAD equ 0FE6h ;# ">
[; ;pic16f1519.h: 4477: typedef union {
[; ;pic16f1519.h: 4478: struct {
[; ;pic16f1519.h: 4479: unsigned BSR_SHAD :5;
[; ;pic16f1519.h: 4480: };
[; ;pic16f1519.h: 4481: } BSR_SHADbits_t;
[; ;pic16f1519.h: 4482: extern volatile BSR_SHADbits_t BSR_SHADbits @ 0xFE6;
[; ;pic16f1519.h: 4492: extern volatile unsigned char PCLATH_SHAD @ 0xFE7;
"4494
[; ;pic16f1519.h: 4494: asm("PCLATH_SHAD equ 0FE7h");
[; <" PCLATH_SHAD equ 0FE7h ;# ">
[; ;pic16f1519.h: 4497: typedef union {
[; ;pic16f1519.h: 4498: struct {
[; ;pic16f1519.h: 4499: unsigned PCLATH_SHAD :7;
[; ;pic16f1519.h: 4500: };
[; ;pic16f1519.h: 4501: } PCLATH_SHADbits_t;
[; ;pic16f1519.h: 4502: extern volatile PCLATH_SHADbits_t PCLATH_SHADbits @ 0xFE7;
[; ;pic16f1519.h: 4512: extern volatile unsigned char FSR0L_SHAD @ 0xFE8;
"4514
[; ;pic16f1519.h: 4514: asm("FSR0L_SHAD equ 0FE8h");
[; <" FSR0L_SHAD equ 0FE8h ;# ">
[; ;pic16f1519.h: 4517: typedef union {
[; ;pic16f1519.h: 4518: struct {
[; ;pic16f1519.h: 4519: unsigned FSR0L_SHAD :8;
[; ;pic16f1519.h: 4520: };
[; ;pic16f1519.h: 4521: } FSR0L_SHADbits_t;
[; ;pic16f1519.h: 4522: extern volatile FSR0L_SHADbits_t FSR0L_SHADbits @ 0xFE8;
[; ;pic16f1519.h: 4532: extern volatile unsigned char FSR0H_SHAD @ 0xFE9;
"4534
[; ;pic16f1519.h: 4534: asm("FSR0H_SHAD equ 0FE9h");
[; <" FSR0H_SHAD equ 0FE9h ;# ">
[; ;pic16f1519.h: 4537: typedef union {
[; ;pic16f1519.h: 4538: struct {
[; ;pic16f1519.h: 4539: unsigned FSR0H_SHAD :8;
[; ;pic16f1519.h: 4540: };
[; ;pic16f1519.h: 4541: } FSR0H_SHADbits_t;
[; ;pic16f1519.h: 4542: extern volatile FSR0H_SHADbits_t FSR0H_SHADbits @ 0xFE9;
[; ;pic16f1519.h: 4552: extern volatile unsigned char FSR1L_SHAD @ 0xFEA;
"4554
[; ;pic16f1519.h: 4554: asm("FSR1L_SHAD equ 0FEAh");
[; <" FSR1L_SHAD equ 0FEAh ;# ">
[; ;pic16f1519.h: 4557: typedef union {
[; ;pic16f1519.h: 4558: struct {
[; ;pic16f1519.h: 4559: unsigned FSR1L_SHAD :8;
[; ;pic16f1519.h: 4560: };
[; ;pic16f1519.h: 4561: } FSR1L_SHADbits_t;
[; ;pic16f1519.h: 4562: extern volatile FSR1L_SHADbits_t FSR1L_SHADbits @ 0xFEA;
[; ;pic16f1519.h: 4572: extern volatile unsigned char FSR1H_SHAD @ 0xFEB;
"4574
[; ;pic16f1519.h: 4574: asm("FSR1H_SHAD equ 0FEBh");
[; <" FSR1H_SHAD equ 0FEBh ;# ">
[; ;pic16f1519.h: 4577: typedef union {
[; ;pic16f1519.h: 4578: struct {
[; ;pic16f1519.h: 4579: unsigned FSR1H_SHAD :8;
[; ;pic16f1519.h: 4580: };
[; ;pic16f1519.h: 4581: } FSR1H_SHADbits_t;
[; ;pic16f1519.h: 4582: extern volatile FSR1H_SHADbits_t FSR1H_SHADbits @ 0xFEB;
[; ;pic16f1519.h: 4592: extern volatile unsigned char STKPTR @ 0xFED;
"4594
[; ;pic16f1519.h: 4594: asm("STKPTR equ 0FEDh");
[; <" STKPTR equ 0FEDh ;# ">
[; ;pic16f1519.h: 4597: typedef union {
[; ;pic16f1519.h: 4598: struct {
[; ;pic16f1519.h: 4599: unsigned STKPTR :5;
[; ;pic16f1519.h: 4600: };
[; ;pic16f1519.h: 4601: } STKPTRbits_t;
[; ;pic16f1519.h: 4602: extern volatile STKPTRbits_t STKPTRbits @ 0xFED;
[; ;pic16f1519.h: 4612: extern volatile unsigned char TOSL @ 0xFEE;
"4614
[; ;pic16f1519.h: 4614: asm("TOSL equ 0FEEh");
[; <" TOSL equ 0FEEh ;# ">
[; ;pic16f1519.h: 4617: typedef union {
[; ;pic16f1519.h: 4618: struct {
[; ;pic16f1519.h: 4619: unsigned TOSL :8;
[; ;pic16f1519.h: 4620: };
[; ;pic16f1519.h: 4621: } TOSLbits_t;
[; ;pic16f1519.h: 4622: extern volatile TOSLbits_t TOSLbits @ 0xFEE;
[; ;pic16f1519.h: 4632: extern volatile unsigned char TOSH @ 0xFEF;
"4634
[; ;pic16f1519.h: 4634: asm("TOSH equ 0FEFh");
[; <" TOSH equ 0FEFh ;# ">
[; ;pic16f1519.h: 4637: typedef union {
[; ;pic16f1519.h: 4638: struct {
[; ;pic16f1519.h: 4639: unsigned TOSH :7;
[; ;pic16f1519.h: 4640: };
[; ;pic16f1519.h: 4641: } TOSHbits_t;
[; ;pic16f1519.h: 4642: extern volatile TOSHbits_t TOSHbits @ 0xFEF;
[; ;pic16f1519.h: 4657: extern volatile __bit ABDEN @ (((unsigned) &BAUDCON)*8) + 0;
[; ;pic16f1519.h: 4659: extern volatile __bit ABDOVF @ (((unsigned) &BAUDCON)*8) + 7;
[; ;pic16f1519.h: 4661: extern volatile __bit ACKDT @ (((unsigned) &SSPCON2)*8) + 5;
[; ;pic16f1519.h: 4663: extern volatile __bit ACKEN @ (((unsigned) &SSPCON2)*8) + 4;
[; ;pic16f1519.h: 4665: extern volatile __bit ACKSTAT @ (((unsigned) &SSPCON2)*8) + 6;
[; ;pic16f1519.h: 4667: extern volatile __bit ACKTIM @ (((unsigned) &SSPCON3)*8) + 7;
[; ;pic16f1519.h: 4669: extern volatile __bit ADCS0 @ (((unsigned) &ADCON1)*8) + 4;
[; ;pic16f1519.h: 4671: extern volatile __bit ADCS1 @ (((unsigned) &ADCON1)*8) + 5;
[; ;pic16f1519.h: 4673: extern volatile __bit ADCS2 @ (((unsigned) &ADCON1)*8) + 6;
[; ;pic16f1519.h: 4675: extern volatile __bit ADDEN @ (((unsigned) &RCSTA)*8) + 3;
[; ;pic16f1519.h: 4677: extern volatile __bit ADFM @ (((unsigned) &ADCON1)*8) + 7;
[; ;pic16f1519.h: 4679: extern volatile __bit ADFVR0 @ (((unsigned) &FVRCON)*8) + 0;
[; ;pic16f1519.h: 4681: extern volatile __bit ADFVR1 @ (((unsigned) &FVRCON)*8) + 1;
[; ;pic16f1519.h: 4683: extern volatile __bit ADGO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f1519.h: 4685: extern volatile __bit ADIE @ (((unsigned) &PIE1)*8) + 6;
[; ;pic16f1519.h: 4687: extern volatile __bit ADIF @ (((unsigned) &PIR1)*8) + 6;
[; ;pic16f1519.h: 4689: extern volatile __bit ADON @ (((unsigned) &ADCON0)*8) + 0;
[; ;pic16f1519.h: 4691: extern volatile __bit ADPREF0 @ (((unsigned) &ADCON1)*8) + 0;
[; ;pic16f1519.h: 4693: extern volatile __bit ADPREF1 @ (((unsigned) &ADCON1)*8) + 1;
[; ;pic16f1519.h: 4695: extern volatile __bit AHEN @ (((unsigned) &SSPCON3)*8) + 1;
[; ;pic16f1519.h: 4697: extern volatile __bit ANSA0 @ (((unsigned) &ANSELA)*8) + 0;
[; ;pic16f1519.h: 4699: extern volatile __bit ANSA1 @ (((unsigned) &ANSELA)*8) + 1;
[; ;pic16f1519.h: 4701: extern volatile __bit ANSA2 @ (((unsigned) &ANSELA)*8) + 2;
[; ;pic16f1519.h: 4703: extern volatile __bit ANSA3 @ (((unsigned) &ANSELA)*8) + 3;
[; ;pic16f1519.h: 4705: extern volatile __bit ANSA5 @ (((unsigned) &ANSELA)*8) + 5;
[; ;pic16f1519.h: 4707: extern volatile __bit ANSB0 @ (((unsigned) &ANSELB)*8) + 0;
[; ;pic16f1519.h: 4709: extern volatile __bit ANSB1 @ (((unsigned) &ANSELB)*8) + 1;
[; ;pic16f1519.h: 4711: extern volatile __bit ANSB2 @ (((unsigned) &ANSELB)*8) + 2;
[; ;pic16f1519.h: 4713: extern volatile __bit ANSB3 @ (((unsigned) &ANSELB)*8) + 3;
[; ;pic16f1519.h: 4715: extern volatile __bit ANSB4 @ (((unsigned) &ANSELB)*8) + 4;
[; ;pic16f1519.h: 4717: extern volatile __bit ANSB5 @ (((unsigned) &ANSELB)*8) + 5;
[; ;pic16f1519.h: 4719: extern volatile __bit ANSC0 @ (((unsigned) &ANSELC)*8) + 0;
[; ;pic16f1519.h: 4721: extern volatile __bit ANSC1 @ (((unsigned) &ANSELC)*8) + 1;
[; ;pic16f1519.h: 4723: extern volatile __bit ANSC2 @ (((unsigned) &ANSELC)*8) + 2;
[; ;pic16f1519.h: 4725: extern volatile __bit ANSC3 @ (((unsigned) &ANSELC)*8) + 3;
[; ;pic16f1519.h: 4727: extern volatile __bit ANSC4 @ (((unsigned) &ANSELC)*8) + 4;
[; ;pic16f1519.h: 4729: extern volatile __bit ANSC5 @ (((unsigned) &ANSELC)*8) + 5;
[; ;pic16f1519.h: 4731: extern volatile __bit ANSC6 @ (((unsigned) &ANSELC)*8) + 6;
[; ;pic16f1519.h: 4733: extern volatile __bit ANSC7 @ (((unsigned) &ANSELC)*8) + 7;
[; ;pic16f1519.h: 4735: extern volatile __bit ANSD0 @ (((unsigned) &ANSELD)*8) + 0;
[; ;pic16f1519.h: 4737: extern volatile __bit ANSD1 @ (((unsigned) &ANSELD)*8) + 1;
[; ;pic16f1519.h: 4739: extern volatile __bit ANSD2 @ (((unsigned) &ANSELD)*8) + 2;
[; ;pic16f1519.h: 4741: extern volatile __bit ANSD3 @ (((unsigned) &ANSELD)*8) + 3;
[; ;pic16f1519.h: 4743: extern volatile __bit ANSD4 @ (((unsigned) &ANSELD)*8) + 4;
[; ;pic16f1519.h: 4745: extern volatile __bit ANSD5 @ (((unsigned) &ANSELD)*8) + 5;
[; ;pic16f1519.h: 4747: extern volatile __bit ANSD6 @ (((unsigned) &ANSELD)*8) + 6;
[; ;pic16f1519.h: 4749: extern volatile __bit ANSD7 @ (((unsigned) &ANSELD)*8) + 7;
[; ;pic16f1519.h: 4751: extern volatile __bit ANSE0 @ (((unsigned) &ANSELE)*8) + 0;
[; ;pic16f1519.h: 4753: extern volatile __bit ANSE1 @ (((unsigned) &ANSELE)*8) + 1;
[; ;pic16f1519.h: 4755: extern volatile __bit ANSE2 @ (((unsigned) &ANSELE)*8) + 2;
[; ;pic16f1519.h: 4757: extern volatile __bit BCLIE @ (((unsigned) &PIE2)*8) + 3;
[; ;pic16f1519.h: 4759: extern volatile __bit BCLIF @ (((unsigned) &PIR2)*8) + 3;
[; ;pic16f1519.h: 4761: extern volatile __bit BF @ (((unsigned) &SSPSTAT)*8) + 0;
[; ;pic16f1519.h: 4763: extern volatile __bit BOEN @ (((unsigned) &SSPCON3)*8) + 4;
[; ;pic16f1519.h: 4765: extern volatile __bit BORFS @ (((unsigned) &BORCON)*8) + 6;
[; ;pic16f1519.h: 4767: extern volatile __bit BORRDY @ (((unsigned) &BORCON)*8) + 0;
[; ;pic16f1519.h: 4769: extern volatile __bit BRG16 @ (((unsigned) &BAUDCON)*8) + 3;
[; ;pic16f1519.h: 4771: extern volatile __bit BRGH @ (((unsigned) &TXSTA)*8) + 2;
[; ;pic16f1519.h: 4773: extern volatile __bit BSR0 @ (((unsigned) &BSR)*8) + 0;
[; ;pic16f1519.h: 4775: extern volatile __bit BSR1 @ (((unsigned) &BSR)*8) + 1;
[; ;pic16f1519.h: 4777: extern volatile __bit BSR2 @ (((unsigned) &BSR)*8) + 2;
[; ;pic16f1519.h: 4779: extern volatile __bit BSR3 @ (((unsigned) &BSR)*8) + 3;
[; ;pic16f1519.h: 4781: extern volatile __bit BSR4 @ (((unsigned) &BSR)*8) + 4;
[; ;pic16f1519.h: 4783: extern volatile __bit CARRY @ (((unsigned) &STATUS)*8) + 0;
[; ;pic16f1519.h: 4785: extern volatile __bit CCP1IE @ (((unsigned) &PIE1)*8) + 2;
[; ;pic16f1519.h: 4787: extern volatile __bit CCP1IF @ (((unsigned) &PIR1)*8) + 2;
[; ;pic16f1519.h: 4789: extern volatile __bit CCP1M0 @ (((unsigned) &CCP1CON)*8) + 0;
[; ;pic16f1519.h: 4791: extern volatile __bit CCP1M1 @ (((unsigned) &CCP1CON)*8) + 1;
[; ;pic16f1519.h: 4793: extern volatile __bit CCP1M2 @ (((unsigned) &CCP1CON)*8) + 2;
[; ;pic16f1519.h: 4795: extern volatile __bit CCP1M3 @ (((unsigned) &CCP1CON)*8) + 3;
[; ;pic16f1519.h: 4797: extern volatile __bit CCP2IE @ (((unsigned) &PIE2)*8) + 0;
[; ;pic16f1519.h: 4799: extern volatile __bit CCP2IF @ (((unsigned) &PIR2)*8) + 0;
[; ;pic16f1519.h: 4801: extern volatile __bit CCP2M0 @ (((unsigned) &CCP2CON)*8) + 0;
[; ;pic16f1519.h: 4803: extern volatile __bit CCP2M1 @ (((unsigned) &CCP2CON)*8) + 1;
[; ;pic16f1519.h: 4805: extern volatile __bit CCP2M2 @ (((unsigned) &CCP2CON)*8) + 2;
[; ;pic16f1519.h: 4807: extern volatile __bit CCP2M3 @ (((unsigned) &CCP2CON)*8) + 3;
[; ;pic16f1519.h: 4809: extern volatile __bit CCP2SEL @ (((unsigned) &APFCON)*8) + 0;
[; ;pic16f1519.h: 4811: extern volatile __bit CFGS @ (((unsigned) &PMCON1)*8) + 6;
[; ;pic16f1519.h: 4813: extern volatile __bit CHS0 @ (((unsigned) &ADCON0)*8) + 2;
[; ;pic16f1519.h: 4815: extern volatile __bit CHS1 @ (((unsigned) &ADCON0)*8) + 3;
[; ;pic16f1519.h: 4817: extern volatile __bit CHS2 @ (((unsigned) &ADCON0)*8) + 4;
[; ;pic16f1519.h: 4819: extern volatile __bit CHS3 @ (((unsigned) &ADCON0)*8) + 5;
[; ;pic16f1519.h: 4821: extern volatile __bit CHS4 @ (((unsigned) &ADCON0)*8) + 6;
[; ;pic16f1519.h: 4823: extern volatile __bit CKE @ (((unsigned) &SSPSTAT)*8) + 6;
[; ;pic16f1519.h: 4825: extern volatile __bit CKP @ (((unsigned) &SSPCON1)*8) + 4;
[; ;pic16f1519.h: 4827: extern volatile __bit CREN @ (((unsigned) &RCSTA)*8) + 4;
[; ;pic16f1519.h: 4829: extern volatile __bit CSRC @ (((unsigned) &TXSTA)*8) + 7;
[; ;pic16f1519.h: 4831: extern volatile __bit C_SHAD @ (((unsigned) &STATUS_SHAD)*8) + 0;
[; ;pic16f1519.h: 4833: extern volatile __bit DC @ (((unsigned) &STATUS)*8) + 1;
[; ;pic16f1519.h: 4835: extern volatile __bit DC1B0 @ (((unsigned) &CCP1CON)*8) + 4;
[; ;pic16f1519.h: 4837: extern volatile __bit DC1B1 @ (((unsigned) &CCP1CON)*8) + 5;
[; ;pic16f1519.h: 4839: extern volatile __bit DC2B0 @ (((unsigned) &CCP2CON)*8) + 4;
[; ;pic16f1519.h: 4841: extern volatile __bit DC2B1 @ (((unsigned) &CCP2CON)*8) + 5;
[; ;pic16f1519.h: 4843: extern volatile __bit DC_SHAD @ (((unsigned) &STATUS_SHAD)*8) + 1;
[; ;pic16f1519.h: 4845: extern volatile __bit DHEN @ (((unsigned) &SSPCON3)*8) + 0;
[; ;pic16f1519.h: 4847: extern volatile __bit D_nA @ (((unsigned) &SSPSTAT)*8) + 5;
[; ;pic16f1519.h: 4849: extern volatile __bit FERR @ (((unsigned) &RCSTA)*8) + 2;
[; ;pic16f1519.h: 4851: extern volatile __bit FREE @ (((unsigned) &PMCON1)*8) + 4;
[; ;pic16f1519.h: 4853: extern volatile __bit FVREN @ (((unsigned) &FVRCON)*8) + 7;
[; ;pic16f1519.h: 4855: extern volatile __bit FVRRDY @ (((unsigned) &FVRCON)*8) + 6;
[; ;pic16f1519.h: 4857: extern volatile __bit GCEN @ (((unsigned) &SSPCON2)*8) + 7;
[; ;pic16f1519.h: 4859: extern volatile __bit GIE @ (((unsigned) &INTCON)*8) + 7;
[; ;pic16f1519.h: 4861: extern volatile __bit GO @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f1519.h: 4863: extern volatile __bit GO_nDONE @ (((unsigned) &ADCON0)*8) + 1;
[; ;pic16f1519.h: 4865: extern volatile __bit HFIOFR @ (((unsigned) &OSCSTAT)*8) + 4;
[; ;pic16f1519.h: 4867: extern volatile __bit HFIOFS @ (((unsigned) &OSCSTAT)*8) + 0;
[; ;pic16f1519.h: 4869: extern volatile __bit INTE @ (((unsigned) &INTCON)*8) + 4;
[; ;pic16f1519.h: 4871: extern volatile __bit INTEDG @ (((unsigned) &OPTION_REG)*8) + 6;
[; ;pic16f1519.h: 4873: extern volatile __bit INTF @ (((unsigned) &INTCON)*8) + 1;
[; ;pic16f1519.h: 4875: extern volatile __bit IOCBF0 @ (((unsigned) &IOCBF)*8) + 0;
[; ;pic16f1519.h: 4877: extern volatile __bit IOCBF1 @ (((unsigned) &IOCBF)*8) + 1;
[; ;pic16f1519.h: 4879: extern volatile __bit IOCBF2 @ (((unsigned) &IOCBF)*8) + 2;
[; ;pic16f1519.h: 4881: extern volatile __bit IOCBF3 @ (((unsigned) &IOCBF)*8) + 3;
[; ;pic16f1519.h: 4883: extern volatile __bit IOCBF4 @ (((unsigned) &IOCBF)*8) + 4;
[; ;pic16f1519.h: 4885: extern volatile __bit IOCBF5 @ (((unsigned) &IOCBF)*8) + 5;
[; ;pic16f1519.h: 4887: extern volatile __bit IOCBF6 @ (((unsigned) &IOCBF)*8) + 6;
[; ;pic16f1519.h: 4889: extern volatile __bit IOCBF7 @ (((unsigned) &IOCBF)*8) + 7;
[; ;pic16f1519.h: 4891: extern volatile __bit IOCBN0 @ (((unsigned) &IOCBN)*8) + 0;
[; ;pic16f1519.h: 4893: extern volatile __bit IOCBN1 @ (((unsigned) &IOCBN)*8) + 1;
[; ;pic16f1519.h: 4895: extern volatile __bit IOCBN2 @ (((unsigned) &IOCBN)*8) + 2;
[; ;pic16f1519.h: 4897: extern volatile __bit IOCBN3 @ (((unsigned) &IOCBN)*8) + 3;
[; ;pic16f1519.h: 4899: extern volatile __bit IOCBN4 @ (((unsigned) &IOCBN)*8) + 4;
[; ;pic16f1519.h: 4901: extern volatile __bit IOCBN5 @ (((unsigned) &IOCBN)*8) + 5;
[; ;pic16f1519.h: 4903: extern volatile __bit IOCBN6 @ (((unsigned) &IOCBN)*8) + 6;
[; ;pic16f1519.h: 4905: extern volatile __bit IOCBN7 @ (((unsigned) &IOCBN)*8) + 7;
[; ;pic16f1519.h: 4907: extern volatile __bit IOCBP0 @ (((unsigned) &IOCBP)*8) + 0;
[; ;pic16f1519.h: 4909: extern volatile __bit IOCBP1 @ (((unsigned) &IOCBP)*8) + 1;
[; ;pic16f1519.h: 4911: extern volatile __bit IOCBP2 @ (((unsigned) &IOCBP)*8) + 2;
[; ;pic16f1519.h: 4913: extern volatile __bit IOCBP3 @ (((unsigned) &IOCBP)*8) + 3;
[; ;pic16f1519.h: 4915: extern volatile __bit IOCBP4 @ (((unsigned) &IOCBP)*8) + 4;
[; ;pic16f1519.h: 4917: extern volatile __bit IOCBP5 @ (((unsigned) &IOCBP)*8) + 5;
[; ;pic16f1519.h: 4919: extern volatile __bit IOCBP6 @ (((unsigned) &IOCBP)*8) + 6;
[; ;pic16f1519.h: 4921: extern volatile __bit IOCBP7 @ (((unsigned) &IOCBP)*8) + 7;
[; ;pic16f1519.h: 4923: extern volatile __bit IOCIE @ (((unsigned) &INTCON)*8) + 3;
[; ;pic16f1519.h: 4925: extern volatile __bit IOCIF @ (((unsigned) &INTCON)*8) + 0;
[; ;pic16f1519.h: 4927: extern volatile __bit IRCF0 @ (((unsigned) &OSCCON)*8) + 3;
[; ;pic16f1519.h: 4929: extern volatile __bit IRCF1 @ (((unsigned) &OSCCON)*8) + 4;
[; ;pic16f1519.h: 4931: extern volatile __bit IRCF2 @ (((unsigned) &OSCCON)*8) + 5;
[; ;pic16f1519.h: 4933: extern volatile __bit IRCF3 @ (((unsigned) &OSCCON)*8) + 6;
[; ;pic16f1519.h: 4935: extern volatile __bit LATA0 @ (((unsigned) &LATA)*8) + 0;
[; ;pic16f1519.h: 4937: extern volatile __bit LATA1 @ (((unsigned) &LATA)*8) + 1;
[; ;pic16f1519.h: 4939: extern volatile __bit LATA2 @ (((unsigned) &LATA)*8) + 2;
[; ;pic16f1519.h: 4941: extern volatile __bit LATA3 @ (((unsigned) &LATA)*8) + 3;
[; ;pic16f1519.h: 4943: extern volatile __bit LATA4 @ (((unsigned) &LATA)*8) + 4;
[; ;pic16f1519.h: 4945: extern volatile __bit LATA5 @ (((unsigned) &LATA)*8) + 5;
[; ;pic16f1519.h: 4947: extern volatile __bit LATA6 @ (((unsigned) &LATA)*8) + 6;
[; ;pic16f1519.h: 4949: extern volatile __bit LATA7 @ (((unsigned) &LATA)*8) + 7;
[; ;pic16f1519.h: 4951: extern volatile __bit LATB0 @ (((unsigned) &LATB)*8) + 0;
[; ;pic16f1519.h: 4953: extern volatile __bit LATB1 @ (((unsigned) &LATB)*8) + 1;
[; ;pic16f1519.h: 4955: extern volatile __bit LATB2 @ (((unsigned) &LATB)*8) + 2;
[; ;pic16f1519.h: 4957: extern volatile __bit LATB3 @ (((unsigned) &LATB)*8) + 3;
[; ;pic16f1519.h: 4959: extern volatile __bit LATB4 @ (((unsigned) &LATB)*8) + 4;
[; ;pic16f1519.h: 4961: extern volatile __bit LATB5 @ (((unsigned) &LATB)*8) + 5;
[; ;pic16f1519.h: 4963: extern volatile __bit LATB6 @ (((unsigned) &LATB)*8) + 6;
[; ;pic16f1519.h: 4965: extern volatile __bit LATB7 @ (((unsigned) &LATB)*8) + 7;
[; ;pic16f1519.h: 4967: extern volatile __bit LATC0 @ (((unsigned) &LATC)*8) + 0;
[; ;pic16f1519.h: 4969: extern volatile __bit LATC1 @ (((unsigned) &LATC)*8) + 1;
[; ;pic16f1519.h: 4971: extern volatile __bit LATC2 @ (((unsigned) &LATC)*8) + 2;
[; ;pic16f1519.h: 4973: extern volatile __bit LATC3 @ (((unsigned) &LATC)*8) + 3;
[; ;pic16f1519.h: 4975: extern volatile __bit LATC4 @ (((unsigned) &LATC)*8) + 4;
[; ;pic16f1519.h: 4977: extern volatile __bit LATC5 @ (((unsigned) &LATC)*8) + 5;
[; ;pic16f1519.h: 4979: extern volatile __bit LATC6 @ (((unsigned) &LATC)*8) + 6;
[; ;pic16f1519.h: 4981: extern volatile __bit LATC7 @ (((unsigned) &LATC)*8) + 7;
[; ;pic16f1519.h: 4983: extern volatile __bit LATD0 @ (((unsigned) &LATD)*8) + 0;
[; ;pic16f1519.h: 4985: extern volatile __bit LATD1 @ (((unsigned) &LATD)*8) + 1;
[; ;pic16f1519.h: 4987: extern volatile __bit LATD2 @ (((unsigned) &LATD)*8) + 2;
[; ;pic16f1519.h: 4989: extern volatile __bit LATD3 @ (((unsigned) &LATD)*8) + 3;
[; ;pic16f1519.h: 4991: extern volatile __bit LATD4 @ (((unsigned) &LATD)*8) + 4;
[; ;pic16f1519.h: 4993: extern volatile __bit LATD5 @ (((unsigned) &LATD)*8) + 5;
[; ;pic16f1519.h: 4995: extern volatile __bit LATD6 @ (((unsigned) &LATD)*8) + 6;
[; ;pic16f1519.h: 4997: extern volatile __bit LATD7 @ (((unsigned) &LATD)*8) + 7;
[; ;pic16f1519.h: 4999: extern volatile __bit LATE0 @ (((unsigned) &LATE)*8) + 0;
[; ;pic16f1519.h: 5001: extern volatile __bit LATE1 @ (((unsigned) &LATE)*8) + 1;
[; ;pic16f1519.h: 5003: extern volatile __bit LATE2 @ (((unsigned) &LATE)*8) + 2;
[; ;pic16f1519.h: 5005: extern volatile __bit LFIOFR @ (((unsigned) &OSCSTAT)*8) + 1;
[; ;pic16f1519.h: 5007: extern volatile __bit LWLO @ (((unsigned) &PMCON1)*8) + 5;
[; ;pic16f1519.h: 5009: extern volatile __bit OERR @ (((unsigned) &RCSTA)*8) + 1;
[; ;pic16f1519.h: 5011: extern volatile __bit OSFIE @ (((unsigned) &PIE2)*8) + 7;
[; ;pic16f1519.h: 5013: extern volatile __bit OSFIF @ (((unsigned) &PIR2)*8) + 7;
[; ;pic16f1519.h: 5015: extern volatile __bit OSTS @ (((unsigned) &OSCSTAT)*8) + 5;
[; ;pic16f1519.h: 5017: extern volatile __bit PCIE @ (((unsigned) &SSPCON3)*8) + 6;
[; ;pic16f1519.h: 5019: extern volatile __bit PEIE @ (((unsigned) &INTCON)*8) + 6;
[; ;pic16f1519.h: 5021: extern volatile __bit PEN @ (((unsigned) &SSPCON2)*8) + 2;
[; ;pic16f1519.h: 5023: extern volatile __bit PS0 @ (((unsigned) &OPTION_REG)*8) + 0;
[; ;pic16f1519.h: 5025: extern volatile __bit PS1 @ (((unsigned) &OPTION_REG)*8) + 1;
[; ;pic16f1519.h: 5027: extern volatile __bit PS2 @ (((unsigned) &OPTION_REG)*8) + 2;
[; ;pic16f1519.h: 5029: extern volatile __bit PSA @ (((unsigned) &OPTION_REG)*8) + 3;
[; ;pic16f1519.h: 5031: extern volatile __bit RA0 @ (((unsigned) &PORTA)*8) + 0;
[; ;pic16f1519.h: 5033: extern volatile __bit RA1 @ (((unsigned) &PORTA)*8) + 1;
[; ;pic16f1519.h: 5035: extern volatile __bit RA2 @ (((unsigned) &PORTA)*8) + 2;
[; ;pic16f1519.h: 5037: extern volatile __bit RA3 @ (((unsigned) &PORTA)*8) + 3;
[; ;pic16f1519.h: 5039: extern volatile __bit RA4 @ (((unsigned) &PORTA)*8) + 4;
[; ;pic16f1519.h: 5041: extern volatile __bit RA5 @ (((unsigned) &PORTA)*8) + 5;
[; ;pic16f1519.h: 5043: extern volatile __bit RA6 @ (((unsigned) &PORTA)*8) + 6;
[; ;pic16f1519.h: 5045: extern volatile __bit RA7 @ (((unsigned) &PORTA)*8) + 7;
[; ;pic16f1519.h: 5047: extern volatile __bit RB0 @ (((unsigned) &PORTB)*8) + 0;
[; ;pic16f1519.h: 5049: extern volatile __bit RB1 @ (((unsigned) &PORTB)*8) + 1;
[; ;pic16f1519.h: 5051: extern volatile __bit RB2 @ (((unsigned) &PORTB)*8) + 2;
[; ;pic16f1519.h: 5053: extern volatile __bit RB3 @ (((unsigned) &PORTB)*8) + 3;
[; ;pic16f1519.h: 5055: extern volatile __bit RB4 @ (((unsigned) &PORTB)*8) + 4;
[; ;pic16f1519.h: 5057: extern volatile __bit RB5 @ (((unsigned) &PORTB)*8) + 5;
[; ;pic16f1519.h: 5059: extern volatile __bit RB6 @ (((unsigned) &PORTB)*8) + 6;
[; ;pic16f1519.h: 5061: extern volatile __bit RB7 @ (((unsigned) &PORTB)*8) + 7;
[; ;pic16f1519.h: 5063: extern volatile __bit RC0 @ (((unsigned) &PORTC)*8) + 0;
[; ;pic16f1519.h: 5065: extern volatile __bit RC1 @ (((unsigned) &PORTC)*8) + 1;
[; ;pic16f1519.h: 5067: extern volatile __bit RC2 @ (((unsigned) &PORTC)*8) + 2;
[; ;pic16f1519.h: 5069: extern volatile __bit RC3 @ (((unsigned) &PORTC)*8) + 3;
[; ;pic16f1519.h: 5071: extern volatile __bit RC4 @ (((unsigned) &PORTC)*8) + 4;
[; ;pic16f1519.h: 5073: extern volatile __bit RC5 @ (((unsigned) &PORTC)*8) + 5;
[; ;pic16f1519.h: 5075: extern volatile __bit RC6 @ (((unsigned) &PORTC)*8) + 6;
[; ;pic16f1519.h: 5077: extern volatile __bit RC7 @ (((unsigned) &PORTC)*8) + 7;
[; ;pic16f1519.h: 5079: extern volatile __bit RCEN @ (((unsigned) &SSPCON2)*8) + 3;
[; ;pic16f1519.h: 5081: extern volatile __bit RCIDL @ (((unsigned) &BAUDCON)*8) + 6;
[; ;pic16f1519.h: 5083: extern volatile __bit RCIE @ (((unsigned) &PIE1)*8) + 5;
[; ;pic16f1519.h: 5085: extern volatile __bit RCIF @ (((unsigned) &PIR1)*8) + 5;
[; ;pic16f1519.h: 5087: extern volatile __bit RD @ (((unsigned) &PMCON1)*8) + 0;
[; ;pic16f1519.h: 5089: extern volatile __bit RD0 @ (((unsigned) &PORTD)*8) + 0;
[; ;pic16f1519.h: 5091: extern volatile __bit RD1 @ (((unsigned) &PORTD)*8) + 1;
[; ;pic16f1519.h: 5093: extern volatile __bit RD2 @ (((unsigned) &PORTD)*8) + 2;
[; ;pic16f1519.h: 5095: extern volatile __bit RD3 @ (((unsigned) &PORTD)*8) + 3;
[; ;pic16f1519.h: 5097: extern volatile __bit RD4 @ (((unsigned) &PORTD)*8) + 4;
[; ;pic16f1519.h: 5099: extern volatile __bit RD5 @ (((unsigned) &PORTD)*8) + 5;
[; ;pic16f1519.h: 5101: extern volatile __bit RD6 @ (((unsigned) &PORTD)*8) + 6;
[; ;pic16f1519.h: 5103: extern volatile __bit RD7 @ (((unsigned) &PORTD)*8) + 7;
[; ;pic16f1519.h: 5105: extern volatile __bit RE0 @ (((unsigned) &PORTE)*8) + 0;
[; ;pic16f1519.h: 5107: extern volatile __bit RE1 @ (((unsigned) &PORTE)*8) + 1;
[; ;pic16f1519.h: 5109: extern volatile __bit RE2 @ (((unsigned) &PORTE)*8) + 2;
[; ;pic16f1519.h: 5111: extern volatile __bit RE3 @ (((unsigned) &PORTE)*8) + 3;
[; ;pic16f1519.h: 5113: extern volatile __bit RSEN @ (((unsigned) &SSPCON2)*8) + 1;
[; ;pic16f1519.h: 5115: extern volatile __bit RX9 @ (((unsigned) &RCSTA)*8) + 6;
[; ;pic16f1519.h: 5117: extern volatile __bit RX9D @ (((unsigned) &RCSTA)*8) + 0;
[; ;pic16f1519.h: 5119: extern volatile __bit R_nW @ (((unsigned) &SSPSTAT)*8) + 2;
[; ;pic16f1519.h: 5121: extern volatile __bit SBCDE @ (((unsigned) &SSPCON3)*8) + 2;
[; ;pic16f1519.h: 5123: extern volatile __bit SBOREN @ (((unsigned) &BORCON)*8) + 7;
[; ;pic16f1519.h: 5125: extern volatile __bit SCIE @ (((unsigned) &SSPCON3)*8) + 5;
[; ;pic16f1519.h: 5127: extern volatile __bit SCKP @ (((unsigned) &BAUDCON)*8) + 4;
[; ;pic16f1519.h: 5129: extern volatile __bit SCS0 @ (((unsigned) &OSCCON)*8) + 0;
[; ;pic16f1519.h: 5131: extern volatile __bit SCS1 @ (((unsigned) &OSCCON)*8) + 1;
[; ;pic16f1519.h: 5133: extern volatile __bit SDAHT @ (((unsigned) &SSPCON3)*8) + 3;
[; ;pic16f1519.h: 5135: extern volatile __bit SEN @ (((unsigned) &SSPCON2)*8) + 0;
[; ;pic16f1519.h: 5137: extern volatile __bit SENDB @ (((unsigned) &TXSTA)*8) + 3;
[; ;pic16f1519.h: 5139: extern volatile __bit SMP @ (((unsigned) &SSPSTAT)*8) + 7;
[; ;pic16f1519.h: 5141: extern volatile __bit SOSCR @ (((unsigned) &OSCSTAT)*8) + 7;
[; ;pic16f1519.h: 5143: extern volatile __bit SPEN @ (((unsigned) &RCSTA)*8) + 7;
[; ;pic16f1519.h: 5145: extern volatile __bit SREN @ (((unsigned) &RCSTA)*8) + 5;
[; ;pic16f1519.h: 5147: extern volatile __bit SSPEN @ (((unsigned) &SSPCON1)*8) + 5;
[; ;pic16f1519.h: 5149: extern volatile __bit SSPIE @ (((unsigned) &PIE1)*8) + 3;
[; ;pic16f1519.h: 5151: extern volatile __bit SSPIF @ (((unsigned) &PIR1)*8) + 3;
[; ;pic16f1519.h: 5153: extern volatile __bit SSPM0 @ (((unsigned) &SSPCON1)*8) + 0;
[; ;pic16f1519.h: 5155: extern volatile __bit SSPM1 @ (((unsigned) &SSPCON1)*8) + 1;
[; ;pic16f1519.h: 5157: extern volatile __bit SSPM2 @ (((unsigned) &SSPCON1)*8) + 2;
[; ;pic16f1519.h: 5159: extern volatile __bit SSPM3 @ (((unsigned) &SSPCON1)*8) + 3;
[; ;pic16f1519.h: 5161: extern volatile __bit SSPOV @ (((unsigned) &SSPCON1)*8) + 6;
[; ;pic16f1519.h: 5163: extern volatile __bit SSSEL @ (((unsigned) &APFCON)*8) + 1;
[; ;pic16f1519.h: 5165: extern volatile __bit STKOVF @ (((unsigned) &PCON)*8) + 7;
[; ;pic16f1519.h: 5167: extern volatile __bit STKUNF @ (((unsigned) &PCON)*8) + 6;
[; ;pic16f1519.h: 5169: extern volatile __bit SWDTEN @ (((unsigned) &WDTCON)*8) + 0;
[; ;pic16f1519.h: 5171: extern volatile __bit SYNC @ (((unsigned) &TXSTA)*8) + 4;
[; ;pic16f1519.h: 5173: extern volatile __bit T0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f1519.h: 5175: extern volatile __bit T0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f1519.h: 5177: extern volatile __bit T0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f1519.h: 5179: extern volatile __bit T0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f1519.h: 5181: extern volatile __bit T1CKPS0 @ (((unsigned) &T1CON)*8) + 4;
[; ;pic16f1519.h: 5183: extern volatile __bit T1CKPS1 @ (((unsigned) &T1CON)*8) + 5;
[; ;pic16f1519.h: 5185: extern volatile __bit T1GGO_nDONE @ (((unsigned) &T1GCON)*8) + 3;
[; ;pic16f1519.h: 5187: extern volatile __bit T1GPOL @ (((unsigned) &T1GCON)*8) + 6;
[; ;pic16f1519.h: 5189: extern volatile __bit T1GSPM @ (((unsigned) &T1GCON)*8) + 4;
[; ;pic16f1519.h: 5191: extern volatile __bit T1GSS0 @ (((unsigned) &T1GCON)*8) + 0;
[; ;pic16f1519.h: 5193: extern volatile __bit T1GSS1 @ (((unsigned) &T1GCON)*8) + 1;
[; ;pic16f1519.h: 5195: extern volatile __bit T1GTM @ (((unsigned) &T1GCON)*8) + 5;
[; ;pic16f1519.h: 5197: extern volatile __bit T1GVAL @ (((unsigned) &T1GCON)*8) + 2;
[; ;pic16f1519.h: 5199: extern volatile __bit T1OSCEN @ (((unsigned) &T1CON)*8) + 3;
[; ;pic16f1519.h: 5201: extern volatile __bit T1OSCR @ (((unsigned) &OSCSTAT)*8) + 7;
[; ;pic16f1519.h: 5203: extern volatile __bit T2CKPS0 @ (((unsigned) &T2CON)*8) + 0;
[; ;pic16f1519.h: 5205: extern volatile __bit T2CKPS1 @ (((unsigned) &T2CON)*8) + 1;
[; ;pic16f1519.h: 5207: extern volatile __bit T2OUTPS0 @ (((unsigned) &T2CON)*8) + 3;
[; ;pic16f1519.h: 5209: extern volatile __bit T2OUTPS1 @ (((unsigned) &T2CON)*8) + 4;
[; ;pic16f1519.h: 5211: extern volatile __bit T2OUTPS2 @ (((unsigned) &T2CON)*8) + 5;
[; ;pic16f1519.h: 5213: extern volatile __bit T2OUTPS3 @ (((unsigned) &T2CON)*8) + 6;
[; ;pic16f1519.h: 5215: extern volatile __bit TMR0CS @ (((unsigned) &OPTION_REG)*8) + 5;
[; ;pic16f1519.h: 5217: extern volatile __bit TMR0IE @ (((unsigned) &INTCON)*8) + 5;
[; ;pic16f1519.h: 5219: extern volatile __bit TMR0IF @ (((unsigned) &INTCON)*8) + 2;
[; ;pic16f1519.h: 5221: extern volatile __bit TMR0SE @ (((unsigned) &OPTION_REG)*8) + 4;
[; ;pic16f1519.h: 5223: extern volatile __bit TMR1CS0 @ (((unsigned) &T1CON)*8) + 6;
[; ;pic16f1519.h: 5225: extern volatile __bit TMR1CS1 @ (((unsigned) &T1CON)*8) + 7;
[; ;pic16f1519.h: 5227: extern volatile __bit TMR1GE @ (((unsigned) &T1GCON)*8) + 7;
[; ;pic16f1519.h: 5229: extern volatile __bit TMR1GIE @ (((unsigned) &PIE1)*8) + 7;
[; ;pic16f1519.h: 5231: extern volatile __bit TMR1GIF @ (((unsigned) &PIR1)*8) + 7;
[; ;pic16f1519.h: 5233: extern volatile __bit TMR1IE @ (((unsigned) &PIE1)*8) + 0;
[; ;pic16f1519.h: 5235: extern volatile __bit TMR1IF @ (((unsigned) &PIR1)*8) + 0;
[; ;pic16f1519.h: 5237: extern volatile __bit TMR1ON @ (((unsigned) &T1CON)*8) + 0;
[; ;pic16f1519.h: 5239: extern volatile __bit TMR2IE @ (((unsigned) &PIE1)*8) + 1;
[; ;pic16f1519.h: 5241: extern volatile __bit TMR2IF @ (((unsigned) &PIR1)*8) + 1;
[; ;pic16f1519.h: 5243: extern volatile __bit TMR2ON @ (((unsigned) &T2CON)*8) + 2;
[; ;pic16f1519.h: 5245: extern volatile __bit TRISA0 @ (((unsigned) &TRISA)*8) + 0;
[; ;pic16f1519.h: 5247: extern volatile __bit TRISA1 @ (((unsigned) &TRISA)*8) + 1;
[; ;pic16f1519.h: 5249: extern volatile __bit TRISA2 @ (((unsigned) &TRISA)*8) + 2;
[; ;pic16f1519.h: 5251: extern volatile __bit TRISA3 @ (((unsigned) &TRISA)*8) + 3;
[; ;pic16f1519.h: 5253: extern volatile __bit TRISA4 @ (((unsigned) &TRISA)*8) + 4;
[; ;pic16f1519.h: 5255: extern volatile __bit TRISA5 @ (((unsigned) &TRISA)*8) + 5;
[; ;pic16f1519.h: 5257: extern volatile __bit TRISA6 @ (((unsigned) &TRISA)*8) + 6;
[; ;pic16f1519.h: 5259: extern volatile __bit TRISA7 @ (((unsigned) &TRISA)*8) + 7;
[; ;pic16f1519.h: 5261: extern volatile __bit TRISB0 @ (((unsigned) &TRISB)*8) + 0;
[; ;pic16f1519.h: 5263: extern volatile __bit TRISB1 @ (((unsigned) &TRISB)*8) + 1;
[; ;pic16f1519.h: 5265: extern volatile __bit TRISB2 @ (((unsigned) &TRISB)*8) + 2;
[; ;pic16f1519.h: 5267: extern volatile __bit TRISB3 @ (((unsigned) &TRISB)*8) + 3;
[; ;pic16f1519.h: 5269: extern volatile __bit TRISB4 @ (((unsigned) &TRISB)*8) + 4;
[; ;pic16f1519.h: 5271: extern volatile __bit TRISB5 @ (((unsigned) &TRISB)*8) + 5;
[; ;pic16f1519.h: 5273: extern volatile __bit TRISB6 @ (((unsigned) &TRISB)*8) + 6;
[; ;pic16f1519.h: 5275: extern volatile __bit TRISB7 @ (((unsigned) &TRISB)*8) + 7;
[; ;pic16f1519.h: 5277: extern volatile __bit TRISC0 @ (((unsigned) &TRISC)*8) + 0;
[; ;pic16f1519.h: 5279: extern volatile __bit TRISC1 @ (((unsigned) &TRISC)*8) + 1;
[; ;pic16f1519.h: 5281: extern volatile __bit TRISC2 @ (((unsigned) &TRISC)*8) + 2;
[; ;pic16f1519.h: 5283: extern volatile __bit TRISC3 @ (((unsigned) &TRISC)*8) + 3;
[; ;pic16f1519.h: 5285: extern volatile __bit TRISC4 @ (((unsigned) &TRISC)*8) + 4;
[; ;pic16f1519.h: 5287: extern volatile __bit TRISC5 @ (((unsigned) &TRISC)*8) + 5;
[; ;pic16f1519.h: 5289: extern volatile __bit TRISC6 @ (((unsigned) &TRISC)*8) + 6;
[; ;pic16f1519.h: 5291: extern volatile __bit TRISC7 @ (((unsigned) &TRISC)*8) + 7;
[; ;pic16f1519.h: 5293: extern volatile __bit TRISD0 @ (((unsigned) &TRISD)*8) + 0;
[; ;pic16f1519.h: 5295: extern volatile __bit TRISD1 @ (((unsigned) &TRISD)*8) + 1;
[; ;pic16f1519.h: 5297: extern volatile __bit TRISD2 @ (((unsigned) &TRISD)*8) + 2;
[; ;pic16f1519.h: 5299: extern volatile __bit TRISD3 @ (((unsigned) &TRISD)*8) + 3;
[; ;pic16f1519.h: 5301: extern volatile __bit TRISD4 @ (((unsigned) &TRISD)*8) + 4;
[; ;pic16f1519.h: 5303: extern volatile __bit TRISD5 @ (((unsigned) &TRISD)*8) + 5;
[; ;pic16f1519.h: 5305: extern volatile __bit TRISD6 @ (((unsigned) &TRISD)*8) + 6;
[; ;pic16f1519.h: 5307: extern volatile __bit TRISD7 @ (((unsigned) &TRISD)*8) + 7;
[; ;pic16f1519.h: 5309: extern volatile __bit TRISE0 @ (((unsigned) &TRISE)*8) + 0;
[; ;pic16f1519.h: 5311: extern volatile __bit TRISE1 @ (((unsigned) &TRISE)*8) + 1;
[; ;pic16f1519.h: 5313: extern volatile __bit TRISE2 @ (((unsigned) &TRISE)*8) + 2;
[; ;pic16f1519.h: 5315: extern volatile __bit TRMT @ (((unsigned) &TXSTA)*8) + 1;
[; ;pic16f1519.h: 5317: extern volatile __bit TSEN @ (((unsigned) &FVRCON)*8) + 5;
[; ;pic16f1519.h: 5319: extern volatile __bit TSRNG @ (((unsigned) &FVRCON)*8) + 4;
[; ;pic16f1519.h: 5321: extern volatile __bit TX9 @ (((unsigned) &TXSTA)*8) + 6;
[; ;pic16f1519.h: 5323: extern volatile __bit TX9D @ (((unsigned) &TXSTA)*8) + 0;
[; ;pic16f1519.h: 5325: extern volatile __bit TXEN @ (((unsigned) &TXSTA)*8) + 5;
[; ;pic16f1519.h: 5327: extern volatile __bit TXIE @ (((unsigned) &PIE1)*8) + 4;
[; ;pic16f1519.h: 5329: extern volatile __bit TXIF @ (((unsigned) &PIR1)*8) + 4;
[; ;pic16f1519.h: 5331: extern volatile __bit UA @ (((unsigned) &SSPSTAT)*8) + 1;
[; ;pic16f1519.h: 5333: extern volatile __bit VREGPM @ (((unsigned) &VREGCON)*8) + 1;
[; ;pic16f1519.h: 5335: extern volatile __bit WCOL @ (((unsigned) &SSPCON1)*8) + 7;
[; ;pic16f1519.h: 5337: extern volatile __bit WDTPS0 @ (((unsigned) &WDTCON)*8) + 1;
[; ;pic16f1519.h: 5339: extern volatile __bit WDTPS1 @ (((unsigned) &WDTCON)*8) + 2;
[; ;pic16f1519.h: 5341: extern volatile __bit WDTPS2 @ (((unsigned) &WDTCON)*8) + 3;
[; ;pic16f1519.h: 5343: extern volatile __bit WDTPS3 @ (((unsigned) &WDTCON)*8) + 4;
[; ;pic16f1519.h: 5345: extern volatile __bit WDTPS4 @ (((unsigned) &WDTCON)*8) + 5;
[; ;pic16f1519.h: 5347: extern volatile __bit WPUB0 @ (((unsigned) &WPUB)*8) + 0;
[; ;pic16f1519.h: 5349: extern volatile __bit WPUB1 @ (((unsigned) &WPUB)*8) + 1;
[; ;pic16f1519.h: 5351: extern volatile __bit WPUB2 @ (((unsigned) &WPUB)*8) + 2;
[; ;pic16f1519.h: 5353: extern volatile __bit WPUB3 @ (((unsigned) &WPUB)*8) + 3;
[; ;pic16f1519.h: 5355: extern volatile __bit WPUB4 @ (((unsigned) &WPUB)*8) + 4;
[; ;pic16f1519.h: 5357: extern volatile __bit WPUB5 @ (((unsigned) &WPUB)*8) + 5;
[; ;pic16f1519.h: 5359: extern volatile __bit WPUB6 @ (((unsigned) &WPUB)*8) + 6;
[; ;pic16f1519.h: 5361: extern volatile __bit WPUB7 @ (((unsigned) &WPUB)*8) + 7;
[; ;pic16f1519.h: 5363: extern volatile __bit WPUE3 @ (((unsigned) &WPUE)*8) + 3;
[; ;pic16f1519.h: 5365: extern volatile __bit WR @ (((unsigned) &PMCON1)*8) + 1;
[; ;pic16f1519.h: 5367: extern volatile __bit WREN @ (((unsigned) &PMCON1)*8) + 2;
[; ;pic16f1519.h: 5369: extern volatile __bit WRERR @ (((unsigned) &PMCON1)*8) + 3;
[; ;pic16f1519.h: 5371: extern volatile __bit WUE @ (((unsigned) &BAUDCON)*8) + 1;
[; ;pic16f1519.h: 5373: extern volatile __bit ZERO @ (((unsigned) &STATUS)*8) + 2;
[; ;pic16f1519.h: 5375: extern volatile __bit Z_SHAD @ (((unsigned) &STATUS_SHAD)*8) + 2;
[; ;pic16f1519.h: 5377: extern volatile __bit nBOR @ (((unsigned) &PCON)*8) + 0;
[; ;pic16f1519.h: 5379: extern volatile __bit nPD @ (((unsigned) &STATUS)*8) + 3;
[; ;pic16f1519.h: 5381: extern volatile __bit nPOR @ (((unsigned) &PCON)*8) + 1;
[; ;pic16f1519.h: 5383: extern volatile __bit nRI @ (((unsigned) &PCON)*8) + 2;
[; ;pic16f1519.h: 5385: extern volatile __bit nRMCLR @ (((unsigned) &PCON)*8) + 3;
[; ;pic16f1519.h: 5387: extern volatile __bit nRWDT @ (((unsigned) &PCON)*8) + 4;
[; ;pic16f1519.h: 5389: extern volatile __bit nT1SYNC @ (((unsigned) &T1CON)*8) + 2;
[; ;pic16f1519.h: 5391: extern volatile __bit nTO @ (((unsigned) &STATUS)*8) + 4;
[; ;pic16f1519.h: 5393: extern volatile __bit nWPUEN @ (((unsigned) &OPTION_REG)*8) + 7;
[; ;pic.h: 29: extern void __nop(void);
[; ;pic.h: 78: extern unsigned int flash_read(unsigned short addr);
[; ;pic.h: 153: extern __nonreentrant void _delay(unsigned long);
[; ;pic.h: 155: extern __nonreentrant void _delaywdt(unsigned long);
[; ;pic.h: 158: extern __nonreentrant void _delay3(unsigned char);
[; ;pic.h: 193: extern __bank0 unsigned char __resetbits;
[; ;pic.h: 194: extern __bank0 __bit __powerdown;
[; ;pic.h: 195: extern __bank0 __bit __timeout;
"8 Init.h
[v _init `(v ~T0 @X0 1 ef ]
{
[; ;Init.h: 8: void init(void) {
[e :U _init ]
[f ]
[; ;Init.h: 10: PORTA = 0; PORTB = 0; PORTC = 0; PORTD = 0; PORTE = 0;
"10
[e = _PORTA -> -> 0 `i `uc ]
[e = _PORTB -> -> 0 `i `uc ]
[e = _PORTC -> -> 0 `i `uc ]
[e = _PORTD -> -> 0 `i `uc ]
[e = _PORTE -> -> 0 `i `uc ]
[; ;Init.h: 11: LATA = 0; LATB = 0; LATC = 0; LATD = 0; LATE = 0;
"11
[e = _LATA -> -> 0 `i `uc ]
[e = _LATB -> -> 0 `i `uc ]
[e = _LATC -> -> 0 `i `uc ]
[e = _LATD -> -> 0 `i `uc ]
[e = _LATE -> -> 0 `i `uc ]
[; ;Init.h: 13: TRISA = 0b11101111;
"13
[e = _TRISA -> -> 239 `i `uc ]
[; ;Init.h: 14: ANSELA= 0b00101111;
"14
[e = _ANSELA -> -> 47 `i `uc ]
[; ;Init.h: 16: TRISB = 0b11100101;
"16
[e = _TRISB -> -> 229 `i `uc ]
[; ;Init.h: 17: ANSELB= 0b00000000;
"17
[e = _ANSELB -> -> 0 `i `uc ]
[; ;Init.h: 18: WPUB = 0b00100001;
"18
[e = _WPUB -> -> 33 `i `uc ]
[; ;Init.h: 19: IOCBP = 0b00000001;
"19
[e = _IOCBP -> -> 1 `i `uc ]
[; ;Init.h: 20: IOCBN = 0b00100000;
"20
[e = _IOCBN -> -> 32 `i `uc ]
[; ;Init.h: 21: IOCBF = 0b00000000;
"21
[e = _IOCBF -> -> 0 `i `uc ]
[; ;Init.h: 23: TRISC = 0b11111001;
"23
[e = _TRISC -> -> 249 `i `uc ]
[; ;Init.h: 24: ANSELC= 0b11100000;
"24
[e = _ANSELC -> -> 224 `i `uc ]
[; ;Init.h: 25: TRISD = 0b11010000;
"25
[e = _TRISD -> -> 208 `i `uc ]
[; ;Init.h: 26: ANSELD = 0b11000000;
"26
[e = _ANSELD -> -> 192 `i `uc ]
[; ;Init.h: 27: TRISE = 0b00001111;
"27
[e = _TRISE -> -> 15 `i `uc ]
[; ;Init.h: 28: ANSELE = 0b00000111;
"28
[e = _ANSELE -> -> 7 `i `uc ]
[; ;Init.h: 30: ADCON0 = 0b00000001;
"30
[e = _ADCON0 -> -> 1 `i `uc ]
[; ;Init.h: 31: ADCON1 = 0b00100000;
"31
[e = _ADCON1 -> -> 32 `i `uc ]
[; ;Init.h: 32: OPTION_REG = 0b00000011;
"32
[e = _OPTION_REG -> -> 3 `i `uc ]
[; ;Init.h: 33: INTCON = 0b01101000;
"33
[e = _INTCON -> -> 104 `i `uc ]
[; ;Init.h: 34: PIE1 = 0b00000000;
"34
[e = _PIE1 -> -> 0 `i `uc ]
[; ;Init.h: 35: PIR1 = 0b00000000;
"35
[e = _PIR1 -> -> 0 `i `uc ]
[; ;Init.h: 36: PIE2 = 0b00000000;
"36
[e = _PIE2 -> -> 0 `i `uc ]
[; ;Init.h: 37: PIR2 = 0b00000000;
"37
[e = _PIR2 -> -> 0 `i `uc ]
[; ;Init.h: 38: T1GCON = 0b00000000;
"38
[e = _T1GCON -> -> 0 `i `uc ]
[; ;Init.h: 41: T1CON = 0b00000001;
"41
[e = _T1CON -> -> 1 `i `uc ]
[; ;Init.h: 42: TMR0 = 0;
"42
[e = _TMR0 -> -> 0 `i `uc ]
[; ;Init.h: 43: SSPSTAT = 0b10000000;
"43
[e = _SSPSTAT -> -> 128 `i `uc ]
[; ;Init.h: 45: SSPADD = 4;
"45
[e = _SSPADD -> -> 4 `i `uc ]
[; ;Init.h: 46: SSPCON1 = 0b00101000;
"46
[e = _SSPCON1 -> -> 40 `i `uc ]
[; ;Init.h: 47: SSPIF = 0;
"47
[e = _SSPIF -> -> 0 `i `b ]
[; ;Init.h: 48: BCLIF = 0;
"48
[e = _BCLIF -> -> 0 `i `b ]
[; ;Init.h: 50: PR2 = 255;
"50
[e = _PR2 -> -> 255 `i `uc ]
[; ;Init.h: 51: CCPR1L = 255;
"51
[e = _CCPR1L -> -> 255 `i `uc ]
[; ;Init.h: 52: CCP1CON = 0b00001100;
"52
[e = _CCP1CON -> -> 12 `i `uc ]
[; ;Init.h: 53: CCPR2L = 255;
"53
[e = _CCPR2L -> -> 255 `i `uc ]
[; ;Init.h: 54: CCP2CON = 0b00001100;
"54
[e = _CCP2CON -> -> 12 `i `uc ]
[; ;Init.h: 55: T2CON = 0b00000111;
"55
[e = _T2CON -> -> 7 `i `uc ]
[; ;Init.h: 56: }
"56
[e :UE 254 ]
}
[; ;MLX_read.h: 9: extern char I2C_Add;
[; ;MLX_read.h: 10: extern const char MLX_Slave;
[; ;MLX_read.h: 11: extern char Register_R_MLX;
[; ;MLX_read.h: 12: extern char Temperatur_LO_rechts;
[; ;MLX_read.h: 13: extern char Temperatur_LO_links;
[; ;MLX_read.h: 14: extern char Temperatur_HI_rechts;
[; ;MLX_read.h: 15: extern char Temperatur_HI_links;
[; ;MLX_read.h: 16: extern char Datum_S[20];
"18 MLX_read.h
[v _MLX_Slave_toggel `b ~T0 @X0 1 e ]
[; ;MLX_read.h: 18: bit MLX_Slave_toggel;
"19
[v _junk `uc ~T0 @X0 1 e ]
[; ;MLX_read.h: 19: char junk;
"21
[v _warten_auf_SSP_flag `(v ~T0 @X0 1 ef ]
{
[; ;MLX_read.h: 21: void warten_auf_SSP_flag (void){
[e :U _warten_auf_SSP_flag ]
[f ]
[; ;MLX_read.h: 22: while(!SSPIF);
"22
[e $U 256  ]
[e :U 257 ]
[e :U 256 ]
[e $ ! _SSPIF 257  ]
[e :U 258 ]
[; ;MLX_read.h: 23: SSPIF = 0;
"23
[e = _SSPIF -> -> 0 `i `b ]
[; ;MLX_read.h: 24: }
"24
[e :UE 255 ]
}
"29
[v _MLX_read `(v ~T0 @X0 1 ef ]
{
[; ;MLX_read.h: 29: void MLX_read (void) {
[e :U _MLX_read ]
[f ]
[; ;MLX_read.h: 30: SSPADD = 49;
"30
[e = _SSPADD -> -> 49 `i `uc ]
[; ;MLX_read.h: 31: MLX_Slave_toggel = !MLX_Slave_toggel;
"31
[e = _MLX_Slave_toggel ! _MLX_Slave_toggel ]
[; ;MLX_read.h: 32: I2C_Add = MLX_Slave + MLX_Slave_toggel;
"32
[e = _I2C_Add -> + -> _MLX_Slave `i -> _MLX_Slave_toggel `i `uc ]
[; ;MLX_read.h: 33: SSPIF = 0;
"33
[e = _SSPIF -> -> 0 `i `b ]
[; ;MLX_read.h: 34: SEN = 1;
"34
[e = _SEN -> -> 1 `i `b ]
[; ;MLX_read.h: 35: warten_auf_SSP_flag ();
"35
[e ( _warten_auf_SSP_flag ..  ]
[; ;MLX_read.h: 36: SSPBUF = (I2C_Add<<1) & 0b11111110;
"36
[e = _SSPBUF -> & << -> _I2C_Add `i -> 1 `i -> 254 `i `uc ]
[; ;MLX_read.h: 38: warten_auf_SSP_flag ();
"38
[e ( _warten_auf_SSP_flag ..  ]
[; ;MLX_read.h: 39: SSPBUF = Register_R_MLX;
"39
[e = _SSPBUF _Register_R_MLX ]
[; ;MLX_read.h: 40: warten_auf_SSP_flag ();
"40
[e ( _warten_auf_SSP_flag ..  ]
[; ;MLX_read.h: 41: RSEN =1;
"41
[e = _RSEN -> -> 1 `i `b ]
[; ;MLX_read.h: 42: warten_auf_SSP_flag ();
"42
[e ( _warten_auf_SSP_flag ..  ]
[; ;MLX_read.h: 43: SSPBUF = (I2C_Add << 1) | 0b00000001;
"43
[e = _SSPBUF -> | << -> _I2C_Add `i -> 1 `i -> 1 `i `uc ]
[; ;MLX_read.h: 44: warten_auf_SSP_flag ();
"44
[e ( _warten_auf_SSP_flag ..  ]
[; ;MLX_read.h: 45: RCEN = 1;
"45
[e = _RCEN -> -> 1 `i `b ]
[; ;MLX_read.h: 46: warten_auf_SSP_flag ();
"46
[e ( _warten_auf_SSP_flag ..  ]
[; ;MLX_read.h: 47: if (!MLX_Slave_toggel) {
"47
[e $ ! ! _MLX_Slave_toggel 260  ]
{
[; ;MLX_read.h: 48: Temperatur_LO_rechts = SSPBUF;
"48
[e = _Temperatur_LO_rechts _SSPBUF ]
"49
}
[; ;MLX_read.h: 49: } else {
[e $U 261  ]
[e :U 260 ]
{
[; ;MLX_read.h: 50: Temperatur_LO_links = SSPBUF;
"50
[e = _Temperatur_LO_links _SSPBUF ]
"51
}
[e :U 261 ]
[; ;MLX_read.h: 51: }
[; ;MLX_read.h: 52: ACKEN = 1;
"52
[e = _ACKEN -> -> 1 `i `b ]
[; ;MLX_read.h: 53: warten_auf_SSP_flag ();
"53
[e ( _warten_auf_SSP_flag ..  ]
[; ;MLX_read.h: 54: RCEN = 1;
"54
[e = _RCEN -> -> 1 `i `b ]
[; ;MLX_read.h: 55: warten_auf_SSP_flag ();
"55
[e ( _warten_auf_SSP_flag ..  ]
[; ;MLX_read.h: 56: if (!MLX_Slave_toggel) {
"56
[e $ ! ! _MLX_Slave_toggel 262  ]
{
[; ;MLX_read.h: 57: Temperatur_HI_rechts = SSPBUF;
"57
[e = _Temperatur_HI_rechts _SSPBUF ]
"58
}
[; ;MLX_read.h: 58: } else {
[e $U 263  ]
[e :U 262 ]
{
[; ;MLX_read.h: 59: Temperatur_HI_links = SSPBUF;
"59
[e = _Temperatur_HI_links _SSPBUF ]
"61
}
[e :U 263 ]
[; ;MLX_read.h: 61: }
[; ;MLX_read.h: 62: ACKEN = 1;
"62
[e = _ACKEN -> -> 1 `i `b ]
[; ;MLX_read.h: 63: warten_auf_SSP_flag ();
"63
[e ( _warten_auf_SSP_flag ..  ]
[; ;MLX_read.h: 64: RCEN = 1;
"64
[e = _RCEN -> -> 1 `i `b ]
[; ;MLX_read.h: 65: warten_auf_SSP_flag ();
"65
[e ( _warten_auf_SSP_flag ..  ]
[; ;MLX_read.h: 66: junk = SSPBUF;
"66
[e = _junk _SSPBUF ]
[; ;MLX_read.h: 69: ACKEN = 1;
"69
[e = _ACKEN -> -> 1 `i `b ]
[; ;MLX_read.h: 70: warten_auf_SSP_flag ();
"70
[e ( _warten_auf_SSP_flag ..  ]
[; ;MLX_read.h: 72: PEN = 1;
"72
[e = _PEN -> -> 1 `i `b ]
[; ;MLX_read.h: 73: warten_auf_SSP_flag ();
"73
[e ( _warten_auf_SSP_flag ..  ]
[; ;MLX_read.h: 74: }
"74
[e :UE 259 ]
}
"9 PGM_5.c
[p x FOSC=HS ]
"10
[p x WDTE=OFF ]
"11
[p x PWRTE=ON ]
"12
[p x MCLRE=ON ]
"13
[p x CP=OFF ]
"14
[p x BOREN=OFF ]
"15
[p x CLKOUTEN=OFF ]
"16
[p x IESO=OFF ]
"17
[p x FCMEN=OFF ]
"20
[p x WRT=OFF ]
"21
[p x VCAPEN=OFF ]
"22
[p x STVREN=OFF ]
"23
[p x BORV=LO ]
"24
[p x LPBOR=OFF ]
"25
[p x LVP=OFF ]
"69
[v _grad_90_1 `uc ~T0 @X0 1 e ]
[i _grad_90_1
-> -> 69 `i `uc
]
[; ;PGM_5.c: 69: char grad_90_1 = 69;
"70
[v _grad_90_2 `uc ~T0 @X0 1 e ]
[i _grad_90_2
-> -> 12 `i `uc
]
[; ;PGM_5.c: 70: char grad_90_2 = 12;
"71
[v _grad_90links_1 `uc ~T0 @X0 1 e ]
[i _grad_90links_1
-> -> 65 `i `uc
]
[; ;PGM_5.c: 71: char grad_90links_1 = 65;
"72
[v _grad_90links_2 `uc ~T0 @X0 1 e ]
[i _grad_90links_2
-> -> 12 `i `uc
]
[; ;PGM_5.c: 72: char grad_90links_2 = 12;
"73
[v _cm_30 `uc ~T0 @X0 1 e ]
[i _cm_30
-> -> 134 `i `uc
]
[; ;PGM_5.c: 73: char cm_30 = 134;
"74
[v _PIC_Slave `Cuc ~T0 @X0 1 e ]
[i _PIC_Slave
-> -> 20 `i `uc
]
[; ;PGM_5.c: 74: const char PIC_Slave = 0x14;
"75
[v _PIC_Letter_1 `Cuc ~T0 @X0 1 e ]
[i _PIC_Letter_1
-> -> 21 `i `uc
]
[; ;PGM_5.c: 75: const char PIC_Letter_1 = 0x15;
"76
[v _MLX_Slave `Cuc ~T0 @X0 1 e ]
[i _MLX_Slave
-> -> 90 `i `uc
]
[; ;PGM_5.c: 76: const char MLX_Slave = 0x5A;
"84
[v _A_D_Wert `uc ~T0 @X0 -> 28 `i e ]
[; ;PGM_5.c: 84: char A_D_Wert [28];
"85
[v _Channel `uc ~T0 @X0 -> 11 `i e ]
[i _Channel
:U ..
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 2 `i `uc
-> -> 3 `i `uc
-> -> 4 `i `uc
-> -> 5 `i `uc
-> -> 6 `i `uc
-> -> 7 `i `uc
-> -> 17 `i `uc
-> -> 18 `i `uc
-> -> 19 `i `uc
..
]
[; ;PGM_5.c: 85: char Channel [11] = {0, 1, 2, 3, 4, 5, 6, 7, 17, 18, 19};
"86
[v _Channel_Index `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 86: char Channel_Index;
"88
[v _I2C_Add `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 88: char I2C_Add;
"89
[v _I2C_Index_w `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 89: char I2C_Index_w;
"90
[v _I2C_Index_R `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 90: char I2C_Index_R;
"91
[v _I2C_Write `b ~T0 @X0 1 e ]
[; ;PGM_5.c: 91: bit I2C_Write;
"92
[v _I2C_Read `b ~T0 @X0 1 e ]
[; ;PGM_5.c: 92: bit I2C_Read;
"93
[v _I2C_Count `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 93: char I2C_Count;
"94
[v _Count `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 94: char Count;
"97
[v _Datum_S `uc ~T0 @X0 -> 20 `i e ]
[; ;PGM_5.c: 97: char Datum_S[20];
"98
[v _Datum1_an_Letter `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 98: char Datum1_an_Letter;
"99
[v _Datum2_an_Letter `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 99: char Datum2_an_Letter;
"100
[v _Flag_kalibrieren `b ~T0 @X0 1 e ]
[; ;PGM_5.c: 100: bit Flag_kalibrieren;
"101
[v _Register_S `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 101: char Register_S;
"102
[v _Datum_R `uc ~T0 @X0 -> 3 `i e ]
[; ;PGM_5.c: 102: char Datum_R[3];
"103
[v _Register_R_MLX `uc ~T0 @X0 1 e ]
[i _Register_R_MLX
-> -> 7 `i `uc
]
[; ;PGM_5.c: 103: char Register_R_MLX = 0x07;
"105
[v _Tick `i ~T0 @X0 1 e ]
[; ;PGM_5.c: 105: int Tick;
"106
[v _m `uc ~T0 @X0 1 e ]
[v _n `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 106: char m, n;
"107
[v _n_US `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 107: char n_US;
"108
[v _Zeit_US `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 108: char Zeit_US;
"109
[v _Abstand_US `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 109: char Abstand_US;
"110
[v _Flag_LED `b ~T0 @X0 1 e ]
[; ;PGM_5.c: 110: bit Flag_LED;
"112
[v _VAR_ausrichten_durchgaenge `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 112: char VAR_ausrichten_durchgaenge;
"113
[v _Flag_Zeit1000ms `b ~T0 @X0 1 e ]
[; ;PGM_5.c: 113: bit Flag_Zeit1000ms;
"114
[v _VAR_von_mitte_bis_wieder_wand `b ~T0 @X0 1 e ]
[; ;PGM_5.c: 114: bit VAR_von_mitte_bis_wieder_wand ;
"115
[v _VAR_von_sensor_VR_bis_mitte `b ~T0 @X0 1 e ]
[; ;PGM_5.c: 115: bit VAR_von_sensor_VR_bis_mitte ;
"116
[v _VAR_schwarz `b ~T0 @X0 1 e ]
[; ;PGM_5.c: 116: bit VAR_schwarz ;
"117
[v _VAR_Schwarz_ausrichten `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 117: char VAR_Schwarz_ausrichten;
"118
[v _VAR_bis_wand_zeit `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 118: char VAR_bis_wand_zeit ;
"119
[v _VAR_aus_zeit `i ~T0 @X0 1 e ]
[; ;PGM_5.c: 119: int VAR_aus_zeit;
"120
[v _VAR_bis_mitte_zeit `i ~T0 @X0 1 e ]
[; ;PGM_5.c: 120: int VAR_bis_mitte_zeit ;
"121
[v _VAR_zeit_opfer `i ~T0 @X0 1 e ]
[; ;PGM_5.c: 121: int VAR_zeit_opfer;
"122
[v _VAR_schwarz_rechts `b ~T0 @X0 1 e ]
[; ;PGM_5.c: 122: bit VAR_schwarz_rechts ;
"123
[v _VAR_opfer_aus `b ~T0 @X0 1 e ]
[; ;PGM_5.c: 123: bit VAR_opfer_aus;
"124
[v _VAR_rechts_zeit `i ~T0 @X0 1 e ]
[; ;PGM_5.c: 124: int VAR_rechts_zeit;
"125
[v _VAR_links_zeit `i ~T0 @X0 1 e ]
[; ;PGM_5.c: 125: int VAR_links_zeit ;
"126
[v _VAR_omni `uc ~T0 @X0 1 e ]
[i _VAR_omni
-> -> 60 `i `uc
]
[; ;PGM_5.c: 126: char VAR_omni = 60;
"127
[v _Var_lang_Ausrichten `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 127: char Var_lang_Ausrichten;
"128
[v _Ausrichten_Fahren `uc ~T0 @X0 1 e ]
[i _Ausrichten_Fahren
-> -> 5 `i `uc
]
[; ;PGM_5.c: 128: char Ausrichten_Fahren = 5;
"129
[v _Ausrichten_Stopp `uc ~T0 @X0 1 e ]
[i _Ausrichten_Stopp
-> -> 15 `i `uc
]
[; ;PGM_5.c: 129: char Ausrichten_Stopp = 15;
"130
[v _Zeit_power_Ausrichten `i ~T0 @X0 1 e ]
[i _Zeit_power_Ausrichten
-> 100 `i
]
[; ;PGM_5.c: 130: int Zeit_power_Ausrichten = 100;
"131
[v _Schwellwert_Ausrichten `uc ~T0 @X0 1 e ]
[i _Schwellwert_Ausrichten
-> -> 36 `i `uc
]
[; ;PGM_5.c: 131: char Schwellwert_Ausrichten = 36;
"132
[v _Schwellwert_Omni `uc ~T0 @X0 1 e ]
[i _Schwellwert_Omni
-> -> 61 `i `uc
]
[; ;PGM_5.c: 132: char Schwellwert_Omni = 61 ;
"133
[v _VAR_im_Kreis_faren `uc ~T0 @X0 1 e ]
[i _VAR_im_Kreis_faren
-> -> 0 `i `uc
]
[; ;PGM_5.c: 133: char VAR_im_Kreis_faren = 0 ;
"134
[v _VAR_links_ist_nichts `uc ~T0 @X0 1 e ]
[i _VAR_links_ist_nichts
-> -> 0 `i `uc
]
[; ;PGM_5.c: 134: char VAR_links_ist_nichts = 0 ;
"135
[v _H `uc ~T0 @X0 1 e ]
[i _H
-> -> 72 `ui `uc
]
[; ;PGM_5.c: 135: char H = 'H';
"136
[v _VAR_schwarz_ausrichten_merken `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 136: char VAR_schwarz_ausrichten_merken;
"138
[v _wand `uc ~T0 @X0 1 e ]
[i _wand
-> -> 38 `i `uc
]
[; ;PGM_5.c: 138: char wand = 38;
"139
[v _zuweit `uc ~T0 @X0 1 e ]
[i _zuweit
-> -> 85 `i `uc
]
[; ;PGM_5.c: 139: char zuweit = 85;
"140
[v _zunah `uc ~T0 @X0 1 e ]
[i _zunah
-> -> 75 `i `uc
]
[; ;PGM_5.c: 140: char zunah = 75;
"141
[v _zeit `i ~T0 @X0 1 e ]
[; ;PGM_5.c: 141: int zeit;
"142
[v _VAR_cm_f `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 142: char VAR_cm_f;
[; ;PGM_5.c: 145: char I2C_Add;
"146
[v _Register_R `uc ~T0 @X0 -> 2 `i e ]
[; ;PGM_5.c: 146: char Register_R[2];
"148
[v _Temperatur_LO_rechts `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 148: char Temperatur_LO_rechts;
"149
[v _Temperatur_LO_links `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 149: char Temperatur_LO_links;
"150
[v _Temperatur_HI_rechts `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 150: char Temperatur_HI_rechts;
"151
[v _Temperatur_HI_links `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 151: char Temperatur_HI_links;
"152
[v _Waerme_links `uc ~T0 @X0 1 e ]
[i _Waerme_links
-> -> 58 `i `uc
]
[; ;PGM_5.c: 152: char Waerme_links = 58;
"153
[v _Waerme_rechts `uc ~T0 @X0 1 e ]
[i _Waerme_rechts
-> -> 58 `i `uc
]
[; ;PGM_5.c: 153: char Waerme_rechts = 58;
"154
[v _schwarz `uc ~T0 @X0 1 e ]
[i _schwarz
-> -> 235 `i `uc
]
[; ;PGM_5.c: 154: char schwarz = 235;
"156
[v _Flag_Hindernis `b ~T0 @X0 1 e ]
[; ;PGM_5.c: 156: bit Flag_Hindernis;
"157
[v _Flag_T_links `b ~T0 @X0 1 e ]
[; ;PGM_5.c: 157: bit Flag_T_links;
"158
[v _Flag_T_rechts `b ~T0 @X0 1 e ]
[; ;PGM_5.c: 158: bit Flag_T_rechts;
"159
[v _nicht_rechts `b ~T0 @X0 1 e ]
[i _nicht_rechts
-> 0 `i
]
[; ;PGM_5.c: 159: bit nicht_rechts = 0 ;
"161
[v _Encoder `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 161: char Encoder;
"162
[v _encodersave `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 162: char encodersave;
"163
[v _Strecke `i ~T0 @X0 1 e ]
[; ;PGM_5.c: 163: int Strecke;
"164
[v _Flag_Strecke_erreicht `b ~T0 @X0 1 e ]
[i _Flag_Strecke_erreicht
-> 0 `i
]
[; ;PGM_5.c: 164: bit Flag_Strecke_erreicht = 0;
"165
[v _Flag_Strecke_messen `b ~T0 @X0 1 e ]
[i _Flag_Strecke_messen
-> 0 `i
]
[; ;PGM_5.c: 165: bit Flag_Strecke_messen = 0;
"167
[v _z `uc ~T0 @X0 1 e ]
[; ;PGM_5.c: 167: char z;
[; ;PGM_5.c: 171: void init(void);
[; ;PGM_5.c: 172: void Strecke_fahren(char, char);
[; ;PGM_5.c: 173: void Letter_kal(void);
[; ;PGM_5.c: 174: void Werte_auf_LCD_anzeigen (void);
[; ;PGM_5.c: 175: void interrupt Interrupt(void);
[; ;PGM_5.c: 178: void anderwandlang(void);
[; ;PGM_5.c: 179: void rechts90grad (void);
[; ;PGM_5.c: 180: void links90grad (void);
[; ;PGM_5.c: 181: void ausrichten (void) ;
[; ;PGM_5.c: 182: void vorne_ausrichten (void) ;
[; ;PGM_5.c: 183: void hinten_ausrichten (void) ;
[; ;PGM_5.c: 184: void links_ausrichten (void) ;
[; ;PGM_5.c: 185: void rechts_ausrichten (void) ;
[; ;PGM_5.c: 186: void von_sensor_VR_bis_mitte (void);
[; ;PGM_5.c: 187: void von_mitte_bis_wieder_wand (void);
[; ;PGM_5.c: 188: void von_mitte_bis_wieder_wand_in_schwarzeplatte(void);
[; ;PGM_5.c: 189: void schwarzeplatte (void);
[; ;PGM_5.c: 190: void cm_fahren (void) ;
[; ;PGM_5.c: 191: void opfer (void) ;
[; ;PGM_5.c: 192: void hindernis (void);
[; ;PGM_5.c: 193: void kit_abwerfen (void);
[; ;PGM_5.c: 194: void Power_Ausrichten(void);
[; ;PGM_5.c: 195: void im_Kreis_faren (void);
[; ;PGM_5.c: 196: void hintenausrichtenopfer (void);
[; ;PGM_5.c: 197: void omnifakelinks (void);
[; ;PGM_5.c: 198: void omnifakerechts (void);
[; ;PGM_5.c: 201: void interrupt Interrupt(void);
[v $root$_main `(v ~T0 @X0 0 e ]
"207
[v _main `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 207: void main(void) {
[e :U _main ]
[f ]
[; ;PGM_5.c: 208: init();
"208
[e ( _init ..  ]
[; ;PGM_5.c: 212: RB1=0;
"212
[e = _RB1 -> -> 0 `i `b ]
[; ;PGM_5.c: 213: LATD = (LATD & 0b11110000);
"213
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 214: CCPR1L = 255;
"214
[e = _CCPR1L -> -> 255 `i `uc ]
[; ;PGM_5.c: 215: CCPR2L = 155;
"215
[e = _CCPR2L -> -> 155 `i `uc ]
[; ;PGM_5.c: 223: TMR1IE = 0;
"223
[e = _TMR1IE -> -> 0 `i `b ]
[; ;PGM_5.c: 224: IOCIE = 1;
"224
[e = _IOCIE -> -> 1 `i `b ]
[; ;PGM_5.c: 225: TMR0IE = 1;
"225
[e = _TMR0IE -> -> 1 `i `b ]
[; ;PGM_5.c: 226: SSPIE = 1;
"226
[e = _SSPIE -> -> 1 `i `b ]
[; ;PGM_5.c: 227: INTE = 0;
"227
[e = _INTE -> -> 0 `i `b ]
[; ;PGM_5.c: 228: ADIE = 0;
"228
[e = _ADIE -> -> 0 `i `b ]
[; ;PGM_5.c: 230: I2C_Write = 0;
"230
[e = _I2C_Write -> -> 0 `i `b ]
[; ;PGM_5.c: 231: I2C_Read = 0;
"231
[e = _I2C_Read -> -> 0 `i `b ]
[; ;PGM_5.c: 232: Flag_LED = 0;
"232
[e = _Flag_LED -> -> 0 `i `b ]
[; ;PGM_5.c: 234: Register_R[0] = 0x07;
"234
[e = *U + &U _Register_R * -> -> -> 0 `i `ui `ux -> -> # *U &U _Register_R `ui `ux -> -> 7 `i `uc ]
[; ;PGM_5.c: 235: Register_R[1] = 127;
"235
[e = *U + &U _Register_R * -> -> -> 1 `i `ui `ux -> -> # *U &U _Register_R `ui `ux -> -> 127 `i `uc ]
[; ;PGM_5.c: 237: _delay((unsigned long)((600)*(20000000/4000.0)));
"237
[e ( __delay (1 -> * -> -> 600 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 238: GIE = 1;
"238
[e = _GIE -> -> 1 `i `b ]
[; ;PGM_5.c: 239: _delay((unsigned long)((400)*(20000000/4000.0)));
"239
[e ( __delay (1 -> * -> -> 400 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 241: LATA4 = 1;
"241
[e = _LATA4 -> -> 1 `i `b ]
[; ;PGM_5.c: 243: if(RD4){
"243
[e $ ! _RD4 265  ]
{
[; ;PGM_5.c: 244: _delay((unsigned long)((2500)*(20000000/4000.0)));
"244
[e ( __delay (1 -> * -> -> 2500 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 245: while(!RD4){
"245
[e $U 266  ]
[e :U 267 ]
{
[; ;PGM_5.c: 246: Werte_auf_LCD_anzeigen();
"246
[e ( _Werte_auf_LCD_anzeigen ..  ]
[; ;PGM_5.c: 247: kit_abwerfen();
"247
[e ( _kit_abwerfen ..  ]
[; ;PGM_5.c: 248: _delay((unsigned long)((1000)*(20000000/4000.0)));
"248
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"249
}
[e :U 266 ]
"245
[e $ ! _RD4 267  ]
[e :U 268 ]
"250
}
[e :U 265 ]
[; ;PGM_5.c: 249: }
[; ;PGM_5.c: 250: }
[; ;PGM_5.c: 264: while (1) {
"264
[e :U 270 ]
{
[; ;PGM_5.c: 265: Flag_LED = 0;
"265
[e = _Flag_LED -> -> 0 `i `b ]
[; ;PGM_5.c: 266: schwarzeplatte();
"266
[e ( _schwarzeplatte ..  ]
[; ;PGM_5.c: 267: anderwandlang() ;
"267
[e ( _anderwandlang ..  ]
[; ;PGM_5.c: 268: Werte_auf_LCD_anzeigen();
"268
[e ( _Werte_auf_LCD_anzeigen ..  ]
[; ;PGM_5.c: 269: opfer();
"269
[e ( _opfer ..  ]
[; ;PGM_5.c: 270: hindernis();
"270
[e ( _hindernis ..  ]
[; ;PGM_5.c: 272: if (A_D_Wert [2] < wand ) {
"272
[e $ ! < -> *U + &U _A_D_Wert * -> -> -> 2 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i 272  ]
{
[; ;PGM_5.c: 273: Strecke_fahren(3,LATD = (LATD & 0b11110000)|0b00001010);
"273
[e ( _Strecke_fahren (2 , -> -> 3 `i `uc = _LATD -> | & -> _LATD `i -> 240 `i -> 10 `i `uc ]
[; ;PGM_5.c: 274: while (!Flag_Strecke_erreicht){
"274
[e $U 273  ]
[e :U 274 ]
{
"275
}
[e :U 273 ]
"274
[e $ ! _Flag_Strecke_erreicht 274  ]
[e :U 275 ]
[; ;PGM_5.c: 275: }
[; ;PGM_5.c: 276: LATD = (LATD & 0b11110000);
"276
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 277: _delay((unsigned long)((50)*(20000000/4000.0)));
"277
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 278: if (A_D_Wert [2] < wand ) {
"278
[e $ ! < -> *U + &U _A_D_Wert * -> -> -> 2 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i 276  ]
{
[; ;PGM_5.c: 279: VAR_im_Kreis_faren ++ ;
"279
[e ++ _VAR_im_Kreis_faren -> -> 1 `i `uc ]
[; ;PGM_5.c: 280: von_sensor_VR_bis_mitte();
"280
[e ( _von_sensor_VR_bis_mitte ..  ]
[; ;PGM_5.c: 281: LATD = (LATD & 0b11110000);
"281
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 282: ausrichten();
"282
[e ( _ausrichten ..  ]
[; ;PGM_5.c: 283: if (nicht_rechts == 0){
"283
[e $ ! == -> _nicht_rechts `i -> 0 `i 277  ]
{
[; ;PGM_5.c: 284: rechts90grad();
"284
[e ( _rechts90grad ..  ]
[; ;PGM_5.c: 285: while (!Flag_Strecke_erreicht){
"285
[e $U 278  ]
[e :U 279 ]
{
"287
}
[e :U 278 ]
"285
[e $ ! _Flag_Strecke_erreicht 279  ]
[e :U 280 ]
[; ;PGM_5.c: 287: }
[; ;PGM_5.c: 288: LATD = (LATD & 0b11110000);
"288
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 289: if ((A_D_Wert [0] < wand)&&(A_D_Wert [3] < wand)){
"289
[e $ ! && < -> *U + &U _A_D_Wert * -> -> -> 0 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i < -> *U + &U _A_D_Wert * -> -> -> 3 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i 281  ]
{
[; ;PGM_5.c: 290: ausrichten();
"290
[e ( _ausrichten ..  ]
[; ;PGM_5.c: 291: im_Kreis_faren();
"291
[e ( _im_Kreis_faren ..  ]
[; ;PGM_5.c: 292: von_mitte_bis_wieder_wand();
"292
[e ( _von_mitte_bis_wieder_wand ..  ]
"293
}
[; ;PGM_5.c: 293: }
[e $U 282  ]
"294
[e :U 281 ]
[; ;PGM_5.c: 294: else{
{
[; ;PGM_5.c: 295: links90grad();
"295
[e ( _links90grad ..  ]
[; ;PGM_5.c: 296: ausrichten();
"296
[e ( _ausrichten ..  ]
"297
}
[e :U 282 ]
"298
}
[e :U 277 ]
[; ;PGM_5.c: 297: }
[; ;PGM_5.c: 298: }
[; ;PGM_5.c: 299: nicht_rechts = 0 ;
"299
[e = _nicht_rechts -> -> 0 `i `b ]
"300
}
[e :U 276 ]
"301
}
[; ;PGM_5.c: 300: }
[; ;PGM_5.c: 301: }
[e $U 283  ]
"302
[e :U 272 ]
[; ;PGM_5.c: 302: else{
{
[; ;PGM_5.c: 303: if((A_D_Wert [0] > wand)&&(A_D_Wert [3] > wand)){
"303
[e $ ! && > -> *U + &U _A_D_Wert * -> -> -> 0 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i > -> *U + &U _A_D_Wert * -> -> -> 3 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i 284  ]
{
[; ;PGM_5.c: 304: LATD = (LATD & 0b11110000);
"304
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 305: _delay((unsigned long)((50)*(20000000/4000.0)));
"305
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 306: if((A_D_Wert [0] > wand)&&(A_D_Wert [3] > wand)){
"306
[e $ ! && > -> *U + &U _A_D_Wert * -> -> -> 0 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i > -> *U + &U _A_D_Wert * -> -> -> 3 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i 285  ]
{
[; ;PGM_5.c: 307: if (A_D_Wert [1] > wand){
"307
[e $ ! > -> *U + &U _A_D_Wert * -> -> -> 1 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i 286  ]
{
[; ;PGM_5.c: 308: ausrichten();
"308
[e ( _ausrichten ..  ]
[; ;PGM_5.c: 309: LATD = (LATD & 0b11110000);
"309
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 310: links90grad();
"310
[e ( _links90grad ..  ]
[; ;PGM_5.c: 311: while (!Flag_Strecke_erreicht);
"311
[e $U 287  ]
[e :U 288 ]
[e :U 287 ]
[e $ ! _Flag_Strecke_erreicht 288  ]
[e :U 289 ]
[; ;PGM_5.c: 312: LATD = (LATD & 0b11110000);
"312
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 313: links90grad();
"313
[e ( _links90grad ..  ]
[; ;PGM_5.c: 314: while (!Flag_Strecke_erreicht);
"314
[e $U 290  ]
[e :U 291 ]
[e :U 290 ]
[e $ ! _Flag_Strecke_erreicht 291  ]
[e :U 292 ]
[; ;PGM_5.c: 315: LATD = (LATD & 0b11110000);
"315
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 316: ausrichten();
"316
[e ( _ausrichten ..  ]
"317
}
[; ;PGM_5.c: 317: }
[e $U 293  ]
"318
[e :U 286 ]
[; ;PGM_5.c: 318: else{
{
[; ;PGM_5.c: 319: VAR_im_Kreis_faren = 0 ;
"319
[e = _VAR_im_Kreis_faren -> -> 0 `i `uc ]
[; ;PGM_5.c: 320: ausrichten();
"320
[e ( _ausrichten ..  ]
[; ;PGM_5.c: 321: links90grad();
"321
[e ( _links90grad ..  ]
[; ;PGM_5.c: 322: while (!Flag_Strecke_erreicht){
"322
[e $U 294  ]
[e :U 295 ]
{
"324
}
[e :U 294 ]
"322
[e $ ! _Flag_Strecke_erreicht 295  ]
[e :U 296 ]
[; ;PGM_5.c: 324: }
[; ;PGM_5.c: 325: LATD = (LATD & 0b11110000);
"325
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 326: ausrichten();
"326
[e ( _ausrichten ..  ]
"327
}
[e :U 293 ]
"328
}
[e :U 285 ]
"330
}
[e :U 284 ]
"331
}
[e :U 283 ]
"332
}
[e :U 269 ]
"264
[e $U 270  ]
[e :U 271 ]
[; ;PGM_5.c: 327: }
[; ;PGM_5.c: 328: }
[; ;PGM_5.c: 330: }
[; ;PGM_5.c: 331: }
[; ;PGM_5.c: 332: }
[; ;PGM_5.c: 333: }
"333
[e :UE 264 ]
}
"339
[v _von_sensor_VR_bis_mitte `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 339: void von_sensor_VR_bis_mitte(void) {
[e :U _von_sensor_VR_bis_mitte ]
[f ]
[; ;PGM_5.c: 340: LATD = (LATD & 0b11110000);
"340
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 341: Strecke_fahren(77, LATD = (LATD & 0b11110000)|0b00001010);
"341
[e ( _Strecke_fahren (2 , -> -> 77 `i `uc = _LATD -> | & -> _LATD `i -> 240 `i -> 10 `i `uc ]
[; ;PGM_5.c: 342: while (!Flag_Strecke_erreicht){
"342
[e $U 298  ]
[e :U 299 ]
{
[; ;PGM_5.c: 343: schwarzeplatte();
"343
[e ( _schwarzeplatte ..  ]
[; ;PGM_5.c: 344: opfer();
"344
[e ( _opfer ..  ]
[; ;PGM_5.c: 345: hindernis();
"345
[e ( _hindernis ..  ]
"346
}
[e :U 298 ]
"342
[e $ ! _Flag_Strecke_erreicht 299  ]
[e :U 300 ]
[; ;PGM_5.c: 346: }
[; ;PGM_5.c: 347: LATD = (LATD & 0b11110000);
"347
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 348: }
"348
[e :UE 297 ]
}
"349
[v _von_mitte_bis_wieder_wand `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 349: void von_mitte_bis_wieder_wand (void){
[e :U _von_mitte_bis_wieder_wand ]
[f ]
[; ;PGM_5.c: 350: VAR_von_mitte_bis_wieder_wand = 1;
"350
[e = _VAR_von_mitte_bis_wieder_wand -> -> 1 `i `b ]
[; ;PGM_5.c: 351: Encoder = 0 ;
"351
[e = _Encoder -> -> 0 `i `uc ]
[; ;PGM_5.c: 352: while ( VAR_von_mitte_bis_wieder_wand == 1){
"352
[e $U 302  ]
[e :U 303 ]
{
[; ;PGM_5.c: 353: LATD = (LATD & 0b11110000)|0b00001010;
"353
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 10 `i `uc ]
[; ;PGM_5.c: 354: if (A_D_Wert [2] > wand){
"354
[e $ ! > -> *U + &U _A_D_Wert * -> -> -> 2 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i 305  ]
{
[; ;PGM_5.c: 355: LATD = (LATD & 0b11110000);
"355
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 356: if (A_D_Wert [2] > wand){
"356
[e $ ! > -> *U + &U _A_D_Wert * -> -> -> 2 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i 306  ]
{
[; ;PGM_5.c: 357: VAR_von_mitte_bis_wieder_wand = 0 ;
"357
[e = _VAR_von_mitte_bis_wieder_wand -> -> 0 `i `b ]
[; ;PGM_5.c: 358: LATD = (LATD & 0b11110000) ;
"358
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
"359
}
[e :U 306 ]
"360
}
[e :U 305 ]
[; ;PGM_5.c: 359: }
[; ;PGM_5.c: 360: }
[; ;PGM_5.c: 361: if (A_D_Wert [3] > 80){
"361
[e $ ! > -> *U + &U _A_D_Wert * -> -> -> 3 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 80 `i 307  ]
{
[; ;PGM_5.c: 362: LATD = (LATD & 0b11110000);
"362
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 363: _delay((unsigned long)((50)*(20000000/4000.0)));
"363
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 364: if (A_D_Wert [3] > 80){
"364
[e $ ! > -> *U + &U _A_D_Wert * -> -> -> 3 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 80 `i 308  ]
{
[; ;PGM_5.c: 365: VAR_von_mitte_bis_wieder_wand = 0 ;
"365
[e = _VAR_von_mitte_bis_wieder_wand -> -> 0 `i `b ]
[; ;PGM_5.c: 366: LATD = (LATD & 0b11110000) ;
"366
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 367: _delay((unsigned long)((500)*(20000000/4000.0)));
"367
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"368
}
[e :U 308 ]
"369
}
[e :U 307 ]
[; ;PGM_5.c: 368: }
[; ;PGM_5.c: 369: }
[; ;PGM_5.c: 371: if (Encoder > 40 ){
"371
[e $ ! > -> _Encoder `i -> 40 `i 309  ]
{
[; ;PGM_5.c: 372: VAR_von_mitte_bis_wieder_wand = 0 ;
"372
[e = _VAR_von_mitte_bis_wieder_wand -> -> 0 `i `b ]
[; ;PGM_5.c: 373: VAR_bis_wand_zeit = 0;
"373
[e = _VAR_bis_wand_zeit -> -> 0 `i `uc ]
[; ;PGM_5.c: 374: LATD = (LATD & 0b11110000) ;
"374
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
"375
}
[e :U 309 ]
[; ;PGM_5.c: 375: }
[; ;PGM_5.c: 377: schwarzeplatte();
"377
[e ( _schwarzeplatte ..  ]
[; ;PGM_5.c: 378: opfer();
"378
[e ( _opfer ..  ]
[; ;PGM_5.c: 379: hindernis();
"379
[e ( _hindernis ..  ]
"380
}
[e :U 302 ]
"352
[e $ == -> _VAR_von_mitte_bis_wieder_wand `i -> 1 `i 303  ]
[e :U 304 ]
[; ;PGM_5.c: 380: }
[; ;PGM_5.c: 381: LATD = (LATD & 0b11110000) ;
"381
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 382: }
"382
[e :UE 301 ]
}
"383
[v _von_mitte_bis_wieder_wand_in_schwarzeplatte `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 383: void von_mitte_bis_wieder_wand_in_schwarzeplatte (void){
[e :U _von_mitte_bis_wieder_wand_in_schwarzeplatte ]
[f ]
[; ;PGM_5.c: 384: VAR_von_mitte_bis_wieder_wand = 1;
"384
[e = _VAR_von_mitte_bis_wieder_wand -> -> 1 `i `b ]
[; ;PGM_5.c: 385: Encoder = 0 ;
"385
[e = _Encoder -> -> 0 `i `uc ]
[; ;PGM_5.c: 386: while ( VAR_von_mitte_bis_wieder_wand == 1){
"386
[e $U 311  ]
[e :U 312 ]
{
[; ;PGM_5.c: 387: if (A_D_Wert [2] > wand){
"387
[e $ ! > -> *U + &U _A_D_Wert * -> -> -> 2 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i 314  ]
{
[; ;PGM_5.c: 388: Strecke_fahren(2,LATD = (LATD & 0b11110000)|0b00001010);
"388
[e ( _Strecke_fahren (2 , -> -> 2 `i `uc = _LATD -> | & -> _LATD `i -> 240 `i -> 10 `i `uc ]
[; ;PGM_5.c: 389: while(!Flag_Strecke_erreicht);
"389
[e $U 315  ]
[e :U 316 ]
[e :U 315 ]
[e $ ! _Flag_Strecke_erreicht 316  ]
[e :U 317 ]
[; ;PGM_5.c: 390: LATD = (LATD & 0b11110000);
"390
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 391: _delay((unsigned long)((50)*(20000000/4000.0)));
"391
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 392: if (A_D_Wert [2] > wand){
"392
[e $ ! > -> *U + &U _A_D_Wert * -> -> -> 2 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i 318  ]
{
[; ;PGM_5.c: 393: VAR_von_mitte_bis_wieder_wand = 0 ;
"393
[e = _VAR_von_mitte_bis_wieder_wand -> -> 0 `i `b ]
[; ;PGM_5.c: 394: LATD = (LATD & 0b11110000) ;
"394
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
"395
}
[e :U 318 ]
"396
}
[e :U 314 ]
[; ;PGM_5.c: 395: }
[; ;PGM_5.c: 396: }
[; ;PGM_5.c: 397: if (A_D_Wert [3] > wand){
"397
[e $ ! > -> *U + &U _A_D_Wert * -> -> -> 3 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i 319  ]
{
[; ;PGM_5.c: 398: _delay((unsigned long)((20)*(20000000/4000.0)));
"398
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 399: if (A_D_Wert [3] > wand){
"399
[e $ ! > -> *U + &U _A_D_Wert * -> -> -> 3 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i 320  ]
{
[; ;PGM_5.c: 400: VAR_von_mitte_bis_wieder_wand = 0 ;
"400
[e = _VAR_von_mitte_bis_wieder_wand -> -> 0 `i `b ]
[; ;PGM_5.c: 401: LATD = (LATD & 0b11110000) ;
"401
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
"402
}
[e :U 320 ]
"403
}
[e :U 319 ]
[; ;PGM_5.c: 402: }
[; ;PGM_5.c: 403: }
[; ;PGM_5.c: 405: if (Encoder > 40 ){
"405
[e $ ! > -> _Encoder `i -> 40 `i 321  ]
{
[; ;PGM_5.c: 406: VAR_von_mitte_bis_wieder_wand = 0 ;
"406
[e = _VAR_von_mitte_bis_wieder_wand -> -> 0 `i `b ]
[; ;PGM_5.c: 407: VAR_bis_wand_zeit = 0;
"407
[e = _VAR_bis_wand_zeit -> -> 0 `i `uc ]
[; ;PGM_5.c: 408: LATD = (LATD & 0b11110000) ;
"408
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
"409
}
[e :U 321 ]
[; ;PGM_5.c: 409: }
[; ;PGM_5.c: 411: opfer();
"411
[e ( _opfer ..  ]
[; ;PGM_5.c: 412: hindernis();
"412
[e ( _hindernis ..  ]
[; ;PGM_5.c: 413: LATD = (LATD & 0b11110000)|0b00001010 ;
"413
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 10 `i `uc ]
"416
}
[e :U 311 ]
"386
[e $ == -> _VAR_von_mitte_bis_wieder_wand `i -> 1 `i 312  ]
[e :U 313 ]
[; ;PGM_5.c: 416: }
[; ;PGM_5.c: 417: LATD = (LATD & 0b11110000) ;
"417
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 418: }
"418
[e :UE 310 ]
}
"420
[v _rechts90grad `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 420: void rechts90grad (void){
[e :U _rechts90grad ]
[f ]
[; ;PGM_5.c: 421: Strecke_fahren(grad_90_1, LATD = (LATD & 0b11110000)|0b00000110);
"421
[e ( _Strecke_fahren (2 , _grad_90_1 = _LATD -> | & -> _LATD `i -> 240 `i -> 6 `i `uc ]
[; ;PGM_5.c: 422: while (!Flag_Strecke_erreicht){
"422
[e $U 323  ]
[e :U 324 ]
{
"424
}
[e :U 323 ]
"422
[e $ ! _Flag_Strecke_erreicht 324  ]
[e :U 325 ]
[; ;PGM_5.c: 424: }
[; ;PGM_5.c: 425: LATD = (LATD & 0b11110000);
"425
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 426: Strecke_fahren(grad_90_2, LATD = (LATD & 0b11110000)|0b00000110);
"426
[e ( _Strecke_fahren (2 , _grad_90_2 = _LATD -> | & -> _LATD `i -> 240 `i -> 6 `i `uc ]
[; ;PGM_5.c: 427: while (!Flag_Strecke_erreicht){
"427
[e $U 326  ]
[e :U 327 ]
{
[; ;PGM_5.c: 428: LATD = (LATD & 0b11110000);
"428
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 429: _delay((unsigned long)((10)*(20000000/4000.0)));
"429
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 430: LATD = (LATD & 0b11110000)|0b00000110;
"430
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 6 `i `uc ]
[; ;PGM_5.c: 431: _delay((unsigned long)((10)*(20000000/4000.0)));
"431
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"433
}
[e :U 326 ]
"427
[e $ ! _Flag_Strecke_erreicht 327  ]
[e :U 328 ]
[; ;PGM_5.c: 433: }
[; ;PGM_5.c: 434: }
"434
[e :UE 322 ]
}
"435
[v _links90grad `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 435: void links90grad (void){
[e :U _links90grad ]
[f ]
[; ;PGM_5.c: 436: Strecke_fahren(grad_90links_1, LATD = (LATD & 0b11110000)|0b00001001);
"436
[e ( _Strecke_fahren (2 , _grad_90links_1 = _LATD -> | & -> _LATD `i -> 240 `i -> 9 `i `uc ]
[; ;PGM_5.c: 437: while (!Flag_Strecke_erreicht){
"437
[e $U 330  ]
[e :U 331 ]
{
"439
}
[e :U 330 ]
"437
[e $ ! _Flag_Strecke_erreicht 331  ]
[e :U 332 ]
[; ;PGM_5.c: 439: }
[; ;PGM_5.c: 440: LATD = (LATD & 0b11110000);
"440
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 441: Strecke_fahren(grad_90links_2, LATD = (LATD & 0b11110000)|0b00001001);
"441
[e ( _Strecke_fahren (2 , _grad_90links_2 = _LATD -> | & -> _LATD `i -> 240 `i -> 9 `i `uc ]
[; ;PGM_5.c: 442: while (!Flag_Strecke_erreicht){
"442
[e $U 333  ]
[e :U 334 ]
{
[; ;PGM_5.c: 443: LATD = (LATD & 0b11110000);
"443
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 444: _delay((unsigned long)((10)*(20000000/4000.0)));
"444
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 445: LATD = (LATD & 0b11110000)|0b00001001;
"445
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 9 `i `uc ]
[; ;PGM_5.c: 446: _delay((unsigned long)((10)*(20000000/4000.0)));
"446
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"448
}
[e :U 333 ]
"442
[e $ ! _Flag_Strecke_erreicht 334  ]
[e :U 335 ]
[; ;PGM_5.c: 448: }
[; ;PGM_5.c: 449: }
"449
[e :UE 329 ]
}
"450
[v _omnifakelinks `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 450: void omnifakelinks(void){
[e :U _omnifakelinks ]
[f ]
[; ;PGM_5.c: 451: if((A_D_Wert [1] > Schwellwert_Omni)&&(A_D_Wert [6] > Schwellwert_Omni)){
"451
[e $ ! && > -> *U + &U _A_D_Wert * -> -> -> 1 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _Schwellwert_Omni `i > -> *U + &U _A_D_Wert * -> -> -> 6 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _Schwellwert_Omni `i 337  ]
{
[; ;PGM_5.c: 452: VAR_omni = 0;
"452
[e = _VAR_omni -> -> 0 `i `uc ]
[; ;PGM_5.c: 453: while((((A_D_Wert [1] + A_D_Wert [6] )/2)<=78)&&(!VAR_omni < 6)){
"453
[e $U 338  ]
[e :U 339 ]
{
[; ;PGM_5.c: 454: LATD = (LATD & 0b11110000)|0b00001000;
"454
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 8 `i `uc ]
[; ;PGM_5.c: 455: _delay((unsigned long)((50)*(20000000/4000.0)));
"455
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 456: LATD = (LATD & 0b11110000);
"456
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 457: LATD = (LATD & 0b11110000)|0b00000010;
"457
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 2 `i `uc ]
[; ;PGM_5.c: 458: _delay((unsigned long)((55)*(20000000/4000.0)));
"458
[e ( __delay (1 -> * -> -> 55 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 459: LATD = (LATD & 0b11110000);
"459
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 460: LATD = (LATD & 0b11110000)|0b00000100;
"460
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 4 `i `uc ]
[; ;PGM_5.c: 461: _delay((unsigned long)((50)*(20000000/4000.0)));
"461
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 462: LATD = (LATD & 0b11110000);
"462
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 463: LATD = (LATD & 0b11110000)|0b00000001;
"463
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 1 `i `uc ]
[; ;PGM_5.c: 464: _delay((unsigned long)((50)*(20000000/4000.0)));
"464
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 465: LATD = (LATD & 0b11110000);
"465
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 466: VAR_omni++;
"466
[e ++ _VAR_omni -> -> 1 `i `uc ]
"467
}
[e :U 338 ]
"453
[e $ && <= / + -> *U + &U _A_D_Wert * -> -> -> 1 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> *U + &U _A_D_Wert * -> -> -> 6 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 2 `i -> 78 `i < -> ! != -> _VAR_omni `i -> -> -> 0 `i `uc `i `i -> 6 `i 339  ]
[e :U 340 ]
[; ;PGM_5.c: 467: }
[; ;PGM_5.c: 468: LATD = (LATD & 0b11110000);
"468
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 469: VAR_omni = 0;
"469
[e = _VAR_omni -> -> 0 `i `uc ]
[; ;PGM_5.c: 470: while((((A_D_Wert [1] + A_D_Wert [6] )/2)>=80)&&(!VAR_omni < 6)){
"470
[e $U 341  ]
[e :U 342 ]
{
[; ;PGM_5.c: 471: LATD = (LATD & 0b11110000)|0b00000010;
"471
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 2 `i `uc ]
[; ;PGM_5.c: 472: _delay((unsigned long)((52)*(20000000/4000.0)));
"472
[e ( __delay (1 -> * -> -> 52 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 473: LATD = (LATD & 0b11110000)|0b00001000;
"473
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 8 `i `uc ]
[; ;PGM_5.c: 474: _delay((unsigned long)((38)*(20000000/4000.0)));
"474
[e ( __delay (1 -> * -> -> 38 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 475: LATD = (LATD & 0b11110000)|0b00000001;
"475
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 1 `i `uc ]
[; ;PGM_5.c: 476: _delay((unsigned long)((42)*(20000000/4000.0)));
"476
[e ( __delay (1 -> * -> -> 42 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 477: LATD = (LATD & 0b11110000)|0b00000100;
"477
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 4 `i `uc ]
[; ;PGM_5.c: 478: _delay((unsigned long)((42)*(20000000/4000.0)));
"478
[e ( __delay (1 -> * -> -> 42 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 479: VAR_omni++;
"479
[e ++ _VAR_omni -> -> 1 `i `uc ]
"480
}
[e :U 341 ]
"470
[e $ && >= / + -> *U + &U _A_D_Wert * -> -> -> 1 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> *U + &U _A_D_Wert * -> -> -> 6 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 2 `i -> 80 `i < -> ! != -> _VAR_omni `i -> -> -> 0 `i `uc `i `i -> 6 `i 342  ]
[e :U 343 ]
[; ;PGM_5.c: 480: }
[; ;PGM_5.c: 481: VAR_omni = 0;
"481
[e = _VAR_omni -> -> 0 `i `uc ]
[; ;PGM_5.c: 482: LATD = (LATD & 0b11110000);
"482
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
"483
}
[e :U 337 ]
[; ;PGM_5.c: 483: }
[; ;PGM_5.c: 486: }
"486
[e :UE 336 ]
}
"487
[v _omnifakerechts `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 487: void omnifakerechts (void){
[e :U _omnifakerechts ]
[f ]
[; ;PGM_5.c: 488: if((A_D_Wert [2] > Schwellwert_Omni)&&(A_D_Wert [5] > Schwellwert_Omni)){
"488
[e $ ! && > -> *U + &U _A_D_Wert * -> -> -> 2 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _Schwellwert_Omni `i > -> *U + &U _A_D_Wert * -> -> -> 5 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _Schwellwert_Omni `i 345  ]
{
[; ;PGM_5.c: 489: VAR_omni = 0;
"489
[e = _VAR_omni -> -> 0 `i `uc ]
[; ;PGM_5.c: 490: while((((A_D_Wert [2] + A_D_Wert [5] )/2)<=78)&&(!VAR_omni < 6)){
"490
[e $U 346  ]
[e :U 347 ]
{
[; ;PGM_5.c: 491: LATD = (LATD & 0b11110000)|0b00000010;
"491
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 2 `i `uc ]
[; ;PGM_5.c: 492: _delay((unsigned long)((52)*(20000000/4000.0)));
"492
[e ( __delay (1 -> * -> -> 52 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 493: LATD = (LATD & 0b11110000)|0b00001000;
"493
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 8 `i `uc ]
[; ;PGM_5.c: 494: _delay((unsigned long)((38)*(20000000/4000.0)));
"494
[e ( __delay (1 -> * -> -> 38 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 495: LATD = (LATD & 0b11110000)|0b00000001;
"495
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 1 `i `uc ]
[; ;PGM_5.c: 496: _delay((unsigned long)((42)*(20000000/4000.0)));
"496
[e ( __delay (1 -> * -> -> 42 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 497: LATD = (LATD & 0b11110000)|0b00000100;
"497
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 4 `i `uc ]
[; ;PGM_5.c: 498: _delay((unsigned long)((42)*(20000000/4000.0)));
"498
[e ( __delay (1 -> * -> -> 42 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 499: VAR_omni++;
"499
[e ++ _VAR_omni -> -> 1 `i `uc ]
"500
}
[e :U 346 ]
"490
[e $ && <= / + -> *U + &U _A_D_Wert * -> -> -> 2 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> *U + &U _A_D_Wert * -> -> -> 5 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 2 `i -> 78 `i < -> ! != -> _VAR_omni `i -> -> -> 0 `i `uc `i `i -> 6 `i 347  ]
[e :U 348 ]
[; ;PGM_5.c: 500: }
[; ;PGM_5.c: 501: LATD = (LATD & 0b11110000);
"501
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 502: VAR_omni = 0;
"502
[e = _VAR_omni -> -> 0 `i `uc ]
[; ;PGM_5.c: 503: while((((A_D_Wert [2] + A_D_Wert [5] )/2)>=80)&&(!VAR_omni < 6)){
"503
[e $U 349  ]
[e :U 350 ]
{
[; ;PGM_5.c: 504: LATD = (LATD & 0b11110000)|0b00001000;
"504
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 8 `i `uc ]
[; ;PGM_5.c: 505: _delay((unsigned long)((50)*(20000000/4000.0)));
"505
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 506: LATD = (LATD & 0b11110000)|0b00000010;
"506
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 2 `i `uc ]
[; ;PGM_5.c: 507: _delay((unsigned long)((55)*(20000000/4000.0)));
"507
[e ( __delay (1 -> * -> -> 55 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 508: LATD = (LATD & 0b11110000)|0b00000100;
"508
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 4 `i `uc ]
[; ;PGM_5.c: 509: _delay((unsigned long)((45)*(20000000/4000.0)));
"509
[e ( __delay (1 -> * -> -> 45 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 510: LATD = (LATD & 0b11110000)|0b00000001;
"510
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 1 `i `uc ]
[; ;PGM_5.c: 511: _delay((unsigned long)((45)*(20000000/4000.0)));
"511
[e ( __delay (1 -> * -> -> 45 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 512: VAR_omni++;
"512
[e ++ _VAR_omni -> -> 1 `i `uc ]
"513
}
[e :U 349 ]
"503
[e $ && >= / + -> *U + &U _A_D_Wert * -> -> -> 2 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> *U + &U _A_D_Wert * -> -> -> 5 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 2 `i -> 80 `i < -> ! != -> _VAR_omni `i -> -> -> 0 `i `uc `i `i -> 6 `i 350  ]
[e :U 351 ]
[; ;PGM_5.c: 513: }
[; ;PGM_5.c: 514: VAR_omni = 0;
"514
[e = _VAR_omni -> -> 0 `i `uc ]
[; ;PGM_5.c: 515: LATD = (LATD & 0b11110000);
"515
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
"516
}
[e :U 345 ]
[; ;PGM_5.c: 516: }
[; ;PGM_5.c: 517: }
"517
[e :UE 344 ]
}
"519
[v _Letter_kal `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 519: void Letter_kal(void) {
[e :U _Letter_kal ]
[f ]
[; ;PGM_5.c: 520: while(!RD4) {
"520
[e $U 353  ]
[e :U 354 ]
{
[; ;PGM_5.c: 521: LATA4 = 1;
"521
[e = _LATA4 -> -> 1 `i `b ]
[; ;PGM_5.c: 522: if (!Datum_R[0]){
"522
[e $ ! ! != -> *U + &U _Datum_R * -> -> -> 0 `i `ui `ux -> -> # *U &U _Datum_R `ui `ux `i -> -> -> 0 `i `uc `i 356  ]
{
[; ;PGM_5.c: 524: while (!Datum_R[0]);
"524
[e $U 357  ]
[e :U 358 ]
[e :U 357 ]
[e $ ! != -> *U + &U _Datum_R * -> -> -> 0 `i `ui `ux -> -> # *U &U _Datum_R `ui `ux `i -> -> -> 0 `i `uc `i 358  ]
[e :U 359 ]
[; ;PGM_5.c: 525: Datum1_an_Letter = 255;
"525
[e = _Datum1_an_Letter -> -> 255 `i `uc ]
[; ;PGM_5.c: 526: Datum2_an_Letter = 255;
"526
[e = _Datum2_an_Letter -> -> 255 `i `uc ]
[; ;PGM_5.c: 528: while (Datum_R[0]) {
"528
[e $U 360  ]
[e :U 361 ]
{
[; ;PGM_5.c: 529: LATA4 = 0;;
"529
[e = _LATA4 -> -> 0 `i `b ]
[; ;PGM_5.c: 531: LATD = (LATD & 0b11110000)|0b00001010;
"531
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 10 `i `uc ]
[; ;PGM_5.c: 532: _delay((unsigned long)((3)*(20000000/4000.0)));
"532
[e ( __delay (1 -> * -> -> 3 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 533: LATD = (LATD & 0b11110000);
"533
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 534: _delay((unsigned long)((17)*(20000000/4000.0)));
"534
[e ( __delay (1 -> * -> -> 17 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 535: Werte_auf_LCD_anzeigen();
"535
[e ( _Werte_auf_LCD_anzeigen ..  ]
"536
}
[e :U 360 ]
"528
[e $ != -> *U + &U _Datum_R * -> -> -> 0 `i `ui `ux -> -> # *U &U _Datum_R `ui `ux `i -> -> -> 0 `i `uc `i 361  ]
[e :U 362 ]
[; ;PGM_5.c: 536: }
[; ;PGM_5.c: 537: while (!Datum_R[0]);
"537
[e $U 363  ]
[e :U 364 ]
[e :U 363 ]
[e $ ! != -> *U + &U _Datum_R * -> -> -> 0 `i `ui `ux -> -> # *U &U _Datum_R `ui `ux `i -> -> -> 0 `i `uc `i 364  ]
[e :U 365 ]
[; ;PGM_5.c: 538: Datum2_an_Letter = 254;
"538
[e = _Datum2_an_Letter -> -> 254 `i `uc ]
"539
}
[e :U 356 ]
[; ;PGM_5.c: 539: }
[; ;PGM_5.c: 540: Werte_auf_LCD_anzeigen();
"540
[e ( _Werte_auf_LCD_anzeigen ..  ]
"541
}
[e :U 353 ]
"520
[e $ ! _RD4 354  ]
[e :U 355 ]
[; ;PGM_5.c: 541: }
[; ;PGM_5.c: 542: Datum1_an_Letter = A_D_Wert [2];
"542
[e = _Datum1_an_Letter *U + &U _A_D_Wert * -> -> -> 2 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux ]
[; ;PGM_5.c: 543: Datum2_an_Letter = A_D_Wert [5];
"543
[e = _Datum2_an_Letter *U + &U _A_D_Wert * -> -> -> 5 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux ]
[; ;PGM_5.c: 544: Flag_kalibrieren = 1;
"544
[e = _Flag_kalibrieren -> -> 1 `i `b ]
[; ;PGM_5.c: 545: }
"545
[e :UE 352 ]
}
"546
[v _Werte_auf_LCD_anzeigen `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 546: void Werte_auf_LCD_anzeigen (void) {
[e :U _Werte_auf_LCD_anzeigen ]
[f ]
[; ;PGM_5.c: 547: for(char i = 0; i < 11; i++) {
"547
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 11 `i 367  ]
[e $U 368  ]
[e :U 367 ]
{
[; ;PGM_5.c: 548: Datum_S[i] = A_D_Wert[i];
"548
[e = *U + &U _Datum_S * -> _i `ux -> -> # *U &U _Datum_S `ui `ux *U + &U _A_D_Wert * -> _i `ux -> -> # *U &U _A_D_Wert `ui `ux ]
"549
}
"547
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 11 `i 367  ]
[e :U 368 ]
"549
}
[; ;PGM_5.c: 549: }
[; ;PGM_5.c: 550: Datum_S[12] = Encoder;
"550
[e = *U + &U _Datum_S * -> -> -> 12 `i `ui `ux -> -> # *U &U _Datum_S `ui `ux _Encoder ]
[; ;PGM_5.c: 551: Datum_S[13] = 13;
"551
[e = *U + &U _Datum_S * -> -> -> 13 `i `ui `ux -> -> # *U &U _Datum_S `ui `ux -> -> 13 `i `uc ]
[; ;PGM_5.c: 552: Datum_S[14] = 14;
"552
[e = *U + &U _Datum_S * -> -> -> 14 `i `ui `ux -> -> # *U &U _Datum_S `ui `ux -> -> 14 `i `uc ]
[; ;PGM_5.c: 553: Datum_S[15] = Temperatur_HI_rechts;
"553
[e = *U + &U _Datum_S * -> -> -> 15 `i `ui `ux -> -> # *U &U _Datum_S `ui `ux _Temperatur_HI_rechts ]
[; ;PGM_5.c: 554: Datum_S[16] = Temperatur_LO_rechts;
"554
[e = *U + &U _Datum_S * -> -> -> 16 `i `ui `ux -> -> # *U &U _Datum_S `ui `ux _Temperatur_LO_rechts ]
[; ;PGM_5.c: 555: Datum_S[17] = Temperatur_HI_links;
"555
[e = *U + &U _Datum_S * -> -> -> 17 `i `ui `ux -> -> # *U &U _Datum_S `ui `ux _Temperatur_HI_links ]
[; ;PGM_5.c: 556: Datum_S[18] = Temperatur_LO_links;
"556
[e = *U + &U _Datum_S * -> -> -> 18 `i `ui `ux -> -> # *U &U _Datum_S `ui `ux _Temperatur_LO_links ]
[; ;PGM_5.c: 557: Datum_S[19] = 33;
"557
[e = *U + &U _Datum_S * -> -> -> 19 `i `ui `ux -> -> # *U &U _Datum_S `ui `ux -> -> 33 `i `uc ]
[; ;PGM_5.c: 558: }
"558
[e :UE 366 ]
}
"559
[v _opfer `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 559: void opfer (void) {
[e :U _opfer ]
[f ]
[; ;PGM_5.c: 560: while(0){
"560
[e $U 371  ]
[e :U 372 ]
{
[; ;PGM_5.c: 561: if(Flag_T_links == 1){
"561
[e $ ! == -> _Flag_T_links `i -> 1 `i 374  ]
{
[; ;PGM_5.c: 562: if (A_D_Wert [1] > wand){
"562
[e $ ! > -> *U + &U _A_D_Wert * -> -> -> 1 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i 375  ]
{
[; ;PGM_5.c: 563: if (VAR_zeit_opfer > 300){
"563
[e $ ! > _VAR_zeit_opfer -> 300 `i 376  ]
{
[; ;PGM_5.c: 564: Flag_LED = 0;
"564
[e = _Flag_LED -> -> 0 `i `b ]
[; ;PGM_5.c: 565: LATD = (LATD & 0b11110000);
"565
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 566: Flag_T_links = 0;
"566
[e = _Flag_T_links -> -> 0 `i `b ]
[; ;PGM_5.c: 567: LATD = (LATD & 0b11110000);
"567
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 568: rechts90grad();
"568
[e ( _rechts90grad ..  ]
[; ;PGM_5.c: 569: while(!Flag_Strecke_erreicht);
"569
[e $U 377  ]
[e :U 378 ]
[e :U 377 ]
[e $ ! _Flag_Strecke_erreicht 378  ]
[e :U 379 ]
[; ;PGM_5.c: 570: LATD = (LATD & 0b11110000);
"570
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 571: kit_abwerfen();
"571
[e ( _kit_abwerfen ..  ]
[; ;PGM_5.c: 572: LATD = (LATD & 0b11110000);
"572
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 573: links90grad();
"573
[e ( _links90grad ..  ]
[; ;PGM_5.c: 574: while(!Flag_Strecke_erreicht);
"574
[e $U 380  ]
[e :U 381 ]
[e :U 380 ]
[e $ ! _Flag_Strecke_erreicht 381  ]
[e :U 382 ]
[; ;PGM_5.c: 575: LATD = (LATD & 0b11110000);
"575
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 576: _delay((unsigned long)((5000)*(20000000/4000.0)));
"576
[e ( __delay (1 -> * -> -> 5000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 577: Flag_LED = 0;
"577
[e = _Flag_LED -> -> 0 `i `b ]
[; ;PGM_5.c: 578: VAR_zeit_opfer = 0;
"578
[e = _VAR_zeit_opfer -> 0 `i ]
[; ;PGM_5.c: 579: Strecke_fahren(15, LATD = (LATD & 0b11110000)|0b00001010);
"579
[e ( _Strecke_fahren (2 , -> -> 15 `i `uc = _LATD -> | & -> _LATD `i -> 240 `i -> 10 `i `uc ]
[; ;PGM_5.c: 580: while(!Flag_Strecke_erreicht);
"580
[e $U 383  ]
[e :U 384 ]
[e :U 383 ]
[e $ ! _Flag_Strecke_erreicht 384  ]
[e :U 385 ]
[; ;PGM_5.c: 581: LATD = (LATD & 0b11110000);
"581
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
"583
}
[; ;PGM_5.c: 583: }
[e $U 386  ]
"584
[e :U 376 ]
[; ;PGM_5.c: 584: else{
{
[; ;PGM_5.c: 585: Flag_T_links = 0;
"585
[e = _Flag_T_links -> -> 0 `i `b ]
"586
}
[e :U 386 ]
"587
}
[; ;PGM_5.c: 586: }
[; ;PGM_5.c: 587: }
[e $U 387  ]
"588
[e :U 375 ]
[; ;PGM_5.c: 588: else{
{
[; ;PGM_5.c: 618: Flag_T_links = 0;
"618
[e = _Flag_T_links -> -> 0 `i `b ]
"619
}
[e :U 387 ]
"620
}
[e :U 374 ]
[; ;PGM_5.c: 619: }
[; ;PGM_5.c: 620: }
[; ;PGM_5.c: 621: if(Flag_T_rechts == 1){
"621
[e $ ! == -> _Flag_T_rechts `i -> 1 `i 388  ]
{
[; ;PGM_5.c: 622: if(A_D_Wert [2] > wand){
"622
[e $ ! > -> *U + &U _A_D_Wert * -> -> -> 2 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i 389  ]
{
[; ;PGM_5.c: 623: if (VAR_zeit_opfer > 300){
"623
[e $ ! > _VAR_zeit_opfer -> 300 `i 390  ]
{
[; ;PGM_5.c: 624: Flag_LED =0;
"624
[e = _Flag_LED -> -> 0 `i `b ]
[; ;PGM_5.c: 625: LATD = (LATD & 0b11110000);
"625
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 626: Flag_T_rechts = 0;
"626
[e = _Flag_T_rechts -> -> 0 `i `b ]
[; ;PGM_5.c: 627: LATD = (LATD & 0b11110000);
"627
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 628: links90grad();
"628
[e ( _links90grad ..  ]
[; ;PGM_5.c: 629: while(!Flag_Strecke_erreicht);
"629
[e $U 391  ]
[e :U 392 ]
[e :U 391 ]
[e $ ! _Flag_Strecke_erreicht 392  ]
[e :U 393 ]
[; ;PGM_5.c: 630: LATD = (LATD & 0b11110000);
"630
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 631: kit_abwerfen();
"631
[e ( _kit_abwerfen ..  ]
[; ;PGM_5.c: 632: LATD = (LATD & 0b11110000);
"632
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 633: rechts90grad();
"633
[e ( _rechts90grad ..  ]
[; ;PGM_5.c: 634: while(!Flag_Strecke_erreicht);
"634
[e $U 394  ]
[e :U 395 ]
[e :U 394 ]
[e $ ! _Flag_Strecke_erreicht 395  ]
[e :U 396 ]
[; ;PGM_5.c: 635: LATD = (LATD & 0b11110000);
"635
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 636: _delay((unsigned long)((5000)*(20000000/4000.0)));
"636
[e ( __delay (1 -> * -> -> 5000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 637: Flag_LED = 0;
"637
[e = _Flag_LED -> -> 0 `i `b ]
[; ;PGM_5.c: 638: VAR_zeit_opfer = 0;
"638
[e = _VAR_zeit_opfer -> 0 `i ]
"639
}
[; ;PGM_5.c: 639: }
[e $U 397  ]
"640
[e :U 390 ]
[; ;PGM_5.c: 640: else{
{
[; ;PGM_5.c: 641: Flag_T_rechts = 0;
"641
[e = _Flag_T_rechts -> -> 0 `i `b ]
"642
}
[e :U 397 ]
"643
}
[; ;PGM_5.c: 642: }
[; ;PGM_5.c: 643: }
[e $U 398  ]
"644
[e :U 389 ]
[; ;PGM_5.c: 644: else{
{
[; ;PGM_5.c: 645: Flag_T_rechts = 0;
"645
[e = _Flag_T_rechts -> -> 0 `i `b ]
"646
}
[e :U 398 ]
"647
}
[e :U 388 ]
"648
}
[e :U 371 ]
"560
[e $ != -> 0 `i -> 0 `i 372  ]
[e :U 373 ]
[; ;PGM_5.c: 646: }
[; ;PGM_5.c: 647: }
[; ;PGM_5.c: 648: }
[; ;PGM_5.c: 649: }
"649
[e :UE 370 ]
}
"650
[v _kit_abwerfen `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 650: void kit_abwerfen(void) {
[e :U _kit_abwerfen ]
[f ]
[; ;PGM_5.c: 651: GIE = 0;
"651
[e = _GIE -> -> 0 `i `b ]
[; ;PGM_5.c: 652: for(char i=0; i<6; i++){
"652
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 400  ]
[e $U 401  ]
[e :U 400 ]
{
[; ;PGM_5.c: 653: RB1 = 1;
"653
[e = _RB1 -> -> 1 `i `b ]
[; ;PGM_5.c: 654: _delay((unsigned long)((2390)*(20000000/4000000.0)));
"654
[e ( __delay (1 -> * -> -> 2390 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
[; ;PGM_5.c: 655: RB1 = 0;
"655
[e = _RB1 -> -> 0 `i `b ]
[; ;PGM_5.c: 656: _delay((unsigned long)((20)*(20000000/4000.0)));
"656
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"657
}
"652
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 400  ]
[e :U 401 ]
"657
}
[; ;PGM_5.c: 657: }
[; ;PGM_5.c: 658: _delay((unsigned long)((200)*(20000000/4000.0)));
"658
[e ( __delay (1 -> * -> -> 200 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 659: for(char i=0; i<6; i++){
"659
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 403  ]
[e $U 404  ]
[e :U 403 ]
{
[; ;PGM_5.c: 660: RB1 = 1;
"660
[e = _RB1 -> -> 1 `i `b ]
[; ;PGM_5.c: 661: _delay((unsigned long)((2110)*(20000000/4000000.0)));
"661
[e ( __delay (1 -> * -> -> 2110 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
[; ;PGM_5.c: 662: RB1 = 0;
"662
[e = _RB1 -> -> 0 `i `b ]
[; ;PGM_5.c: 663: _delay((unsigned long)((20)*(20000000/4000.0)));
"663
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"664
}
"659
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 403  ]
[e :U 404 ]
"664
}
[; ;PGM_5.c: 664: }
[; ;PGM_5.c: 665: for(char i=0; i<6; i++){
"665
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 6 `i 406  ]
[e $U 407  ]
[e :U 406 ]
{
[; ;PGM_5.c: 666: RB1 = 1;
"666
[e = _RB1 -> -> 1 `i `b ]
[; ;PGM_5.c: 667: _delay((unsigned long)((2390)*(20000000/4000000.0)));
"667
[e ( __delay (1 -> * -> -> 2390 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
[; ;PGM_5.c: 668: RB1 = 0;
"668
[e = _RB1 -> -> 0 `i `b ]
[; ;PGM_5.c: 669: _delay((unsigned long)((20)*(20000000/4000.0)));
"669
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"670
}
"665
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 6 `i 406  ]
[e :U 407 ]
"670
}
[; ;PGM_5.c: 670: }
[; ;PGM_5.c: 671: GIE = 1;
"671
[e = _GIE -> -> 1 `i `b ]
[; ;PGM_5.c: 672: }
"672
[e :UE 399 ]
}
"674
[v _anderwandlang `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 674: void anderwandlang(void){
[e :U _anderwandlang ]
[f ]
[; ;PGM_5.c: 678: if (A_D_Wert [2] >= zunah) {
"678
[e $ ! >= -> *U + &U _A_D_Wert * -> -> -> 2 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _zunah `i 410  ]
{
[; ;PGM_5.c: 679: LATD = (LATD & 0b11110000)|0b00001000;
"679
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 8 `i `uc ]
[; ;PGM_5.c: 680: _delay((unsigned long)((7)*(20000000/4000.0)));
"680
[e ( __delay (1 -> * -> -> 7 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 681: LATD = (LATD & 0b11110000)|0b00001010;
"681
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 10 `i `uc ]
[; ;PGM_5.c: 682: _delay((unsigned long)((13)*(20000000/4000.0)));
"682
[e ( __delay (1 -> * -> -> 13 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 683: opfer();
"683
[e ( _opfer ..  ]
"684
}
[e :U 410 ]
[; ;PGM_5.c: 684: }
[; ;PGM_5.c: 685: if (A_D_Wert [2] <= zuweit) {
"685
[e $ ! <= -> *U + &U _A_D_Wert * -> -> -> 2 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _zuweit `i 411  ]
{
[; ;PGM_5.c: 686: LATD = (LATD & 0b11110000)|0b00000010;
"686
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 2 `i `uc ]
[; ;PGM_5.c: 687: _delay((unsigned long)((7)*(20000000/4000.0)));
"687
[e ( __delay (1 -> * -> -> 7 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 688: LATD = (LATD & 0b11110000)|0b00001010;
"688
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 10 `i `uc ]
[; ;PGM_5.c: 689: _delay((unsigned long)((13)*(20000000/4000.0)));
"689
[e ( __delay (1 -> * -> -> 13 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 690: opfer();
"690
[e ( _opfer ..  ]
"691
}
[e :U 411 ]
[; ;PGM_5.c: 691: }
[; ;PGM_5.c: 692: if (A_D_Wert [2] < zunah) {
"692
[e $ ! < -> *U + &U _A_D_Wert * -> -> -> 2 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _zunah `i 412  ]
{
[; ;PGM_5.c: 693: if (A_D_Wert [2] > zuweit) {
"693
[e $ ! > -> *U + &U _A_D_Wert * -> -> -> 2 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _zuweit `i 413  ]
{
[; ;PGM_5.c: 695: if (A_D_Wert [2] > (A_D_Wert [5] -2)) {
"695
[e $ ! > -> *U + &U _A_D_Wert * -> -> -> 2 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i - -> *U + &U _A_D_Wert * -> -> -> 5 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 2 `i 414  ]
{
[; ;PGM_5.c: 696: LATD = (LATD & 0b11110000)|0b00001000;
"696
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 8 `i `uc ]
[; ;PGM_5.c: 697: _delay((unsigned long)((7)*(20000000/4000.0)));
"697
[e ( __delay (1 -> * -> -> 7 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 698: LATD = (LATD & 0b11110000)|0b00001010;
"698
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 10 `i `uc ]
[; ;PGM_5.c: 699: _delay((unsigned long)((13)*(20000000/4000.0)));
"699
[e ( __delay (1 -> * -> -> 13 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 700: opfer();
"700
[e ( _opfer ..  ]
"701
}
[; ;PGM_5.c: 701: }
[e $U 415  ]
"702
[e :U 414 ]
[; ;PGM_5.c: 702: else {
{
[; ;PGM_5.c: 703: if (A_D_Wert [2] < (A_D_Wert [5] +2)) {
"703
[e $ ! < -> *U + &U _A_D_Wert * -> -> -> 2 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i + -> *U + &U _A_D_Wert * -> -> -> 5 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 2 `i 416  ]
{
[; ;PGM_5.c: 704: LATD = (LATD & 0b11110000)|0b00000010;
"704
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 2 `i `uc ]
[; ;PGM_5.c: 705: _delay((unsigned long)((7)*(20000000/4000.0)));
"705
[e ( __delay (1 -> * -> -> 7 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 706: LATD = (LATD & 0b11110000)|0b00001010;
"706
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 10 `i `uc ]
[; ;PGM_5.c: 707: _delay((unsigned long)((13)*(20000000/4000.0)));
"707
[e ( __delay (1 -> * -> -> 13 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 708: opfer();
"708
[e ( _opfer ..  ]
"709
}
[; ;PGM_5.c: 709: }
[e $U 417  ]
"710
[e :U 416 ]
[; ;PGM_5.c: 710: else{
{
[; ;PGM_5.c: 711: LATD = (LATD & 0b11110000)|0b00001010;
"711
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 10 `i `uc ]
[; ;PGM_5.c: 712: _delay((unsigned long)((20)*(20000000/4000.0)));
"712
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 713: opfer();
"713
[e ( _opfer ..  ]
"714
}
[e :U 417 ]
"715
}
[e :U 415 ]
"716
}
[e :U 413 ]
"720
}
[e :U 412 ]
[; ;PGM_5.c: 714: }
[; ;PGM_5.c: 715: }
[; ;PGM_5.c: 716: }
[; ;PGM_5.c: 720: }
[; ;PGM_5.c: 723: }
"723
[e :UE 409 ]
}
"724
[v _schwarzeplatte `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 724: void schwarzeplatte(void){
[e :U _schwarzeplatte ]
[f ]
[; ;PGM_5.c: 725: if ((A_D_Wert [9] > schwarz )||(A_D_Wert [8] > schwarz )){
"725
[e $ ! || > -> *U + &U _A_D_Wert * -> -> -> 9 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _schwarz `i > -> *U + &U _A_D_Wert * -> -> -> 8 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _schwarz `i 419  ]
{
[; ;PGM_5.c: 726: LATD = (LATD & 0b11110000);
"726
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 727: Strecke_fahren (30,LATD = (LATD & 0b11110000)|0b00001010);
"727
[e ( _Strecke_fahren (2 , -> -> 30 `i `uc = _LATD -> | & -> _LATD `i -> 240 `i -> 10 `i `uc ]
[; ;PGM_5.c: 728: while(!Flag_Strecke_erreicht);
"728
[e $U 420  ]
[e :U 421 ]
[e :U 420 ]
[e $ ! _Flag_Strecke_erreicht 421  ]
[e :U 422 ]
[; ;PGM_5.c: 729: LATD = (LATD & 0b11110000);
"729
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 730: if ((A_D_Wert [9] > schwarz )&&(A_D_Wert [8] > schwarz )){
"730
[e $ ! && > -> *U + &U _A_D_Wert * -> -> -> 9 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _schwarz `i > -> *U + &U _A_D_Wert * -> -> -> 8 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _schwarz `i 423  ]
{
[; ;PGM_5.c: 731: LATD = (LATD & 0b11110000);
"731
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 732: VAR_Schwarz_ausrichten=1;
"732
[e = _VAR_Schwarz_ausrichten -> -> 1 `i `uc ]
[; ;PGM_5.c: 733: Encoder=0;
"733
[e = _Encoder -> -> 0 `i `uc ]
[; ;PGM_5.c: 734: while ((A_D_Wert [9] > schwarz )&&(A_D_Wert [8] > schwarz )){
"734
[e $U 424  ]
[e :U 425 ]
{
[; ;PGM_5.c: 735: while ((A_D_Wert [9] > schwarz )&&(A_D_Wert [8] > schwarz )){
"735
[e $U 427  ]
[e :U 428 ]
{
[; ;PGM_5.c: 736: LATD = (LATD & 0b11110000)|0b00000101;
"736
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 5 `i `uc ]
[; ;PGM_5.c: 737: _delay((unsigned long)((20)*(20000000/4000.0)));
"737
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 738: LATD = (LATD & 0b11110000);
"738
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 739: _delay((unsigned long)((12)*(20000000/4000.0)));
"739
[e ( __delay (1 -> * -> -> 12 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"740
}
[e :U 427 ]
"735
[e $ && > -> *U + &U _A_D_Wert * -> -> -> 9 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _schwarz `i > -> *U + &U _A_D_Wert * -> -> -> 8 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _schwarz `i 428  ]
[e :U 429 ]
[; ;PGM_5.c: 740: }
[; ;PGM_5.c: 741: while ((A_D_Wert [9] > schwarz )&&(A_D_Wert [8] < schwarz )){
"741
[e $U 430  ]
[e :U 431 ]
{
[; ;PGM_5.c: 742: LATD = (LATD & 0b11110000)|0b00000100;
"742
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 4 `i `uc ]
[; ;PGM_5.c: 743: _delay((unsigned long)((20)*(20000000/4000.0)));
"743
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 744: LATD = (LATD & 0b11110000)|0b00000010;
"744
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 2 `i `uc ]
[; ;PGM_5.c: 745: _delay((unsigned long)((12)*(20000000/4000.0)));
"745
[e ( __delay (1 -> * -> -> 12 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 746: LATD = (LATD & 0b11110000);
"746
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
"747
}
[e :U 430 ]
"741
[e $ && > -> *U + &U _A_D_Wert * -> -> -> 9 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _schwarz `i < -> *U + &U _A_D_Wert * -> -> -> 8 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _schwarz `i 431  ]
[e :U 432 ]
[; ;PGM_5.c: 747: }
[; ;PGM_5.c: 748: while ((A_D_Wert [9] < schwarz )&&(A_D_Wert [8] > schwarz )){
"748
[e $U 433  ]
[e :U 434 ]
{
[; ;PGM_5.c: 749: LATD = (LATD & 0b11110000)|0b00000001;
"749
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 1 `i `uc ]
[; ;PGM_5.c: 750: _delay((unsigned long)((15)*(20000000/4000.0)));
"750
[e ( __delay (1 -> * -> -> 15 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 751: LATD = (LATD & 0b11110000)|0b00001000;
"751
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 8 `i `uc ]
[; ;PGM_5.c: 752: _delay((unsigned long)((5)*(20000000/4000.0)));
"752
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 753: LATD = (LATD & 0b11110000);
"753
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
"754
}
[e :U 433 ]
"748
[e $ && < -> *U + &U _A_D_Wert * -> -> -> 9 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _schwarz `i > -> *U + &U _A_D_Wert * -> -> -> 8 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _schwarz `i 434  ]
[e :U 435 ]
"756
}
[e :U 424 ]
"734
[e $ && > -> *U + &U _A_D_Wert * -> -> -> 9 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _schwarz `i > -> *U + &U _A_D_Wert * -> -> -> 8 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _schwarz `i 425  ]
[e :U 426 ]
[; ;PGM_5.c: 754: }
[; ;PGM_5.c: 756: }
[; ;PGM_5.c: 757: LATD = (LATD & 0b11110000);
"757
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 758: _delay((unsigned long)((50)*(20000000/4000.0)));
"758
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 759: Strecke_fahren(48,LATD = (LATD & 0b11110000)|0b00000101);
"759
[e ( _Strecke_fahren (2 , -> -> 48 `i `uc = _LATD -> | & -> _LATD `i -> 240 `i -> 5 `i `uc ]
[; ;PGM_5.c: 760: while(!Flag_Strecke_erreicht);
"760
[e $U 436  ]
[e :U 437 ]
[e :U 436 ]
[e $ ! _Flag_Strecke_erreicht 437  ]
[e :U 438 ]
[; ;PGM_5.c: 761: LATD = (LATD & 0b11110000);
"761
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 762: _delay((unsigned long)((1000)*(20000000/4000.0)));
"762
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 763: ausrichten();
"763
[e ( _ausrichten ..  ]
[; ;PGM_5.c: 764: links90grad();
"764
[e ( _links90grad ..  ]
[; ;PGM_5.c: 765: while (!Flag_Strecke_erreicht){
"765
[e $U 439  ]
[e :U 440 ]
{
[; ;PGM_5.c: 766: opfer();
"766
[e ( _opfer ..  ]
"767
}
[e :U 439 ]
"765
[e $ ! _Flag_Strecke_erreicht 440  ]
[e :U 441 ]
[; ;PGM_5.c: 767: }
[; ;PGM_5.c: 768: LATD = (LATD & 0b11110000);
"768
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 769: ausrichten();
"769
[e ( _ausrichten ..  ]
[; ;PGM_5.c: 770: if (A_D_Wert [3] > wand){
"770
[e $ ! > -> *U + &U _A_D_Wert * -> -> -> 3 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i 442  ]
{
[; ;PGM_5.c: 771: links90grad();
"771
[e ( _links90grad ..  ]
[; ;PGM_5.c: 772: while (!Flag_Strecke_erreicht){
"772
[e $U 443  ]
[e :U 444 ]
{
[; ;PGM_5.c: 773: opfer();
"773
[e ( _opfer ..  ]
"774
}
[e :U 443 ]
"772
[e $ ! _Flag_Strecke_erreicht 444  ]
[e :U 445 ]
[; ;PGM_5.c: 774: }
[; ;PGM_5.c: 775: LATD = (LATD & 0b11110000);
"775
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 776: ausrichten();
"776
[e ( _ausrichten ..  ]
"777
}
[; ;PGM_5.c: 777: }
[e $U 446  ]
"778
[e :U 442 ]
[; ;PGM_5.c: 778: else{
{
[; ;PGM_5.c: 779: LATD = (LATD & 0b11110000);
"779
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 780: _delay((unsigned long)((50)*(20000000/4000.0)));
"780
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 781: von_mitte_bis_wieder_wand_in_schwarzeplatte();
"781
[e ( _von_mitte_bis_wieder_wand_in_schwarzeplatte ..  ]
[; ;PGM_5.c: 782: LATD = (LATD & 0b11110000);
"782
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 783: _delay((unsigned long)((50)*(20000000/4000.0)));
"783
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"784
}
[e :U 446 ]
"786
}
[; ;PGM_5.c: 784: }
[; ;PGM_5.c: 786: }
[e $U 447  ]
"787
[e :U 423 ]
[; ;PGM_5.c: 787: else{
{
[; ;PGM_5.c: 788: Strecke_fahren (30,LATD = (LATD & 0b11110000)|0b00000101);
"788
[e ( _Strecke_fahren (2 , -> -> 30 `i `uc = _LATD -> | & -> _LATD `i -> 240 `i -> 5 `i `uc ]
[; ;PGM_5.c: 789: while(!Flag_Strecke_erreicht);
"789
[e $U 448  ]
[e :U 449 ]
[e :U 448 ]
[e $ ! _Flag_Strecke_erreicht 449  ]
[e :U 450 ]
[; ;PGM_5.c: 790: LATD = (LATD & 0b11110000);
"790
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
"792
}
[e :U 447 ]
"793
}
[e :U 419 ]
[; ;PGM_5.c: 792: }
[; ;PGM_5.c: 793: }
[; ;PGM_5.c: 795: }
"795
[e :UE 418 ]
}
"796
[v _hindernis `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 796: void hindernis(void){
[e :U _hindernis ]
[f ]
[; ;PGM_5.c: 797: if (Flag_Hindernis == 1){
"797
[e $ ! == -> _Flag_Hindernis `i -> 1 `i 452  ]
{
[; ;PGM_5.c: 798: Encoder = encodersave;
"798
[e = _Encoder _encodersave ]
[; ;PGM_5.c: 799: while((A_D_Wert [0] > 110)&& (A_D_Wert [3] < wand)){
"799
[e $U 453  ]
[e :U 454 ]
{
[; ;PGM_5.c: 800: LATD = (LATD & 0b11110000)|0b00000010;
"800
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 2 `i `uc ]
[; ;PGM_5.c: 801: _delay((unsigned long)((52)*(20000000/4000.0)));
"801
[e ( __delay (1 -> * -> -> 52 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 802: LATD = (LATD & 0b11110000)|0b00001000;
"802
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 8 `i `uc ]
[; ;PGM_5.c: 803: _delay((unsigned long)((38)*(20000000/4000.0)));
"803
[e ( __delay (1 -> * -> -> 38 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 804: LATD = (LATD & 0b11110000)|0b00000001;
"804
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 1 `i `uc ]
[; ;PGM_5.c: 805: _delay((unsigned long)((42)*(20000000/4000.0)));
"805
[e ( __delay (1 -> * -> -> 42 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 806: LATD = (LATD & 0b11110000)|0b00000100;
"806
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 4 `i `uc ]
[; ;PGM_5.c: 807: _delay((unsigned long)((42)*(20000000/4000.0)));
"807
[e ( __delay (1 -> * -> -> 42 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"808
}
[e :U 453 ]
"799
[e $ && > -> *U + &U _A_D_Wert * -> -> -> 0 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 110 `i < -> *U + &U _A_D_Wert * -> -> -> 3 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i 454  ]
[e :U 455 ]
[; ;PGM_5.c: 808: }
[; ;PGM_5.c: 809: VAR_omni=0;
"809
[e = _VAR_omni -> -> 0 `i `uc ]
[; ;PGM_5.c: 810: while (VAR_omni < 2){
"810
[e $U 456  ]
[e :U 457 ]
{
[; ;PGM_5.c: 811: LATD = (LATD & 0b11110000)|0b00000010;
"811
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 2 `i `uc ]
[; ;PGM_5.c: 812: _delay((unsigned long)((52)*(20000000/4000.0)));
"812
[e ( __delay (1 -> * -> -> 52 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 813: LATD = (LATD & 0b11110000)|0b00001000;
"813
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 8 `i `uc ]
[; ;PGM_5.c: 814: _delay((unsigned long)((38)*(20000000/4000.0)));
"814
[e ( __delay (1 -> * -> -> 38 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 815: LATD = (LATD & 0b11110000)|0b00000001;
"815
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 1 `i `uc ]
[; ;PGM_5.c: 816: _delay((unsigned long)((42)*(20000000/4000.0)));
"816
[e ( __delay (1 -> * -> -> 42 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 817: LATD = (LATD & 0b11110000)|0b00000100;
"817
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 4 `i `uc ]
[; ;PGM_5.c: 818: _delay((unsigned long)((42)*(20000000/4000.0)));
"818
[e ( __delay (1 -> * -> -> 42 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 819: VAR_omni++;
"819
[e ++ _VAR_omni -> -> 1 `i `uc ]
"820
}
[e :U 456 ]
"810
[e $ < -> _VAR_omni `i -> 2 `i 457  ]
[e :U 458 ]
"821
}
[e :U 452 ]
[; ;PGM_5.c: 820: }
[; ;PGM_5.c: 821: }
[; ;PGM_5.c: 822: Flag_Hindernis = 0;
"822
[e = _Flag_Hindernis -> -> 0 `i `b ]
[; ;PGM_5.c: 823: VAR_omni = 0;
"823
[e = _VAR_omni -> -> 0 `i `uc ]
[; ;PGM_5.c: 824: encodersave = Encoder;
"824
[e = _encodersave _Encoder ]
[; ;PGM_5.c: 825: }
"825
[e :UE 451 ]
}
"827
[v _im_Kreis_faren `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 827: void im_Kreis_faren (void) {
[e :U _im_Kreis_faren ]
[f ]
[; ;PGM_5.c: 828: if (VAR_im_Kreis_faren > 6){
"828
[e $ ! > -> _VAR_im_Kreis_faren `i -> 6 `i 460  ]
{
[; ;PGM_5.c: 829: VAR_links_ist_nichts ++ ;
"829
[e ++ _VAR_links_ist_nichts -> -> 1 `i `uc ]
[; ;PGM_5.c: 830: if (A_D_Wert [1] > wand ){
"830
[e $ ! > -> *U + &U _A_D_Wert * -> -> -> 1 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i 461  ]
{
[; ;PGM_5.c: 831: links90grad();
"831
[e ( _links90grad ..  ]
[; ;PGM_5.c: 832: while(!Flag_Strecke_erreicht){
"832
[e $U 462  ]
[e :U 463 ]
{
"833
}
[e :U 462 ]
"832
[e $ ! _Flag_Strecke_erreicht 463  ]
[e :U 464 ]
[; ;PGM_5.c: 833: }
[; ;PGM_5.c: 834: LATD = (LATD & 0b11110000);
"834
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 835: links90grad();
"835
[e ( _links90grad ..  ]
[; ;PGM_5.c: 836: while(!Flag_Strecke_erreicht){
"836
[e $U 465  ]
[e :U 466 ]
{
"837
}
[e :U 465 ]
"836
[e $ ! _Flag_Strecke_erreicht 466  ]
[e :U 467 ]
[; ;PGM_5.c: 837: }
[; ;PGM_5.c: 838: LATD = (LATD & 0b11110000);
"838
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 839: VAR_im_Kreis_faren = 0 ;
"839
[e = _VAR_im_Kreis_faren -> -> 0 `i `uc ]
[; ;PGM_5.c: 840: VAR_links_ist_nichts = 0 ;
"840
[e = _VAR_links_ist_nichts -> -> 0 `i `uc ]
"841
}
[e :U 461 ]
[; ;PGM_5.c: 841: }
[; ;PGM_5.c: 842: if (VAR_links_ist_nichts > 4){
"842
[e $ ! > -> _VAR_links_ist_nichts `i -> 4 `i 468  ]
{
[; ;PGM_5.c: 843: LATD = (LATD & 0b11110000);
"843
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 844: _delay((unsigned long)((1000)*(20000000/4000.0)));
"844
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 845: VAR_links_ist_nichts = 0 ;
"845
[e = _VAR_links_ist_nichts -> -> 0 `i `uc ]
[; ;PGM_5.c: 846: while (A_D_Wert [0] < wand || A_D_Wert [2] < wand ){
"846
[e $U 469  ]
[e :U 470 ]
{
[; ;PGM_5.c: 847: LATD = (LATD & 0b11110000)|0b00001010 ;
"847
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 10 `i `uc ]
"848
}
[e :U 469 ]
"846
[e $ || < -> *U + &U _A_D_Wert * -> -> -> 0 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i < -> *U + &U _A_D_Wert * -> -> -> 2 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i 470  ]
[e :U 471 ]
[; ;PGM_5.c: 848: }
[; ;PGM_5.c: 849: LATD = (LATD & 0b11110000);
"849
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 850: if (A_D_Wert [3] > wand){
"850
[e $ ! > -> *U + &U _A_D_Wert * -> -> -> 3 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i 472  ]
{
[; ;PGM_5.c: 851: links90grad();
"851
[e ( _links90grad ..  ]
[; ;PGM_5.c: 852: while (!Flag_Strecke_erreicht){}
"852
[e $U 473  ]
[e :U 474 ]
{
}
[e :U 473 ]
[e $ ! _Flag_Strecke_erreicht 474  ]
[e :U 475 ]
[; ;PGM_5.c: 853: LATD = (LATD & 0b11110000) ;
"853
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
"854
}
[e :U 472 ]
[; ;PGM_5.c: 854: }
[; ;PGM_5.c: 855: VAR_im_Kreis_faren = 0 ;
"855
[e = _VAR_im_Kreis_faren -> -> 0 `i `uc ]
"856
}
[e :U 468 ]
"857
}
[e :U 460 ]
[; ;PGM_5.c: 856: }
[; ;PGM_5.c: 857: }
[; ;PGM_5.c: 858: }
"858
[e :UE 459 ]
}
"859
[v _Power_Ausrichten `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 859: void Power_Ausrichten(void){
[e :U _Power_Ausrichten ]
[f ]
[; ;PGM_5.c: 868: }
"868
[e :UE 476 ]
}
"870
[v _ausrichten `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 870: void ausrichten (void){
[e :U _ausrichten ]
[f ]
[; ;PGM_5.c: 871: links_ausrichten();
"871
[e ( _links_ausrichten ..  ]
[; ;PGM_5.c: 872: rechts_ausrichten();
"872
[e ( _rechts_ausrichten ..  ]
[; ;PGM_5.c: 873: vorne_ausrichten();
"873
[e ( _vorne_ausrichten ..  ]
[; ;PGM_5.c: 875: hinten_ausrichten();
"875
[e ( _hinten_ausrichten ..  ]
[; ;PGM_5.c: 879: links_ausrichten();
"879
[e ( _links_ausrichten ..  ]
[; ;PGM_5.c: 880: omnifakelinks();
"880
[e ( _omnifakelinks ..  ]
[; ;PGM_5.c: 881: LATD = (LATD & 0b11110000);
"881
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 882: _delay((unsigned long)((50)*(20000000/4000.0)));
"882
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 883: links_ausrichten();
"883
[e ( _links_ausrichten ..  ]
[; ;PGM_5.c: 884: if((A_D_Wert [1] < Schwellwert_Ausrichten)||(A_D_Wert [6] < Schwellwert_Ausrichten)){
"884
[e $ ! || < -> *U + &U _A_D_Wert * -> -> -> 1 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _Schwellwert_Ausrichten `i < -> *U + &U _A_D_Wert * -> -> -> 6 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _Schwellwert_Ausrichten `i 478  ]
{
[; ;PGM_5.c: 885: rechts_ausrichten();
"885
[e ( _rechts_ausrichten ..  ]
[; ;PGM_5.c: 886: omnifakerechts();
"886
[e ( _omnifakerechts ..  ]
[; ;PGM_5.c: 887: LATD = (LATD & 0b11110000);
"887
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 888: _delay((unsigned long)((50)*(20000000/4000.0)));
"888
[e ( __delay (1 -> * -> -> 50 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 889: rechts_ausrichten();
"889
[e ( _rechts_ausrichten ..  ]
"890
}
[e :U 478 ]
[; ;PGM_5.c: 890: }
[; ;PGM_5.c: 891: }
"891
[e :UE 477 ]
}
"892
[v _vorne_ausrichten `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 892: void vorne_ausrichten (void) {
[e :U _vorne_ausrichten ]
[f ]
[; ;PGM_5.c: 893: if ((A_D_Wert [3] < wand) && ( A_D_Wert [0] < wand )){
"893
[e $ ! && < -> *U + &U _A_D_Wert * -> -> -> 3 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i < -> *U + &U _A_D_Wert * -> -> -> 0 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i 480  ]
{
[; ;PGM_5.c: 894: if ((A_D_Wert [10] < 111) && (A_D_Wert [10] >68)){
"894
[e $ ! && < -> *U + &U _A_D_Wert * -> -> -> 10 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 111 `i > -> *U + &U _A_D_Wert * -> -> -> 10 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 68 `i 481  ]
{
[; ;PGM_5.c: 895: Var_lang_Ausrichten = 0;
"895
[e = _Var_lang_Ausrichten -> -> 0 `i `uc ]
[; ;PGM_5.c: 896: while (Var_lang_Ausrichten == 0){
"896
[e $U 482  ]
[e :U 483 ]
{
[; ;PGM_5.c: 897: if (A_D_Wert [10] < 89){
"897
[e $ ! < -> *U + &U _A_D_Wert * -> -> -> 10 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 89 `i 485  ]
{
[; ;PGM_5.c: 898: LATD = (LATD & 0b11110000)|0b00001010;
"898
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 10 `i `uc ]
[; ;PGM_5.c: 899: _delay((unsigned long)((10)*(20000000/4000.0)));
"899
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 900: LATD = (LATD & 0b11110000);
"900
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 901: _delay((unsigned long)((10)*(20000000/4000.0)));
"901
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"902
}
[e :U 485 ]
[; ;PGM_5.c: 902: }
[; ;PGM_5.c: 903: if (A_D_Wert [10] > 89){
"903
[e $ ! > -> *U + &U _A_D_Wert * -> -> -> 10 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 89 `i 486  ]
{
[; ;PGM_5.c: 904: LATD = (LATD & 0b11110000)|0b00000101;
"904
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 5 `i `uc ]
[; ;PGM_5.c: 905: _delay((unsigned long)((10)*(20000000/4000.0)));
"905
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 906: LATD = (LATD & 0b11110000);
"906
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 907: _delay((unsigned long)((10)*(20000000/4000.0)));
"907
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"908
}
[e :U 486 ]
[; ;PGM_5.c: 908: }
[; ;PGM_5.c: 909: if ((A_D_Wert [10] > 88)&&(A_D_Wert [10] < 90)){
"909
[e $ ! && > -> *U + &U _A_D_Wert * -> -> -> 10 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 88 `i < -> *U + &U _A_D_Wert * -> -> -> 10 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 90 `i 487  ]
{
[; ;PGM_5.c: 910: Var_lang_Ausrichten = 1;
"910
[e = _Var_lang_Ausrichten -> -> 1 `i `uc ]
[; ;PGM_5.c: 911: LATD = (LATD & 0b11110000);
"911
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 912: _delay((unsigned long)((1000)*(20000000/4000.0)));
"912
[e ( __delay (1 -> * -> -> 1000 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"913
}
[e :U 487 ]
"914
}
[e :U 482 ]
"896
[e $ == -> _Var_lang_Ausrichten `i -> 0 `i 483  ]
[e :U 484 ]
"915
}
[e :U 481 ]
"916
}
[e :U 480 ]
[; ;PGM_5.c: 913: }
[; ;PGM_5.c: 914: }
[; ;PGM_5.c: 915: }
[; ;PGM_5.c: 916: }
[; ;PGM_5.c: 917: if ((A_D_Wert [3] > Schwellwert_Ausrichten) && ( A_D_Wert [0] > Schwellwert_Ausrichten )){
"917
[e $ ! && > -> *U + &U _A_D_Wert * -> -> -> 3 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _Schwellwert_Ausrichten `i > -> *U + &U _A_D_Wert * -> -> -> 0 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _Schwellwert_Ausrichten `i 488  ]
{
[; ;PGM_5.c: 918: LATD = (LATD & 0b11110000);
"918
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 919: VAR_aus_zeit = 0;
"919
[e = _VAR_aus_zeit -> 0 `i ]
[; ;PGM_5.c: 920: LATD = (LATD & 0b11110000);
"920
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 921: while ((A_D_Wert [3] > 81)&&(VAR_aus_zeit <= 3000)){
"921
[e $U 489  ]
[e :U 490 ]
{
[; ;PGM_5.c: 922: Power_Ausrichten();
"922
[e ( _Power_Ausrichten ..  ]
[; ;PGM_5.c: 923: LATD = (LATD & 0b11110000)|0b00000101;
"923
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 5 `i `uc ]
[; ;PGM_5.c: 924: _delay((unsigned long)((Ausrichten_Fahren)*(20000000/4000.0)));
"924
[e ( __delay (1 -> * -> _Ausrichten_Fahren `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 925: LATD = (LATD & 0b11110000);
"925
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 926: _delay((unsigned long)((Ausrichten_Stopp)*(20000000/4000.0)));
"926
[e ( __delay (1 -> * -> _Ausrichten_Stopp `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 927: opfer();
"927
[e ( _opfer ..  ]
[; ;PGM_5.c: 928: VAR_aus_zeit ++ ;
"928
[e ++ _VAR_aus_zeit -> 1 `i ]
"929
}
[e :U 489 ]
"921
[e $ && > -> *U + &U _A_D_Wert * -> -> -> 3 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 81 `i <= _VAR_aus_zeit -> 3000 `i 490  ]
[e :U 491 ]
[; ;PGM_5.c: 929: }
[; ;PGM_5.c: 930: VAR_aus_zeit = 0;
"930
[e = _VAR_aus_zeit -> 0 `i ]
[; ;PGM_5.c: 931: while ((A_D_Wert [3] < 77)&&(VAR_aus_zeit <= 3000)){
"931
[e $U 492  ]
[e :U 493 ]
{
[; ;PGM_5.c: 932: Power_Ausrichten();
"932
[e ( _Power_Ausrichten ..  ]
[; ;PGM_5.c: 933: LATD = (LATD & 0b11110000)|0b00001010;
"933
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 10 `i `uc ]
[; ;PGM_5.c: 934: _delay((unsigned long)((Ausrichten_Fahren)*(20000000/4000.0)));
"934
[e ( __delay (1 -> * -> _Ausrichten_Fahren `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 935: LATD = (LATD & 0b11110000);
"935
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 936: _delay((unsigned long)((Ausrichten_Stopp)*(20000000/4000.0)));
"936
[e ( __delay (1 -> * -> _Ausrichten_Stopp `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 937: opfer();
"937
[e ( _opfer ..  ]
[; ;PGM_5.c: 938: VAR_aus_zeit ++ ;
"938
[e ++ _VAR_aus_zeit -> 1 `i ]
"939
}
[e :U 492 ]
"931
[e $ && < -> *U + &U _A_D_Wert * -> -> -> 3 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 77 `i <= _VAR_aus_zeit -> 3000 `i 493  ]
[e :U 494 ]
[; ;PGM_5.c: 939: }
[; ;PGM_5.c: 940: VAR_aus_zeit = 0;
"940
[e = _VAR_aus_zeit -> 0 `i ]
[; ;PGM_5.c: 941: while (A_D_Wert [3] < (A_D_Wert [0] +2 ) && (VAR_aus_zeit <= 3000)){
"941
[e $U 495  ]
[e :U 496 ]
{
[; ;PGM_5.c: 942: Power_Ausrichten();
"942
[e ( _Power_Ausrichten ..  ]
[; ;PGM_5.c: 943: LATD = (LATD & 0b11110000)|0b00001000;
"943
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 8 `i `uc ]
[; ;PGM_5.c: 944: _delay((unsigned long)((Ausrichten_Fahren)*(20000000/4000.0)));
"944
[e ( __delay (1 -> * -> _Ausrichten_Fahren `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 945: LATD = (LATD & 0b11110000);
"945
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 946: _delay((unsigned long)((Ausrichten_Stopp)*(20000000/4000.0)));
"946
[e ( __delay (1 -> * -> _Ausrichten_Stopp `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 947: opfer();
"947
[e ( _opfer ..  ]
[; ;PGM_5.c: 948: VAR_aus_zeit ++ ;
"948
[e ++ _VAR_aus_zeit -> 1 `i ]
"949
}
[e :U 495 ]
"941
[e $ && < -> *U + &U _A_D_Wert * -> -> -> 3 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i + -> *U + &U _A_D_Wert * -> -> -> 0 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 2 `i <= _VAR_aus_zeit -> 3000 `i 496  ]
[e :U 497 ]
[; ;PGM_5.c: 949: }
[; ;PGM_5.c: 950: VAR_aus_zeit = 0;
"950
[e = _VAR_aus_zeit -> 0 `i ]
[; ;PGM_5.c: 951: while(A_D_Wert [3] > (A_D_Wert [0] + 2)&& (VAR_aus_zeit <= 3000)){
"951
[e $U 498  ]
[e :U 499 ]
{
[; ;PGM_5.c: 952: Power_Ausrichten();
"952
[e ( _Power_Ausrichten ..  ]
[; ;PGM_5.c: 953: LATD = (LATD & 0b11110000)|0b00000010;
"953
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 2 `i `uc ]
[; ;PGM_5.c: 954: _delay((unsigned long)((Ausrichten_Fahren)*(20000000/4000.0)));
"954
[e ( __delay (1 -> * -> _Ausrichten_Fahren `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 955: LATD = (LATD & 0b11110000);
"955
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 956: _delay((unsigned long)((Ausrichten_Stopp)*(20000000/4000.0)));
"956
[e ( __delay (1 -> * -> _Ausrichten_Stopp `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 957: opfer();
"957
[e ( _opfer ..  ]
[; ;PGM_5.c: 958: VAR_aus_zeit ++ ;
"958
[e ++ _VAR_aus_zeit -> 1 `i ]
"959
}
[e :U 498 ]
"951
[e $ && > -> *U + &U _A_D_Wert * -> -> -> 3 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i + -> *U + &U _A_D_Wert * -> -> -> 0 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 2 `i <= _VAR_aus_zeit -> 3000 `i 499  ]
[e :U 500 ]
[; ;PGM_5.c: 959: }
[; ;PGM_5.c: 960: VAR_aus_zeit = 0;
"960
[e = _VAR_aus_zeit -> 0 `i ]
[; ;PGM_5.c: 961: while ((A_D_Wert [3] < 77)&&(VAR_aus_zeit <= 3000)){
"961
[e $U 501  ]
[e :U 502 ]
{
[; ;PGM_5.c: 962: Power_Ausrichten();
"962
[e ( _Power_Ausrichten ..  ]
[; ;PGM_5.c: 963: LATD = (LATD & 0b11110000)|0b00001010;
"963
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 10 `i `uc ]
[; ;PGM_5.c: 964: _delay((unsigned long)((Ausrichten_Fahren)*(20000000/4000.0)));
"964
[e ( __delay (1 -> * -> _Ausrichten_Fahren `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 965: LATD = (LATD & 0b11110000);
"965
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 966: _delay((unsigned long)((Ausrichten_Stopp)*(20000000/4000.0)));
"966
[e ( __delay (1 -> * -> _Ausrichten_Stopp `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 967: opfer();
"967
[e ( _opfer ..  ]
[; ;PGM_5.c: 968: VAR_aus_zeit ++ ;
"968
[e ++ _VAR_aus_zeit -> 1 `i ]
"969
}
[e :U 501 ]
"961
[e $ && < -> *U + &U _A_D_Wert * -> -> -> 3 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 77 `i <= _VAR_aus_zeit -> 3000 `i 502  ]
[e :U 503 ]
[; ;PGM_5.c: 969: }
[; ;PGM_5.c: 970: VAR_aus_zeit = 0;
"970
[e = _VAR_aus_zeit -> 0 `i ]
[; ;PGM_5.c: 971: while ((A_D_Wert [3] > 81)&&(!VAR_aus_zeit <= 3000)){
"971
[e $U 504  ]
[e :U 505 ]
{
[; ;PGM_5.c: 972: Power_Ausrichten();
"972
[e ( _Power_Ausrichten ..  ]
[; ;PGM_5.c: 973: LATD = (LATD & 0b11110000)|0b00000101;
"973
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 5 `i `uc ]
[; ;PGM_5.c: 974: _delay((unsigned long)((Ausrichten_Fahren)*(20000000/4000.0)));
"974
[e ( __delay (1 -> * -> _Ausrichten_Fahren `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 975: LATD = (LATD & 0b11110000);
"975
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 976: _delay((unsigned long)((Ausrichten_Stopp)*(20000000/4000.0)));
"976
[e ( __delay (1 -> * -> _Ausrichten_Stopp `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 977: opfer();
"977
[e ( _opfer ..  ]
[; ;PGM_5.c: 978: VAR_aus_zeit ++ ;
"978
[e ++ _VAR_aus_zeit -> 1 `i ]
"979
}
[e :U 504 ]
"971
[e $ && > -> *U + &U _A_D_Wert * -> -> -> 3 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 81 `i <= -> ! != _VAR_aus_zeit -> 0 `i `i -> 3000 `i 505  ]
[e :U 506 ]
"980
}
[e :U 488 ]
[; ;PGM_5.c: 979: }
[; ;PGM_5.c: 980: }
[; ;PGM_5.c: 981: }
"981
[e :UE 479 ]
}
"982
[v _hinten_ausrichten `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 982: void hinten_ausrichten (void) {
[e :U _hinten_ausrichten ]
[f ]
[; ;PGM_5.c: 983: if ((A_D_Wert [4] >Schwellwert_Ausrichten)&&( A_D_Wert [7] > Schwellwert_Ausrichten )) {
"983
[e $ ! && > -> *U + &U _A_D_Wert * -> -> -> 4 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _Schwellwert_Ausrichten `i > -> *U + &U _A_D_Wert * -> -> -> 7 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _Schwellwert_Ausrichten `i 508  ]
{
[; ;PGM_5.c: 984: while ((A_D_Wert [7] < 81)&&(VAR_aus_zeit <= 3000)){
"984
[e $U 509  ]
[e :U 510 ]
{
[; ;PGM_5.c: 985: Power_Ausrichten();
"985
[e ( _Power_Ausrichten ..  ]
[; ;PGM_5.c: 986: LATD = (LATD & 0b11110000)|0b00000101;
"986
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 5 `i `uc ]
[; ;PGM_5.c: 987: _delay((unsigned long)((Ausrichten_Fahren)*(20000000/4000.0)));
"987
[e ( __delay (1 -> * -> _Ausrichten_Fahren `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 988: LATD = (LATD & 0b11110000);
"988
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 989: _delay((unsigned long)((Ausrichten_Stopp)*(20000000/4000.0)));
"989
[e ( __delay (1 -> * -> _Ausrichten_Stopp `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 990: opfer();
"990
[e ( _opfer ..  ]
[; ;PGM_5.c: 991: VAR_aus_zeit ++ ;
"991
[e ++ _VAR_aus_zeit -> 1 `i ]
"992
}
[e :U 509 ]
"984
[e $ && < -> *U + &U _A_D_Wert * -> -> -> 7 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 81 `i <= _VAR_aus_zeit -> 3000 `i 510  ]
[e :U 511 ]
[; ;PGM_5.c: 992: }
[; ;PGM_5.c: 993: VAR_aus_zeit = 0;
"993
[e = _VAR_aus_zeit -> 0 `i ]
[; ;PGM_5.c: 994: while ((A_D_Wert [7] > 77)&&(VAR_aus_zeit <= 3000)){
"994
[e $U 512  ]
[e :U 513 ]
{
[; ;PGM_5.c: 995: Power_Ausrichten();
"995
[e ( _Power_Ausrichten ..  ]
[; ;PGM_5.c: 996: LATD = (LATD & 0b11110000)|0b00001010;
"996
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 10 `i `uc ]
[; ;PGM_5.c: 997: _delay((unsigned long)((Ausrichten_Fahren)*(20000000/4000.0)));
"997
[e ( __delay (1 -> * -> _Ausrichten_Fahren `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 998: LATD = (LATD & 0b11110000);
"998
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 999: _delay((unsigned long)((Ausrichten_Stopp)*(20000000/4000.0)));
"999
[e ( __delay (1 -> * -> _Ausrichten_Stopp `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1000: opfer();
"1000
[e ( _opfer ..  ]
[; ;PGM_5.c: 1001: VAR_aus_zeit ++ ;
"1001
[e ++ _VAR_aus_zeit -> 1 `i ]
"1002
}
[e :U 512 ]
"994
[e $ && > -> *U + &U _A_D_Wert * -> -> -> 7 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 77 `i <= _VAR_aus_zeit -> 3000 `i 513  ]
[e :U 514 ]
[; ;PGM_5.c: 1002: }
[; ;PGM_5.c: 1003: VAR_aus_zeit = 0;
"1003
[e = _VAR_aus_zeit -> 0 `i ]
[; ;PGM_5.c: 1005: while (A_D_Wert [4] > (A_D_Wert [7] +2) && (VAR_aus_zeit <= 3000)){
"1005
[e $U 515  ]
[e :U 516 ]
{
[; ;PGM_5.c: 1006: Power_Ausrichten();
"1006
[e ( _Power_Ausrichten ..  ]
[; ;PGM_5.c: 1007: LATD = (LATD & 0b11110000)|0b00001000;
"1007
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 8 `i `uc ]
[; ;PGM_5.c: 1008: _delay((unsigned long)((Ausrichten_Fahren)*(20000000/4000.0)));
"1008
[e ( __delay (1 -> * -> _Ausrichten_Fahren `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1009: LATD = (LATD & 0b11110000);
"1009
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 1010: _delay((unsigned long)((Ausrichten_Stopp)*(20000000/4000.0)));
"1010
[e ( __delay (1 -> * -> _Ausrichten_Stopp `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1011: opfer();
"1011
[e ( _opfer ..  ]
[; ;PGM_5.c: 1012: VAR_aus_zeit ++ ;
"1012
[e ++ _VAR_aus_zeit -> 1 `i ]
"1013
}
[e :U 515 ]
"1005
[e $ && > -> *U + &U _A_D_Wert * -> -> -> 4 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i + -> *U + &U _A_D_Wert * -> -> -> 7 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 2 `i <= _VAR_aus_zeit -> 3000 `i 516  ]
[e :U 517 ]
[; ;PGM_5.c: 1013: }
[; ;PGM_5.c: 1014: VAR_aus_zeit = 0;
"1014
[e = _VAR_aus_zeit -> 0 `i ]
[; ;PGM_5.c: 1015: while(A_D_Wert [4] < (A_D_Wert [7] +2 )&& (VAR_aus_zeit <= 3000)){
"1015
[e $U 518  ]
[e :U 519 ]
{
[; ;PGM_5.c: 1016: Power_Ausrichten();
"1016
[e ( _Power_Ausrichten ..  ]
[; ;PGM_5.c: 1017: LATD = (LATD & 0b11110000)|0b00000010;
"1017
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 2 `i `uc ]
[; ;PGM_5.c: 1018: _delay((unsigned long)((Ausrichten_Fahren)*(20000000/4000.0)));
"1018
[e ( __delay (1 -> * -> _Ausrichten_Fahren `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1019: LATD = (LATD & 0b11110000);
"1019
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 1020: _delay((unsigned long)((Ausrichten_Stopp)*(20000000/4000.0)));
"1020
[e ( __delay (1 -> * -> _Ausrichten_Stopp `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1021: opfer();
"1021
[e ( _opfer ..  ]
[; ;PGM_5.c: 1022: VAR_aus_zeit ++ ;
"1022
[e ++ _VAR_aus_zeit -> 1 `i ]
"1023
}
[e :U 518 ]
"1015
[e $ && < -> *U + &U _A_D_Wert * -> -> -> 4 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i + -> *U + &U _A_D_Wert * -> -> -> 7 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 2 `i <= _VAR_aus_zeit -> 3000 `i 519  ]
[e :U 520 ]
[; ;PGM_5.c: 1023: }
[; ;PGM_5.c: 1024: VAR_aus_zeit = 0;
"1024
[e = _VAR_aus_zeit -> 0 `i ]
[; ;PGM_5.c: 1026: while ((A_D_Wert [7] < 81)&&(VAR_aus_zeit <= 3000)){
"1026
[e $U 521  ]
[e :U 522 ]
{
[; ;PGM_5.c: 1027: Power_Ausrichten();
"1027
[e ( _Power_Ausrichten ..  ]
[; ;PGM_5.c: 1028: LATD = (LATD & 0b11110000)|0b00000101;
"1028
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 5 `i `uc ]
[; ;PGM_5.c: 1029: _delay((unsigned long)((Ausrichten_Fahren)*(20000000/4000.0)));
"1029
[e ( __delay (1 -> * -> _Ausrichten_Fahren `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1030: LATD = (LATD & 0b11110000);
"1030
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 1031: _delay((unsigned long)((Ausrichten_Stopp)*(20000000/4000.0)));
"1031
[e ( __delay (1 -> * -> _Ausrichten_Stopp `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1032: opfer();
"1032
[e ( _opfer ..  ]
[; ;PGM_5.c: 1033: VAR_aus_zeit ++ ;
"1033
[e ++ _VAR_aus_zeit -> 1 `i ]
"1034
}
[e :U 521 ]
"1026
[e $ && < -> *U + &U _A_D_Wert * -> -> -> 7 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 81 `i <= _VAR_aus_zeit -> 3000 `i 522  ]
[e :U 523 ]
[; ;PGM_5.c: 1034: }
[; ;PGM_5.c: 1035: VAR_aus_zeit = 0;
"1035
[e = _VAR_aus_zeit -> 0 `i ]
[; ;PGM_5.c: 1037: while ((A_D_Wert [7] > 77)&&(VAR_aus_zeit <= 3000)){
"1037
[e $U 524  ]
[e :U 525 ]
{
[; ;PGM_5.c: 1038: Power_Ausrichten();
"1038
[e ( _Power_Ausrichten ..  ]
[; ;PGM_5.c: 1039: LATD = (LATD & 0b11110000)|0b00001010;
"1039
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 10 `i `uc ]
[; ;PGM_5.c: 1040: _delay((unsigned long)((Ausrichten_Fahren)*(20000000/4000.0)));
"1040
[e ( __delay (1 -> * -> _Ausrichten_Fahren `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1041: LATD = (LATD & 0b11110000);
"1041
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 1042: _delay((unsigned long)((Ausrichten_Stopp)*(20000000/4000.0)));
"1042
[e ( __delay (1 -> * -> _Ausrichten_Stopp `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1043: opfer();
"1043
[e ( _opfer ..  ]
[; ;PGM_5.c: 1044: VAR_aus_zeit ++ ;
"1044
[e ++ _VAR_aus_zeit -> 1 `i ]
"1045
}
[e :U 524 ]
"1037
[e $ && > -> *U + &U _A_D_Wert * -> -> -> 7 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 77 `i <= _VAR_aus_zeit -> 3000 `i 525  ]
[e :U 526 ]
"1046
}
[e :U 508 ]
[; ;PGM_5.c: 1045: }
[; ;PGM_5.c: 1046: }
[; ;PGM_5.c: 1047: }
"1047
[e :UE 507 ]
}
"1048
[v _links_ausrichten `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 1048: void links_ausrichten (void) {
[e :U _links_ausrichten ]
[f ]
[; ;PGM_5.c: 1049: if (( A_D_Wert [1] > Schwellwert_Ausrichten )&&( A_D_Wert [6] > Schwellwert_Ausrichten )){
"1049
[e $ ! && > -> *U + &U _A_D_Wert * -> -> -> 1 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _Schwellwert_Ausrichten `i > -> *U + &U _A_D_Wert * -> -> -> 6 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _Schwellwert_Ausrichten `i 528  ]
{
[; ;PGM_5.c: 1050: VAR_aus_zeit = 0;
"1050
[e = _VAR_aus_zeit -> 0 `i ]
[; ;PGM_5.c: 1051: while ((A_D_Wert [6] > A_D_Wert [1] ) && (VAR_aus_zeit <= 3000)){
"1051
[e $U 529  ]
[e :U 530 ]
{
[; ;PGM_5.c: 1052: Power_Ausrichten();
"1052
[e ( _Power_Ausrichten ..  ]
[; ;PGM_5.c: 1053: LATD = (LATD & 0b11110000)|0b00001000;
"1053
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 8 `i `uc ]
[; ;PGM_5.c: 1054: _delay((unsigned long)((Ausrichten_Fahren)*(20000000/4000.0)));
"1054
[e ( __delay (1 -> * -> _Ausrichten_Fahren `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1055: LATD = (LATD & 0b11110000);
"1055
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 1056: _delay((unsigned long)((Ausrichten_Stopp)*(20000000/4000.0)));
"1056
[e ( __delay (1 -> * -> _Ausrichten_Stopp `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1057: opfer();
"1057
[e ( _opfer ..  ]
[; ;PGM_5.c: 1058: VAR_aus_zeit ++ ;
"1058
[e ++ _VAR_aus_zeit -> 1 `i ]
"1059
}
[e :U 529 ]
"1051
[e $ && > -> *U + &U _A_D_Wert * -> -> -> 6 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> *U + &U _A_D_Wert * -> -> -> 1 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i <= _VAR_aus_zeit -> 3000 `i 530  ]
[e :U 531 ]
[; ;PGM_5.c: 1059: }
[; ;PGM_5.c: 1060: VAR_aus_zeit = 0;
"1060
[e = _VAR_aus_zeit -> 0 `i ]
[; ;PGM_5.c: 1061: while ((A_D_Wert [6] < A_D_Wert [1] ) && (VAR_aus_zeit <= 3000)){
"1061
[e $U 532  ]
[e :U 533 ]
{
[; ;PGM_5.c: 1062: Power_Ausrichten();
"1062
[e ( _Power_Ausrichten ..  ]
[; ;PGM_5.c: 1063: LATD = (LATD & 0b11110000)|0b00000010 ;
"1063
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 2 `i `uc ]
[; ;PGM_5.c: 1064: _delay((unsigned long)((Ausrichten_Fahren)*(20000000/4000.0)));
"1064
[e ( __delay (1 -> * -> _Ausrichten_Fahren `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1065: LATD = (LATD & 0b11110000);
"1065
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 1066: _delay((unsigned long)((Ausrichten_Stopp)*(20000000/4000.0)));
"1066
[e ( __delay (1 -> * -> _Ausrichten_Stopp `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1067: opfer();
"1067
[e ( _opfer ..  ]
[; ;PGM_5.c: 1068: VAR_aus_zeit ++ ;
"1068
[e ++ _VAR_aus_zeit -> 1 `i ]
"1069
}
[e :U 532 ]
"1061
[e $ && < -> *U + &U _A_D_Wert * -> -> -> 6 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> *U + &U _A_D_Wert * -> -> -> 1 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i <= _VAR_aus_zeit -> 3000 `i 533  ]
[e :U 534 ]
"1070
}
[e :U 528 ]
[; ;PGM_5.c: 1069: }
[; ;PGM_5.c: 1070: }
[; ;PGM_5.c: 1071: }
"1071
[e :UE 527 ]
}
"1072
[v _rechts_ausrichten `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 1072: void rechts_ausrichten (void) {
[e :U _rechts_ausrichten ]
[f ]
[; ;PGM_5.c: 1073: if (( A_D_Wert [2] > 63 )&&( A_D_Wert [5] > 63 )) {
"1073
[e $ ! && > -> *U + &U _A_D_Wert * -> -> -> 2 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 63 `i > -> *U + &U _A_D_Wert * -> -> -> 5 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 63 `i 536  ]
{
[; ;PGM_5.c: 1074: VAR_aus_zeit = 0;
"1074
[e = _VAR_aus_zeit -> 0 `i ]
[; ;PGM_5.c: 1075: while ((A_D_Wert [2] > A_D_Wert [5] +2 ) && (VAR_aus_zeit <= 3000)){
"1075
[e $U 537  ]
[e :U 538 ]
{
[; ;PGM_5.c: 1076: Power_Ausrichten();
"1076
[e ( _Power_Ausrichten ..  ]
[; ;PGM_5.c: 1077: LATD = (LATD & 0b11110000)|0b00001000;
"1077
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 8 `i `uc ]
[; ;PGM_5.c: 1078: _delay((unsigned long)((Ausrichten_Fahren)*(20000000/4000.0)));
"1078
[e ( __delay (1 -> * -> _Ausrichten_Fahren `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1079: LATD = (LATD & 0b11110000);
"1079
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 1080: _delay((unsigned long)((Ausrichten_Stopp)*(20000000/4000.0)));
"1080
[e ( __delay (1 -> * -> _Ausrichten_Stopp `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1081: opfer();
"1081
[e ( _opfer ..  ]
[; ;PGM_5.c: 1082: VAR_aus_zeit ++ ;
"1082
[e ++ _VAR_aus_zeit -> 1 `i ]
"1083
}
[e :U 537 ]
"1075
[e $ && > -> *U + &U _A_D_Wert * -> -> -> 2 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i + -> *U + &U _A_D_Wert * -> -> -> 5 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 2 `i <= _VAR_aus_zeit -> 3000 `i 538  ]
[e :U 539 ]
[; ;PGM_5.c: 1083: }
[; ;PGM_5.c: 1084: VAR_aus_zeit = 0;
"1084
[e = _VAR_aus_zeit -> 0 `i ]
[; ;PGM_5.c: 1085: while ((A_D_Wert [2] < A_D_Wert [5] +2 ) && (VAR_aus_zeit <= 3000)){
"1085
[e $U 540  ]
[e :U 541 ]
{
[; ;PGM_5.c: 1086: Power_Ausrichten();
"1086
[e ( _Power_Ausrichten ..  ]
[; ;PGM_5.c: 1087: LATD = (LATD & 0b11110000)|0b00000010 ;
"1087
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 2 `i `uc ]
[; ;PGM_5.c: 1088: _delay((unsigned long)((Ausrichten_Fahren)*(20000000/4000.0)));
"1088
[e ( __delay (1 -> * -> _Ausrichten_Fahren `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1089: LATD = (LATD & 0b11110000);
"1089
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 1090: _delay((unsigned long)((Ausrichten_Stopp)*(20000000/4000.0)));
"1090
[e ( __delay (1 -> * -> _Ausrichten_Stopp `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1091: opfer();
"1091
[e ( _opfer ..  ]
[; ;PGM_5.c: 1092: VAR_aus_zeit ++ ;
"1092
[e ++ _VAR_aus_zeit -> 1 `i ]
"1093
}
[e :U 540 ]
"1085
[e $ && < -> *U + &U _A_D_Wert * -> -> -> 2 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i + -> *U + &U _A_D_Wert * -> -> -> 5 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 2 `i <= _VAR_aus_zeit -> 3000 `i 541  ]
[e :U 542 ]
"1094
}
[e :U 536 ]
[; ;PGM_5.c: 1093: }
[; ;PGM_5.c: 1094: }
[; ;PGM_5.c: 1095: }
"1095
[e :UE 535 ]
}
"1096
[v _hintenausrichtenopfer `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 1096: void hintenausrichtenopfer (void){
[e :U _hintenausrichtenopfer ]
[f ]
[; ;PGM_5.c: 1097: if ((A_D_Wert [4] >Schwellwert_Ausrichten)&&( A_D_Wert [7] > Schwellwert_Ausrichten )){
"1097
[e $ ! && > -> *U + &U _A_D_Wert * -> -> -> 4 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _Schwellwert_Ausrichten `i > -> *U + &U _A_D_Wert * -> -> -> 7 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _Schwellwert_Ausrichten `i 544  ]
{
[; ;PGM_5.c: 1098: VAR_aus_zeit = 0;
"1098
[e = _VAR_aus_zeit -> 0 `i ]
[; ;PGM_5.c: 1099: while (A_D_Wert [4] > (A_D_Wert [7]) && (VAR_aus_zeit <= 3000)){
"1099
[e $U 545  ]
[e :U 546 ]
{
[; ;PGM_5.c: 1100: Power_Ausrichten();
"1100
[e ( _Power_Ausrichten ..  ]
[; ;PGM_5.c: 1101: LATD = (LATD & 0b11110000)|0b00001000;
"1101
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 8 `i `uc ]
[; ;PGM_5.c: 1102: _delay((unsigned long)((Ausrichten_Fahren)*(20000000/4000.0)));
"1102
[e ( __delay (1 -> * -> _Ausrichten_Fahren `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1103: LATD = (LATD & 0b11110000);
"1103
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 1104: _delay((unsigned long)((Ausrichten_Stopp)*(20000000/4000.0)));
"1104
[e ( __delay (1 -> * -> _Ausrichten_Stopp `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1105: VAR_aus_zeit ++ ;
"1105
[e ++ _VAR_aus_zeit -> 1 `i ]
"1106
}
[e :U 545 ]
"1099
[e $ && > -> *U + &U _A_D_Wert * -> -> -> 4 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> *U + &U _A_D_Wert * -> -> -> 7 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i <= _VAR_aus_zeit -> 3000 `i 546  ]
[e :U 547 ]
[; ;PGM_5.c: 1106: }
[; ;PGM_5.c: 1107: VAR_aus_zeit = 0;
"1107
[e = _VAR_aus_zeit -> 0 `i ]
[; ;PGM_5.c: 1108: while(A_D_Wert [4] < (A_D_Wert [7] )&& (VAR_aus_zeit <= 3000)){
"1108
[e $U 548  ]
[e :U 549 ]
{
[; ;PGM_5.c: 1109: Power_Ausrichten();
"1109
[e ( _Power_Ausrichten ..  ]
[; ;PGM_5.c: 1110: LATD = (LATD & 0b11110000)|0b00000010;
"1110
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 2 `i `uc ]
[; ;PGM_5.c: 1111: _delay((unsigned long)((Ausrichten_Fahren)*(20000000/4000.0)));
"1111
[e ( __delay (1 -> * -> _Ausrichten_Fahren `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1112: LATD = (LATD & 0b11110000);
"1112
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 1113: _delay((unsigned long)((Ausrichten_Stopp)*(20000000/4000.0)));
"1113
[e ( __delay (1 -> * -> _Ausrichten_Stopp `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1114: VAR_aus_zeit ++ ;
"1114
[e ++ _VAR_aus_zeit -> 1 `i ]
"1115
}
[e :U 548 ]
"1108
[e $ && < -> *U + &U _A_D_Wert * -> -> -> 4 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> *U + &U _A_D_Wert * -> -> -> 7 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i <= _VAR_aus_zeit -> 3000 `i 549  ]
[e :U 550 ]
[; ;PGM_5.c: 1115: }
[; ;PGM_5.c: 1116: VAR_aus_zeit = 0;
"1116
[e = _VAR_aus_zeit -> 0 `i ]
[; ;PGM_5.c: 1117: while ((A_D_Wert [7] < 81)&&(VAR_aus_zeit <= 3000)){
"1117
[e $U 551  ]
[e :U 552 ]
{
[; ;PGM_5.c: 1118: Power_Ausrichten();
"1118
[e ( _Power_Ausrichten ..  ]
[; ;PGM_5.c: 1119: LATD = (LATD & 0b11110000)|0b00000101;
"1119
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 5 `i `uc ]
[; ;PGM_5.c: 1120: _delay((unsigned long)((Ausrichten_Fahren)*(20000000/4000.0)));
"1120
[e ( __delay (1 -> * -> _Ausrichten_Fahren `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1121: LATD = (LATD & 0b11110000);
"1121
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 1122: _delay((unsigned long)((Ausrichten_Stopp)*(20000000/4000.0)));
"1122
[e ( __delay (1 -> * -> _Ausrichten_Stopp `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1123: VAR_aus_zeit ++ ;
"1123
[e ++ _VAR_aus_zeit -> 1 `i ]
"1124
}
[e :U 551 ]
"1117
[e $ && < -> *U + &U _A_D_Wert * -> -> -> 7 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 81 `i <= _VAR_aus_zeit -> 3000 `i 552  ]
[e :U 553 ]
[; ;PGM_5.c: 1124: }
[; ;PGM_5.c: 1125: VAR_aus_zeit = 0;
"1125
[e = _VAR_aus_zeit -> 0 `i ]
[; ;PGM_5.c: 1126: while ((A_D_Wert [7] > 79)&&(VAR_aus_zeit <= 3000)){
"1126
[e $U 554  ]
[e :U 555 ]
{
[; ;PGM_5.c: 1127: Power_Ausrichten();
"1127
[e ( _Power_Ausrichten ..  ]
[; ;PGM_5.c: 1128: LATD = (LATD & 0b11110000)|0b00001010;
"1128
[e = _LATD -> | & -> _LATD `i -> 240 `i -> 10 `i `uc ]
[; ;PGM_5.c: 1129: _delay((unsigned long)((Ausrichten_Fahren)*(20000000/4000.0)));
"1129
[e ( __delay (1 -> * -> _Ausrichten_Fahren `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1130: LATD = (LATD & 0b11110000);
"1130
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 1131: _delay((unsigned long)((Ausrichten_Stopp)*(20000000/4000.0)));
"1131
[e ( __delay (1 -> * -> _Ausrichten_Stopp `d / -> -> 20000000 `l `d .4000.0 `ul ]
[; ;PGM_5.c: 1132: VAR_aus_zeit ++ ;
"1132
[e ++ _VAR_aus_zeit -> 1 `i ]
"1133
}
[e :U 554 ]
"1126
[e $ && > -> *U + &U _A_D_Wert * -> -> -> 7 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 79 `i <= _VAR_aus_zeit -> 3000 `i 555  ]
[e :U 556 ]
"1134
}
[e :U 544 ]
[; ;PGM_5.c: 1133: }
[; ;PGM_5.c: 1134: }
[; ;PGM_5.c: 1135: }
"1135
[e :UE 543 ]
}
"1140
[v _cm_fahren `(v ~T0 @X0 1 ef ]
{
[; ;PGM_5.c: 1140: void cm_fahren (void){
[e :U _cm_fahren ]
[f ]
[; ;PGM_5.c: 1142: Strecke_fahren(5,LATD = (LATD & 0b11110000)|0b00001010);
"1142
[e ( _Strecke_fahren (2 , -> -> 5 `i `uc = _LATD -> | & -> _LATD `i -> 240 `i -> 10 `i `uc ]
[; ;PGM_5.c: 1143: while (!Flag_Strecke_erreicht){
"1143
[e $U 558  ]
[e :U 559 ]
{
[; ;PGM_5.c: 1144: opfer();
"1144
[e ( _opfer ..  ]
[; ;PGM_5.c: 1145: schwarzeplatte();
"1145
[e ( _schwarzeplatte ..  ]
"1146
}
[e :U 558 ]
"1143
[e $ ! _Flag_Strecke_erreicht 559  ]
[e :U 560 ]
[; ;PGM_5.c: 1146: }
[; ;PGM_5.c: 1147: LATD = (LATD & 0b11110000);
"1147
[e = _LATD -> & -> _LATD `i -> 240 `i `uc ]
[; ;PGM_5.c: 1148: }
"1148
[e :UE 557 ]
}
"1149
[v _Strecke_fahren `(v ~T0 @X0 1 ef2`uc`uc ]
{
[; ;PGM_5.c: 1149: void Strecke_fahren(char Length, char Direction) {
[e :U _Strecke_fahren ]
[v _Length `uc ~T0 @X0 1 r1 ]
[v _Direction `uc ~T0 @X0 1 r2 ]
[f ]
[; ;PGM_5.c: 1150: IOCIE = 0;
"1150
[e = _IOCIE -> -> 0 `i `b ]
[; ;PGM_5.c: 1152: Encoder = 0;
"1152
[e = _Encoder -> -> 0 `i `uc ]
[; ;PGM_5.c: 1154: Strecke = Length;
"1154
[e = _Strecke -> _Length `i ]
[; ;PGM_5.c: 1155: Flag_Strecke_erreicht = 0;
"1155
[e = _Flag_Strecke_erreicht -> -> 0 `i `b ]
[; ;PGM_5.c: 1156: Flag_Strecke_messen = 1;
"1156
[e = _Flag_Strecke_messen -> -> 1 `i `b ]
[; ;PGM_5.c: 1157: IOCIE = 1;
"1157
[e = _IOCIE -> -> 1 `i `b ]
[; ;PGM_5.c: 1158: Direction;
"1158
[e _Direction ]
[; ;PGM_5.c: 1159: }
"1159
[e :UE 561 ]
}
[v $root$_Interrupt `(v ~T0 @X0 0 e ]
[v F2284 `(v ~T0 @X0 1 tf ]
"1162
[v _Interrupt `IF2284 ~T0 @X0 1 e ]
{
[; ;PGM_5.c: 1162: void interrupt Interrupt(void) {
[e :U _Interrupt ]
[f ]
[; ;PGM_5.c: 1167: if (TMR0IF) {
"1167
[e $ ! _TMR0IF 563  ]
{
[; ;PGM_5.c: 1169: A_D_Wert [Channel_Index] = ADRESH;
"1169
[e = *U + &U _A_D_Wert * -> _Channel_Index `ux -> -> # *U &U _A_D_Wert `ui `ux _ADRESH ]
[; ;PGM_5.c: 1171: Channel_Index++;
"1171
[e ++ _Channel_Index -> -> 1 `i `uc ]
[; ;PGM_5.c: 1173: if (Channel_Index == 11) Channel_Index = 0;
"1173
[e $ ! == -> _Channel_Index `i -> 11 `i 564  ]
[e = _Channel_Index -> -> 0 `i `uc ]
[e :U 564 ]
[; ;PGM_5.c: 1174: ADCON0 = 0b10000001 | (Channel[Channel_Index] << 2);
"1174
[e = _ADCON0 -> | -> 129 `i << -> *U + &U _Channel * -> _Channel_Index `ux -> -> # *U &U _Channel `ui `ux `i -> 2 `i `uc ]
[; ;PGM_5.c: 1178: Tick++;
"1178
[e ++ _Tick -> 1 `i ]
[; ;PGM_5.c: 1179: if(Flag_LED == 1) {
"1179
[e $ ! == -> _Flag_LED `i -> 1 `i 565  ]
{
[; ;PGM_5.c: 1180: if (Tick >= 300) {
"1180
[e $ ! >= _Tick -> 300 `i 566  ]
{
[; ;PGM_5.c: 1181: Tick = 0;
"1181
[e = _Tick -> 0 `i ]
[; ;PGM_5.c: 1182: LATA4 = !LATA4;
"1182
[e = _LATA4 ! _LATA4 ]
"1183
}
[e :U 566 ]
"1184
}
[; ;PGM_5.c: 1183: }
[; ;PGM_5.c: 1184: }
[e $U 567  ]
"1185
[e :U 565 ]
[; ;PGM_5.c: 1185: else {
{
[; ;PGM_5.c: 1186: LATA4 = 1;
"1186
[e = _LATA4 -> -> 1 `i `b ]
"1187
}
[e :U 567 ]
[; ;PGM_5.c: 1187: }
[; ;PGM_5.c: 1201: m++;
"1201
[e ++ _m -> -> 1 `i `uc ]
[; ;PGM_5.c: 1202: if (m == 12) {
"1202
[e $ ! == -> _m `i -> 12 `i 568  ]
{
[; ;PGM_5.c: 1204: m = 0;
"1204
[e = _m -> -> 0 `i `uc ]
[; ;PGM_5.c: 1205: n_US++;
"1205
[e ++ _n_US -> -> 1 `i `uc ]
[; ;PGM_5.c: 1206: if (n_US == 4) {
"1206
[e $ ! == -> _n_US `i -> 4 `i 569  ]
{
[; ;PGM_5.c: 1207: n_US = 0;
"1207
[e = _n_US -> -> 0 `i `uc ]
[; ;PGM_5.c: 1208: LATD5 = 1;
"1208
[e = _LATD5 -> -> 1 `i `b ]
[; ;PGM_5.c: 1209: _delay((unsigned long)((10)*(20000000/4000000.0)));
"1209
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
[; ;PGM_5.c: 1210: LATD5 = 0;
"1210
[e = _LATD5 -> -> 0 `i `b ]
[; ;PGM_5.c: 1211: TMR1 = 0;
"1211
[e = _TMR1 -> -> 0 `i `us ]
[; ;PGM_5.c: 1212: TMR1IF = 0;
"1212
[e = _TMR1IF -> -> 0 `i `b ]
"1213
}
[e :U 569 ]
[; ;PGM_5.c: 1213: }
[; ;PGM_5.c: 1214: n++;
"1214
[e ++ _n -> -> 1 `i `uc ]
[; ;PGM_5.c: 1215: if (n == 2) n = 0;
"1215
[e $ ! == -> _n `i -> 2 `i 570  ]
[e = _n -> -> 0 `i `uc ]
[e :U 570 ]
[; ;PGM_5.c: 1217: MLX_read ();
"1217
[e ( _MLX_read ..  ]
[; ;PGM_5.c: 1218: if (Temperatur_HI_links >= Waerme_links) Flag_T_links = 1;
"1218
[e $ ! >= -> _Temperatur_HI_links `i -> _Waerme_links `i 571  ]
[e = _Flag_T_links -> -> 1 `i `b ]
[e :U 571 ]
[; ;PGM_5.c: 1219: if (Temperatur_HI_rechts >= Waerme_rechts) Flag_T_rechts = 1;
"1219
[e $ ! >= -> _Temperatur_HI_rechts `i -> _Waerme_rechts `i 572  ]
[e = _Flag_T_rechts -> -> 1 `i `b ]
[e :U 572 ]
[; ;PGM_5.c: 1220: if (Temperatur_HI_links < Waerme_links) Flag_T_links = 0;
"1220
[e $ ! < -> _Temperatur_HI_links `i -> _Waerme_links `i 573  ]
[e = _Flag_T_links -> -> 0 `i `b ]
[e :U 573 ]
[; ;PGM_5.c: 1221: if (Temperatur_HI_rechts < Waerme_rechts) Flag_T_rechts = 0;
"1221
[e $ ! < -> _Temperatur_HI_rechts `i -> _Waerme_rechts `i 574  ]
[e = _Flag_T_rechts -> -> 0 `i `b ]
[e :U 574 ]
"1223
}
[e :U 568 ]
[; ;PGM_5.c: 1223: }
[; ;PGM_5.c: 1224: if (m == 4) {
"1224
[e $ ! == -> _m `i -> 4 `i 575  ]
{
[; ;PGM_5.c: 1225: if (n == 0) {
"1225
[e $ ! == -> _n `i -> 0 `i 576  ]
{
[; ;PGM_5.c: 1226: SSPADD = 4;
"1226
[e = _SSPADD -> -> 4 `i `uc ]
[; ;PGM_5.c: 1227: I2C_Count = 0;
"1227
[e = _I2C_Count -> -> 0 `i `uc ]
[; ;PGM_5.c: 1228: I2C_Write = 1;
"1228
[e = _I2C_Write -> -> 1 `i `b ]
[; ;PGM_5.c: 1229: I2C_Read = 0;
"1229
[e = _I2C_Read -> -> 0 `i `b ]
[; ;PGM_5.c: 1230: I2C_Add = PIC_Slave;
"1230
[e = _I2C_Add _PIC_Slave ]
[; ;PGM_5.c: 1231: I2C_Index_w = Count++;
"1231
[e = _I2C_Index_w ++ _Count -> -> 1 `i `uc ]
[; ;PGM_5.c: 1232: Register_S = I2C_Index_w;
"1232
[e = _Register_S _I2C_Index_w ]
[; ;PGM_5.c: 1233: if (Count == 20) Count = 0;
"1233
[e $ ! == -> _Count `i -> 20 `i 577  ]
[e = _Count -> -> 0 `i `uc ]
[e :U 577 ]
[; ;PGM_5.c: 1235: SEN = 1;
"1235
[e = _SEN -> -> 1 `i `b ]
"1237
}
[e :U 576 ]
"1238
}
[e :U 575 ]
[; ;PGM_5.c: 1237: }
[; ;PGM_5.c: 1238: }
[; ;PGM_5.c: 1239: if (m == 4) {
"1239
[e $ ! == -> _m `i -> 4 `i 578  ]
{
[; ;PGM_5.c: 1240: if (n == 1) {
"1240
[e $ ! == -> _n `i -> 1 `i 579  ]
{
[; ;PGM_5.c: 1241: SSPADD = 4;
"1241
[e = _SSPADD -> -> 4 `i `uc ]
[; ;PGM_5.c: 1242: I2C_Count = 0;
"1242
[e = _I2C_Count -> -> 0 `i `uc ]
[; ;PGM_5.c: 1243: I2C_Write = 0;
"1243
[e = _I2C_Write -> -> 0 `i `b ]
[; ;PGM_5.c: 1244: I2C_Read = 1;
"1244
[e = _I2C_Read -> -> 1 `i `b ]
[; ;PGM_5.c: 1245: I2C_Add = PIC_Slave;
"1245
[e = _I2C_Add _PIC_Slave ]
[; ;PGM_5.c: 1246: I2C_Index_R = 0;
"1246
[e = _I2C_Index_R -> -> 0 `i `uc ]
[; ;PGM_5.c: 1248: SEN = 1;
"1248
[e = _SEN -> -> 1 `i `b ]
"1250
}
[e :U 579 ]
"1251
}
[e :U 578 ]
[; ;PGM_5.c: 1250: }
[; ;PGM_5.c: 1251: }
[; ;PGM_5.c: 1252: if (m == 8) {
"1252
[e $ ! == -> _m `i -> 8 `i 580  ]
{
[; ;PGM_5.c: 1253: if (n == 0) {
"1253
[e $ ! == -> _n `i -> 0 `i 581  ]
{
[; ;PGM_5.c: 1254: SSPADD = 4;
"1254
[e = _SSPADD -> -> 4 `i `uc ]
[; ;PGM_5.c: 1255: I2C_Count = 0;
"1255
[e = _I2C_Count -> -> 0 `i `uc ]
[; ;PGM_5.c: 1256: I2C_Write = 1;
"1256
[e = _I2C_Write -> -> 1 `i `b ]
[; ;PGM_5.c: 1257: I2C_Read = 0;
"1257
[e = _I2C_Read -> -> 0 `i `b ]
[; ;PGM_5.c: 1258: I2C_Add = PIC_Letter_1;
"1258
[e = _I2C_Add _PIC_Letter_1 ]
[; ;PGM_5.c: 1260: Register_S = Datum1_an_Letter;
"1260
[e = _Register_S _Datum1_an_Letter ]
[; ;PGM_5.c: 1261: I2C_Index_w = 15;
"1261
[e = _I2C_Index_w -> -> 15 `i `uc ]
[; ;PGM_5.c: 1263: SEN = 1;
"1263
[e = _SEN -> -> 1 `i `b ]
"1265
}
[e :U 581 ]
"1266
}
[e :U 580 ]
[; ;PGM_5.c: 1265: }
[; ;PGM_5.c: 1266: }
[; ;PGM_5.c: 1269: if (m == 8) {
"1269
[e $ ! == -> _m `i -> 8 `i 582  ]
{
[; ;PGM_5.c: 1270: if (n == 1) {
"1270
[e $ ! == -> _n `i -> 1 `i 583  ]
{
[; ;PGM_5.c: 1271: SSPADD = 4;
"1271
[e = _SSPADD -> -> 4 `i `uc ]
[; ;PGM_5.c: 1272: I2C_Count = 0;
"1272
[e = _I2C_Count -> -> 0 `i `uc ]
[; ;PGM_5.c: 1273: I2C_Write = 0;
"1273
[e = _I2C_Write -> -> 0 `i `b ]
[; ;PGM_5.c: 1274: I2C_Read = 1;
"1274
[e = _I2C_Read -> -> 1 `i `b ]
[; ;PGM_5.c: 1275: I2C_Add = PIC_Letter_1;
"1275
[e = _I2C_Add _PIC_Letter_1 ]
[; ;PGM_5.c: 1276: I2C_Index_R = 1;
"1276
[e = _I2C_Index_R -> -> 1 `i `uc ]
[; ;PGM_5.c: 1279: SEN = 1;
"1279
[e = _SEN -> -> 1 `i `b ]
"1281
}
[e :U 583 ]
"1282
}
[e :U 582 ]
[; ;PGM_5.c: 1281: }
[; ;PGM_5.c: 1282: }
[; ;PGM_5.c: 1284: TMR0IF = 0;
"1284
[e = _TMR0IF -> -> 0 `i `b ]
[; ;PGM_5.c: 1288: GO_nDONE = 1;
"1288
[e = _GO_nDONE -> -> 1 `i `b ]
"1292
}
[e :U 563 ]
[; ;PGM_5.c: 1292: }
[; ;PGM_5.c: 1294: if (SSPIF) {
"1294
[e $ ! _SSPIF 584  ]
{
[; ;PGM_5.c: 1295: SSPIF = 0;
"1295
[e = _SSPIF -> -> 0 `i `b ]
[; ;PGM_5.c: 1296: if (I2C_Write) {
"1296
[e $ ! _I2C_Write 585  ]
{
[; ;PGM_5.c: 1297: switch (I2C_Count) {
"1297
[e $U 587  ]
{
[; ;PGM_5.c: 1299: case 0:
"1299
[e :U 588 ]
[; ;PGM_5.c: 1300: SSPBUF = (I2C_Add << 1) & 0b11111110;
"1300
[e = _SSPBUF -> & << -> _I2C_Add `i -> 1 `i -> 254 `i `uc ]
[; ;PGM_5.c: 1302: I2C_Count++;
"1302
[e ++ _I2C_Count -> -> 1 `i `uc ]
[; ;PGM_5.c: 1303: break;
"1303
[e $U 586  ]
[; ;PGM_5.c: 1305: case 1:
"1305
[e :U 589 ]
[; ;PGM_5.c: 1306: SSPBUF = Register_S;
"1306
[e = _SSPBUF _Register_S ]
[; ;PGM_5.c: 1307: I2C_Count++;
"1307
[e ++ _I2C_Count -> -> 1 `i `uc ]
[; ;PGM_5.c: 1308: break;
"1308
[e $U 586  ]
[; ;PGM_5.c: 1310: case 2:
"1310
[e :U 590 ]
[; ;PGM_5.c: 1311: SSPBUF = Datum_S[I2C_Index_w];
"1311
[e = _SSPBUF *U + &U _Datum_S * -> _I2C_Index_w `ux -> -> # *U &U _Datum_S `ui `ux ]
[; ;PGM_5.c: 1312: I2C_Count++;
"1312
[e ++ _I2C_Count -> -> 1 `i `uc ]
[; ;PGM_5.c: 1313: break;
"1313
[e $U 586  ]
[; ;PGM_5.c: 1315: case 3:
"1315
[e :U 591 ]
[; ;PGM_5.c: 1316: PEN = 1;
"1316
[e = _PEN -> -> 1 `i `b ]
[; ;PGM_5.c: 1317: I2C_Count++;
"1317
[e ++ _I2C_Count -> -> 1 `i `uc ]
[; ;PGM_5.c: 1318: I2C_Write = 0;
"1318
[e = _I2C_Write -> -> 0 `i `b ]
[; ;PGM_5.c: 1319: break;
"1319
[e $U 586  ]
[; ;PGM_5.c: 1321: default:
"1321
[e :U 592 ]
[; ;PGM_5.c: 1322: break;
"1322
[e $U 586  ]
"1323
}
[; ;PGM_5.c: 1323: }
[e $U 586  ]
"1297
[e :U 587 ]
[e [\ _I2C_Count , $ -> -> 0 `i `uc 588
 , $ -> -> 1 `i `uc 589
 , $ -> -> 2 `i `uc 590
 , $ -> -> 3 `i `uc 591
 592 ]
"1323
[e :U 586 ]
"1324
}
[e :U 585 ]
[; ;PGM_5.c: 1324: }
[; ;PGM_5.c: 1326: if (I2C_Read) {
"1326
[e $ ! _I2C_Read 593  ]
{
[; ;PGM_5.c: 1327: switch (I2C_Count) {
"1327
[e $U 595  ]
{
[; ;PGM_5.c: 1329: case 0:
"1329
[e :U 596 ]
[; ;PGM_5.c: 1330: SSPBUF = (I2C_Add << 1) | 0b00000001;
"1330
[e = _SSPBUF -> | << -> _I2C_Add `i -> 1 `i -> 1 `i `uc ]
[; ;PGM_5.c: 1331: I2C_Count++;
"1331
[e ++ _I2C_Count -> -> 1 `i `uc ]
[; ;PGM_5.c: 1332: break;
"1332
[e $U 594  ]
[; ;PGM_5.c: 1334: case 1:
"1334
[e :U 597 ]
[; ;PGM_5.c: 1335: RCEN = 1;
"1335
[e = _RCEN -> -> 1 `i `b ]
[; ;PGM_5.c: 1336: I2C_Count++;
"1336
[e ++ _I2C_Count -> -> 1 `i `uc ]
[; ;PGM_5.c: 1337: break;
"1337
[e $U 594  ]
[; ;PGM_5.c: 1339: case 2:
"1339
[e :U 598 ]
[; ;PGM_5.c: 1340: Datum_R[I2C_Index_R] = SSPBUF;
"1340
[e = *U + &U _Datum_R * -> _I2C_Index_R `ux -> -> # *U &U _Datum_R `ui `ux _SSPBUF ]
[; ;PGM_5.c: 1341: ACKDT = 1;
"1341
[e = _ACKDT -> -> 1 `i `b ]
[; ;PGM_5.c: 1342: ACKEN = 1;
"1342
[e = _ACKEN -> -> 1 `i `b ]
[; ;PGM_5.c: 1343: I2C_Count++;
"1343
[e ++ _I2C_Count -> -> 1 `i `uc ]
[; ;PGM_5.c: 1344: break;
"1344
[e $U 594  ]
[; ;PGM_5.c: 1346: case 3:
"1346
[e :U 599 ]
[; ;PGM_5.c: 1347: PEN = 1;
"1347
[e = _PEN -> -> 1 `i `b ]
[; ;PGM_5.c: 1348: I2C_Count++;
"1348
[e ++ _I2C_Count -> -> 1 `i `uc ]
[; ;PGM_5.c: 1349: I2C_Read = 0;
"1349
[e = _I2C_Read -> -> 0 `i `b ]
[; ;PGM_5.c: 1350: break;
"1350
[e $U 594  ]
[; ;PGM_5.c: 1352: default:
"1352
[e :U 600 ]
[; ;PGM_5.c: 1353: break;
"1353
[e $U 594  ]
"1354
}
[; ;PGM_5.c: 1354: }
[e $U 594  ]
"1327
[e :U 595 ]
[e [\ _I2C_Count , $ -> -> 0 `i `uc 596
 , $ -> -> 1 `i `uc 597
 , $ -> -> 2 `i `uc 598
 , $ -> -> 3 `i `uc 599
 600 ]
"1354
[e :U 594 ]
"1355
}
[e :U 593 ]
"1358
}
[e :U 584 ]
[; ;PGM_5.c: 1355: }
[; ;PGM_5.c: 1358: }
[; ;PGM_5.c: 1361: if (IOCIF) {
"1361
[e $ ! _IOCIF 601  ]
{
[; ;PGM_5.c: 1366: if (IOCBF0) {
"1366
[e $ ! _IOCBF0 602  ]
{
[; ;PGM_5.c: 1367: Encoder++;
"1367
[e ++ _Encoder -> -> 1 `i `uc ]
[; ;PGM_5.c: 1368: VAR_zeit_opfer++;
"1368
[e ++ _VAR_zeit_opfer -> 1 `i ]
[; ;PGM_5.c: 1373: IOCBF0 = 0;
"1373
[e = _IOCBF0 -> -> 0 `i `b ]
"1374
}
[e :U 602 ]
[; ;PGM_5.c: 1374: }
[; ;PGM_5.c: 1376: if (Flag_Strecke_messen) {
"1376
[e $ ! _Flag_Strecke_messen 603  ]
{
[; ;PGM_5.c: 1377: if (Encoder >= Strecke) {
"1377
[e $ ! >= -> _Encoder `i _Strecke 604  ]
{
[; ;PGM_5.c: 1378: Flag_Strecke_erreicht = 1;
"1378
[e = _Flag_Strecke_erreicht -> -> 1 `i `b ]
"1380
}
[e :U 604 ]
"1381
}
[e :U 603 ]
[; ;PGM_5.c: 1380: }
[; ;PGM_5.c: 1381: }
[; ;PGM_5.c: 1384: if ((A_D_Wert [0] > 110)&& (A_D_Wert [3] < wand)){
"1384
[e $ ! && > -> *U + &U _A_D_Wert * -> -> -> 0 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> 110 `i < -> *U + &U _A_D_Wert * -> -> -> 3 `i `ui `ux -> -> # *U &U _A_D_Wert `ui `ux `i -> _wand `i 605  ]
{
[; ;PGM_5.c: 1385: Flag_Hindernis=1;
"1385
[e = _Flag_Hindernis -> -> 1 `i `b ]
"1386
}
[e :U 605 ]
"1401
}
[e :U 601 ]
[; ;PGM_5.c: 1386: }
[; ;PGM_5.c: 1401: }
[; ;PGM_5.c: 1403: }
"1403
[e :UE 562 ]
}
